<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[反欺诈在全流程信贷中的关键指标]]></title>
      <url>/fintech/2020/11/23/Anti-fraud-indicators/</url>
      <content type="text"><![CDATA[注册登陆实名认证绑卡授信放款提现]]></content>
      <categories>
        
          <category> Fintech </category>
        
      </categories>
      <tags>
        
          <tag> 反欺诈 </tag>
        
          <tag> 关键指标 </tag>
        
          <tag> 全流程信贷 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱应用场景]]></title>
      <url>/kg/2020/11/21/KG-Application-Scenes/</url>
      <content type="text"><![CDATA[有不少人问：知识图谱可以有哪些应用，是不是只能用于搜索、问答和推荐？我的答案是：只要有数据处理的场景都可以使用知识图谱，比如：商品销售分析、大型设备故障诊断。这是因为知识图谱可以看成是一类结构化数据，只不过是三元组格式存在，但是知识图谱又不仅仅是数据，因为一个知识图谱可以有本体来规范管理，并且支持本体推理，从而支持知识的内涵和外延语义，知识图谱遵循的知识工程理论是建立在软件工程和数据工程基础上的，目前这套理论还不够完善，所以很多人会感到困惑，有时候觉得知识图谱很神秘，有时候又觉得知识图谱跟数据库没什么区别。追加一句话，如果理解了我的回答，大家就会清楚知识图谱还有很广阔的发展空间，而且只有数据处理需求越来越大，知识图谱的需求就会越来越大！另外，图谱是什么，这个没有标准答案，随着应用还会不断演化，图谱这个概念也是可分不同层次和维度的。现在迫切需要的是一本关于知识图谱工程方法的书，而不是技术书，因为技术书都是在堆砌各种技术，读者看了晕乎乎的，也搞不清楚怎么用。具备做一件事的能力不代表这件事一定可以做成，要做成一件事，还需要看成本有多高，投入有多大，很多图谱可以做的事，因为成本问题，会变成不好做。漆桂林 2020.11.20]]></content>
      <categories>
        
          <category> KG </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 应用场景 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱与教育]]></title>
      <url>/kg/2020/10/06/kg-and-edu/</url>
      <content type="text"><![CDATA[艾瑞咨询-2020年中国知识图谱行业研究报告 p36~37知识图谱在教育领域的应用场景  将教材知识进行本体建模，形成可关联性查询的知识网络。  以图结构将教学资源以及关系进行语义化组织，以便合理调用。  在知识图谱的基础上，应用大数据、AI等技术形成面向目标的个性化学习路径，实现千人千面的教学方案。  面向受教育者搭建个人图谱，通过对其知识点学习进度和考试反馈数据的实时关联，形成知识掌握状态的可视化个人画像，以至于习题推送和老师一对一教学有的放矢。  将教育领域碎片化多源异构数据进行处理，形成标准化的关联数据集，为机器学习算法训练提供充要条件。]]></content>
      <categories>
        
          <category> KG </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 教育领域 </tag>
        
          <tag> 应用场景 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱本体创建指南[译文]]]></title>
      <url>/kg/2020/10/03/ontology-tutorial/</url>
      <content type="text"><![CDATA[知识图谱本体创建指南[译文]斯坦福大学，CA，94305，作者：娜塔莉亚·诺伊（Natalya F. Noy），noy@smi.stanford.edu黛博拉·麦坚尼斯（Deborah L. McGuinness），dlm@ksl.stanford.edu为什么要创建本体本体是领域的规范概念集及其之间的逻辑关系。近年来，本体的创建已经从人工智能专家的专属领域转移到领域专家的工作中。本体在万维网上已经较为普遍。例如：雅虎的网站分类体系和亚马逊的产品分类和功能分类。万维网联盟（W3C）开发的RDF（资源描述框架）语言，支持把网页中的知识表示为机器可解析的语言，使机器可以轻松的解析和处理。美国国防高级研究计划局（DARPA）与W3C一起，通过扩展RDF并使用更具表现力的结构来扩展DARPA代理标记语言（DAML），该语言旨在促进Web上的代理交互（Hendler和McGuinness 2000）。现在，许多学科都在开发标准化的本体，领域专家可以使用本体来共享和注释其领域中的信息。医学已经产生了大量标准化、结构化的词汇集，例如：SNOMED （Price和Spackman 2000）和统一医学语言系统的语义网络（Humphreys and Lindberg 1993），同时通用本体也正在兴起，例如联合国开发计划署和美国邓白氏公司共同努力开发UNSPSC本体，该本体为产品和服务提供术语（www.unspsc.org）本体为领域中共享信息的研究人员定义了通用词汇表，包括可理解的领域基本概念以及逻辑关系。为什么有人要开发一个本体？原因如下：  达成信息结构共识  复用领域知识  领域规则显性表示  区分领域知识与运营知识  分析领域知识达成信息结构共识是开发本体的较常见目标之一（Musen 1992； Gruber 1993）。例如，几个不同的网站都包含医疗信息或提供医疗电子商务服务，如果它们全部使用术语相同本体，则机器可以从这些网站中提取并聚合信息，并且可以使用此聚合信息来回答用户查询或作为其他应用程序的输入数据。复用用于知识是本体研究激增的推动力之一。例如，许多不同领域的模型需要表示时间概念，包括时间区间、时间点、时间的相关度量等。如果一组研究人员详细开发了这种本体，那么其他研究人员可以将其复用。此外，如果我们需要构建大型本体，则可以集成若干领域的现有本体。也可以从通用本体中拓展其他领域的本体。领域规则显性表示便于当领域的知识有所更新或变化，可以轻松改变或更新领域知识。如果只是简单的把领域规则用代码的方式表示出来，不但全程依赖程序支持维护，而且不利于专家李杰和更新。此外，明确的领域知识规范对于必须了解领域术语含义的新用户很有用。  区分领域知识与运营知识是本体的另一个常见用途。可以根据规范描述从组件中配置产品的任务，并实现独立于产品和组件本身进行配置的程序。然后，可以开发PC组件和特性的本体，并应用该算法来配置定制PC。如果我们将电梯组件本体“馈入”到电梯中，我们也可以使用相同的算法来配置电梯。???分析领域知识可以使用描述性形式语言。通过对领域知识进行形式化表示，就可以有效进行本体的复用和扩展。近创建领域本体并不是目的。创建本体类似于定义数据结构以供其他程序使用，例如推理系统、领域无关的应用程序和机器等均可使用从本体和基于本体的知识库作为输入数据。在本文中，创建了一个本体包括如下概念：葡萄酒、食物、以及葡萄酒和餐食的适当组合。可以将此本体用作餐厅管理工具的应用程序中：这个应用程序可以为当天的菜单创建葡萄酒建议或回答服务员、顾客的查询。另一个应用程序可以分析酒窖的库存清单，并建议扩展哪些类别的酒类以及为即将来临的菜单或菜谱购买哪些特定酒。关于本指南本体创建可以使用Protege 2000，Ontolingua 1997，Chimaera 2000作为本体编辑环境。在本指南以Protege 2000为例。在本指南中始终使用的葡萄酒和食品示例基于本文中描述CLASSIC知识库，该知识库是一种基于描述逻辑方法的知识表示系统（Brachman等，1991）。CLASSIC教程基于其他框架系统显性描述了本例中的本体，明确说明了分类层次结构以及实体所属的具体分类。本指南中的一些本体设计思想源于有关面向对象设计的文献（Rumbaugh等，1991； Booch等，1997），但是本体开发不同于面向对象程序设计中的“类”和“关系”的设计。面向对象的程序设计主要围绕类的方法，程序员根据类的操作属性做出设计决策，而本体设计者需要则根据类的数据结构属性做出决策。本指南不是为了解决本体开发人员可能需要解决的所有问题，因此本指南中并未尝试解决所有这些问题。但是本指南试图提供一个起点，去帮助新的本体设计者创建本体的初步指南。对更复杂的结构和设计机制，本指南提供了一些参考资料。没有有一种通用的本体设计方法，本指南也没有尝试定义这样一种方法。在这里提出的想法是在我们在本体开发中发现有用的想法。在本指南的最后，我们建议了替代方法的参考文献列表。本体是什么人工智能文献包含本体的许多定义。其中许多相互矛盾。在本指南中，本体是对话语领域（类（有时称为概念））中的概念的正式的显式描述，每个概念的属性描述了概念的各种特征和属性（插槽 （有时称为角色或属性） ）以及对插槽的限制（构面（有时也称为角色限制））。本体与一组单独的类实例一起构成一个知识库。实际上，在本体结束和知识库开始之间存在一条界限。类是大多数本体的重点。类描述领域中的概念。例如，一类葡萄酒代表所有葡萄酒。特定的葡萄酒是此类的实例。阅读本文时，杯中  的波尔多葡萄酒是波尔多葡萄酒的一个实例。一个类可以具有表示比超类更具体的概念的子类。例如，我们可以将所有葡萄酒的类别分为红葡萄酒，白葡萄酒和罗斯葡萄酒。或者，我们可以将所有葡萄酒分为起泡酒和非起泡酒。插槽 描述了类和实例的属性： 拉菲堡罗斯柴尔德堡雅克红葡萄酒具有完整的酒体。它由ChâteauLafite Rothschild酒庄生产。在此示例中，我们有两个描述葡萄酒的位置：具有完整值的位置主体和具有ChâteauLafite Rothschild酒庄价值的位置制造商。在类级别，我们可以说，Wine类的实例 将具有描述其风味， 酒体， 糖 水平， 葡萄酒制造商等的位置。[1]Wine类及其子类Pauillac的所有实例都有一个老虎机制造商， 其值是Winery类的一个实例（图1）。Winery类的所有实例都有一个插槽产品 ，该插槽引用了该酿酒厂生产的所有葡萄酒（Wine及其子类的实例）。实际上，开发本体包括：  限定在本体类，  将类别按分类（子类-超类）层次结构排列  限定槽和描述用于这些槽允许值  填充中的值用于实例时隙然后，我们可以通过定义这些类的各个实例来填充特定的插槽值信息和其他插槽限制，从而创建知识库。图1。  葡萄酒领域中的某些类，实例以及它们之间的关系。  我们将黑色用于类，将红色用于实例。直接链接表示插槽和内部链接，例如instance-of和subclass-of。一种简单的知识工程方法正如我们之前所说，没有一种“正确”的方法或方法来开发本体。在这里，我们讨论要考虑的一般问题，并提供了一种开发本体的可能过程。我们描述了一种用于本体开发的迭代方法：我们从对本体的初步了解开始。然后，我们修改和完善不断发展的本体，并填写详细信息。在此过程中，我们讨论了设计师需要做出的建模决策，以及不同解决方案的利弊。首先，我们要强调本体设计中的一些基本规则，我们将多次参考这些规则。这些规则似乎很教条。但是，它们可以在许多情况下帮助您做出设计决策。1）没有一种正确的域建模方法-总是有可行的替代方法。最佳解决方案几乎总是取决于您所考虑的应用程序和预期的扩展。2）本体开发必然是一个迭代过程。3）本体中的概念应该与您感兴趣的领域中的对象（物理或逻辑）和关系紧密相关。这些最有可能是描述您的域的句子中的名词（宾语）或动词（关系）。也就是说，决定我们将使用本体做什么以及本体将要多么详细或通用将指导许多建模决策。在几种可行的替代方案中，我们将需要确定哪种方案更适合计划的任务，更直观，更可扩展且更易于维护。我们还需要记住，本体是世界现实的模型，本体中的概念必须反映这一现实。在定义了本体的初始版本之后，我们可以通过在应用程序或解决问题的方法中使用它或与本领域的专家进行讨论，或者同时使用两者来评估和调试它。结果，我们几乎肯定会需要修改初始本体。确定本体的范围和范围我们建议通过定义领域和范围来开始开发本体。也就是说，回答几个基本问​​题：  本体将涵盖的领域是什么？  为了什么，我们将使用本体论？  对于哪种类型的问题，本体中的信息应该提供答案？  谁将会使用和维护本体？这些问题的答案可能会在本体设计过程中发生变化，但是在任何给定的时间，它们都有助于限制模型的范围。考虑一下我们前面介绍的葡萄酒和食物的本体。食物和葡萄酒的表示是本体论的领域。我们计划将这种本体用于建议葡萄酒和食物良好组合的应用程序。自然地，描述葡萄酒的不同类型，主要食物类型，葡萄酒与食物的良好组合以及不良组合的概念将成为我们的本体。同时，本体不大可能包含用于管理酒厂或饭店员工库存的概念，即使这些概念在某种程度上与葡萄酒和食物的概念相关。如果我们正在设计的本体将用于协助葡萄酒杂志中文章的自然语言处理，则在本体中包含概念的同义词和词性信息可能很重要。如果本体将用于帮助餐厅顾客决定订购哪种酒，我们需要包括零售价格信息。  如果将其用于购酒者的酒窖储藏，可能需要批发价格和供货情况。  如果维护本体的人员使用与本体用户所用语言不同的语言来描述域，则可能需要提供这些语言之间的映射。能力问题。确定本体论范围的一种方法是勾勒出基于本体论的知识库应该能够回答的一系列问题，即能力问题 （Gruninger和Fox 1995）。这些问题将在稍后用作石蕊测试：本体是否包含足够的信息来回答这些类型的问题？答案是否需要特定级别的详细信息或特定区域的表示形式？这些能力问题仅是一个草图，不需要详尽。在葡萄酒和食品领域，以下是可能的能力问题：  选择葡萄酒时应考虑哪些葡萄酒特性？  是波尔多红葡萄酒或白葡萄酒？  不赤霞珠与海鲜顺利？  烤肉用葡萄酒的最佳选择是什么？  葡萄酒的哪些特性会影响其对菜肴的适合性？  特定年份的酒香或酒体会随着年份的变化而变化吗？  什么是好的年份纳帕粉黛？从这个问题列表中判断，本体将包括有关各种葡萄酒特性和葡萄酒类型，年份（好坏）的信息，这些葡萄酒的分类对选择合适的葡萄酒至关重要，推荐的葡萄酒和食物组合。考虑重用现有的本体几乎总是值得考虑别人做了什么，并检查我们是否可以针对特定领域和任务优化和扩展现有资源。如果我们的系统需要与已经承诺使用特定本体或受控词汇表的其他应用程序进行交互，则可能需要重用现有本体。  许多本体已经可以电子形式获得，并且可以导入到您正在使用的本体开发环境中。表达本体的形式主义通常并不重要，因为许多知识表示系统可以导入和导出本体。即使知识表示系统不能直接用于特定形式主义，将本体从一种形式主义转换为另一种形式主义的任务通常也不是一件容易的事。网络上和文献中都有可重用的本体库。例如，我们可以使用Ontolingua本体库（http://www.ksl.stanford.edu/software/ontolingua/）或DAML本体库（http://www.daml.org/ontologies/）。  也有许多公开可用的商业本体（例如，UNSPSC（www.unspsc.org），RosettaNet（www.rosettanet.org），DMOZ（www.dmoz.org））。例如，法国葡萄酒的知识库可能已经存在。如果我们可以导入此知识库及其基础知识，那么我们不仅将具有法国葡萄酒的分类，而且还将获得用于区分和描述葡萄酒的葡萄酒特征分类的第一遍。葡萄酒属性列表可能已经可以从商业网站（例如www.wines.com）上获得 ，客户可以将其用于购买葡萄酒。但是，对于本指南，我们将假定不存在相关的本体，并从头开始开发本体。列举本体中的重要术语写下所有我们希望对用户发表声明或向用户解释的术语的列表很有用。我们想谈什么？这些条款具有哪些属性？我们想对这些条款说些什么？例如，与葡萄酒有关的重要术语将包括葡萄酒，葡萄，酿酒厂，位置，葡萄酒的颜色，酒体，风味 和含糖量；不同类型的食物，如鱼 和红肉; 葡萄酒的亚型，例如白葡萄酒， 等等。最初，获得完整的术语列表很重要，而不必担心它们表示的概念之间的重叠，术语之间的关系或概念可能具有的任何属性，或者概念是类还是插槽。接下来的两个步骤（开发类层次结构和定义概念（插槽）的属性）紧密地交织在一起。很难先做一个，然后再做另一个。通常，我们在层次结构中创建一些概念定义，然后  继续描述这些概念的属性，依此类推。这两个步骤也是  本体设计过程中最重要的步骤。我们将在这里简要描述它们，然后在接下来的两个部分中讨论需要考虑的更复杂的问题，常见的陷阱，做出的决定等等。定义类和类层次结构开发类层次结构有几种可能的方法（Uschold和Gruninger 1996）：一个自上而下的发展过程开始的域和的概念，随后专业化的最一般的概念的定义。例如，我们可以从创建Wine 和Food的一般概念的类开始。然后，我们 通过创建其子类别来专门研究Wine类：白葡萄酒，红葡萄酒，玫瑰酒。我们可以将红酒 类进一步分类，例如，西拉， 勃艮第红葡萄酒，赤霞珠等。一个自下而上的发展过程从最具体的类的定义，层次结构的叶子，这些类的后续分组到更一般的概念。例如，我们首先定义波雅克 和玛歌 葡萄酒的类。然后，我们为这两个类（Medoc）创建一个公共超类，而该类又是Bordeaux的子类。一个组合的发展过程是自上而下的组合和自下而上的方法：我们定义更加突出的概念，然后再推广，并适当专门它们。我们可能从一些顶级概念（例如Wine）和一些特定概念（例如Margaux）开始 。然后，我们可以将它们与诸如Medoc的中级概念相关联。  然后，我们可能想从法国生成所有区域葡萄酒类，从而生成许多中级概念。图2 显示了不同普遍性级别之间的细分情况。图2。酒类 分类的不同层次：酒， 红葡萄酒，白葡萄酒，玫瑰酒是更一般的概念，即顶层。波雅克 和玛歌 是层次结构中最具体的类，即最底层。这三种方法在本质上都不比其他任何一种更好。采取的方法在很大程度上取决于域的个人观点。如果开发人员具有系统的自上而下的领域视图，则使用自上而下的方法可能会更容易。对于许多本体开发者来说，组合方法通常是最简单的，因为“中间”的概念往往是该领域中更具描述性的概念（Rosch 1978）。如果您倾向于先区分最一般的分类来考虑葡萄酒，那么自上而下的方法可能会更好。如果您希望从具体示例入手，那么自下而上的方法可能更合适。无论选择哪种方法，我们通常都从定义类开始。从步骤3中创建的列表中，我们选择描述具有独立存在的对象的术语，而不是描述这些对象的术语。这些术语将成为本体中的类，并将成为类层次结构中的基础。[2]通过询问是否作为一个类的实例，该对象是否必然（即根据定义）是某个其他类的实例，从而将这些类组织为分层分类法。如果类A是类B的超类，则B的每个实例也是A的实例换句话说，类别B表示为“种类”的概念。换句话说，类别B表示为“种类” A的概念。例如，每种黑比诺葡萄酒都一定是红酒。因此，黑皮诺（Pinot   Noir）类是红酒类的子类。图2 显示了Wine本体的部分层次结构。第4节 详细讨论了在定义类层次结构时要寻找的内容。图3。Wine类的插槽 和这些插槽的构面。厂商 插槽旁边的“ I”图标表示该插槽具有相反符号（第5.1节）定义类的属性-插槽仅这些课程将无法提供足够的信息来回答步骤1中的能力问题。一旦定义了一些类，就必须描述概念的内部结构。我们已经从步骤3中创建的术语列表中选择了类。其余大多数术语可能是这些类的属性。这些术语包括，例如，葡萄酒的颜色，酒体，风味和糖分含量以及 酒厂的位置。对于列表中的每个属性，我们必须确定其描述的类。这些属性成为附加到类的插槽。因此，Wine 类将具有以下位置：颜色，主体， 风味和糖。酒庄 课程将有一个位置 栏。通常，有几种类型的对象属性可以成为本体中的插槽：“内在”特性，例如 葡萄酒的味道;“外在”性质，如酒的名字， 和区域 它来自;份，如果对象被构造; 这些可以是物理的和抽象的“部分”（例如，一顿饭的过程）关系到其他人; 这些是班级成员与其他项目之间的关系（例如， 葡萄酒制造商，代表一种葡萄酒与一个酿酒厂之间的关系，以及 该葡萄酒所用的葡萄。）因此，除了我们先前确定的属性之外，我们还需要在Wine 类中添加以下插槽：name， area， maker， grape。 图3显示了Wine类的插槽。一个类的所有子类都继承该类 的插槽。例如，Wine类的所有插槽 都将继承到Wine的所有子类，包括Red Wine和White Wine。我们将在红酒类中添加一个附加的单宁水平（低，中或高）。所述单宁水平槽就会由表示红葡萄酒（如所有类继承波尔多 和博若莱）。应该在可以具有该属性的最通用类上附加一个插槽。例如， 葡萄酒类的酒体 和颜色应该附加在酒类上，因为它是最通用的类​​，其实例将具有酒体和颜色。定义插槽的刻面插槽可以具有描述值类型，允许的值，值的数量（基数）以及插槽可以采用的值的其他特征的不同方面。例如，名称 槽的值（如“葡萄酒的名称”）为一个字符串。即，名称 是值为字符串类型的插槽。槽位生产 （如“酿酒厂生产 这些葡萄酒”）可以具有多个值，并且这些值是Wine类的实例。也就是说，产生的 是具有类型类型为实例的插槽， 并且将Wine 作为允许的类。现在，我们将描述几个常见方面。插槽基数插槽基数定义一个插槽可以具有多少个值。某些系统仅区分单基数（最多允许一个值）和多基数（允许任意数量的值）。 葡萄酒的主体将是单个基数槽（葡萄酒只能具有一个主体）。通过在多基数时隙的特定酒厂填充生产的葡萄酒生产 用于酿酒厂 类。一些系统允许指定最小和最大基数，以更精确地描述插槽值的数量。最小基数N表示插槽必须至少具有N个值。例如， 葡萄酒的葡萄槽的最小基数为1：每种葡萄酒均由至少一种葡萄制成。M的最大基数意味着一个插槽最多可以具有M个值。 单一品种葡萄酒的葡萄位的最大基数为1：这些葡萄酒仅由一种葡萄制成。有时将最大基数设置为0可能会有用。此设置将指示该插槽对于特定子类不能具有任何值。广告位值类型值类型构面描述了可以在插槽中填充哪些类型的值。这是更常见的值类型的列表：字符串是用于诸如名称之类的插槽的最简单的值类型：该值是一个简单的字符串编号（有时使用浮点数和整数的更具体的值类型）描述带有数字值的插槽。例如， 葡萄酒的价格可以具有值类型Float布尔插槽是简单的是，没有任何标志。例如，如果我们选择不将起泡酒表示为一个单独的类，则可以将一个酒是否起泡表示为布尔值槽的值：如果该值为“ true”（“是”），则该酒为起泡酒如果值为“ false”（“否”），则该葡萄酒不是气泡酒。枚举插槽指定插槽特定允许值的列表。例如，我们可以指定风味 插槽可以采用以下三种可能的值之一：强， 中度和精致。在Protg-2000中，枚举插槽的类型为Symbol。实例型插槽允许个人之间的关系的定义。值类型为Instance的插槽还必须定义实例可以来自的允许类的列表。例如， 为Winery类产生的广告位 可以将Wine类的实例 作为其值。[3]图4显示了 在Winery类上产生的广告位的定义。图4。插槽产品的定义 描述了酒厂生产的葡萄酒。该广告位的基数为倍，值类型为Instance，并且类Wine 为值的允许类。插槽的域和范围实例类型的插槽的允许类通常称为插槽范围。在图4的示例中 ，Wine类 是Produces 广告位的范围。当为特定类别连接插槽时，某些系统允许限制插槽的范围。插槽所属的类或插槽描述的属性的类称为插槽的域。在酒厂 类是的域产生 槽。在将插槽附加到类的系统中，插槽所附加的类通常构成该插槽的域。无需单独指定域。确定插槽的域和范围的基本规则相似：在定义插槽的域或范围时，找到最通用的类或可以分别是插槽的域或范围的类。另一方面，请勿定义过于笼统的域和范围：插槽的域中的所有类均应由插槽描述，并且插槽范围中的所有类的实例应为插槽。范围过于笼统的类（即，一个不想使范围为THING的类），但是想要选择一个覆盖所有填充物的类而不是列出Produces 插槽 范围内Wine类的所有可能子类，只需列出Wine即可。同时，我们不想将插槽的范围指定为THING（本体中最通用的类）。具体来说：如果定义  插槽范围或域的类列表中包括一个类及其子类，请删除该子类。如果槽的范围包含两个葡萄酒 类和红酒类，我们可以去除红葡萄酒从范围，因为它没有添加任何新的信息：红葡萄酒是一个子类葡萄酒 ，因此插槽范围已经隐含包括它以及Wine 类的所有其他子类。如果定义  插槽范围或域的类列表包含类A的所有子类，但不包含类A本身，则范围应仅包含类A，而不包含子类。无需定义插槽的范围包括红葡萄酒，白葡萄酒和桃红葡萄酒（列举的所有直接子类酒），我们可以限制的范围内对类酒 本身。如果定义  插槽范围或域的类的列表包含A类的少数几个子类，则请考虑A类是否会做出更  合适的范围定义。在将插槽附加到类与将类添加到插槽的域相同的系统中，相同的规则适用于插槽附加：一方面，我们应尝试使其尽可能通用。另一方面，我们必须确保插槽所连接的每个类确实可以具有插槽所代表的属性。我们可以将单宁水平槽附加到代表红酒的每个类别上（例如，波尔多， 梅洛， 博若莱等）。但是，由于所有红酒都具有单宁水平，因此我们应该将插槽添加到此类更通用的红酒中。一般化的域单宁平 由于我们不使用单宁水平来描述白葡萄酒，因此进一步扩展（通过将其附加到Wine类）是不正确的。创建实例最后一步是在层次结构中创建类的各个实例。定义一个类的单个实例需要（1）选择一个类，（2）创建该类的单个实例，以及（3）填写广告位值。例如，我们可以创建一个单独的Chateau-Morgon-Beaujolais实例 来代表特定类型的博若莱葡萄酒。 夏上海摩根-博若莱是类的实例薄酒 代表所有的博若莱葡萄酒。该实例定义了以下插槽值（图5）：身体: 轻颜色: 红色味道: 玲珑、鞣酸       水平: 低葡萄: 佳美（葡萄酒级葡萄的实例）制造者: Chateau-Morgon（酒庄 级别的实例）地区: 博若莱（葡萄酒区域 等级实例）糖: 干图5。博若莱 类的实例的定义。实例是博若莱地区的Chateua Morgon博若莱酒，它是由莫贡城堡酒庄的佳美葡萄酿制而成。酒体清淡，香气细腻，红色，单宁含量低。这是干酒。定义类和类层次本节讨论的事情看出来的和定义类和类层次结构（何时进行，很容易错误的步骤4，从第3节）。如前所述，对于任何给定的域，没有单个正确的类层次结构。层次结构取决于本体的可能用途，应用程序必需的详细程度，个人喜好，有时还要求与其他模型兼容。但是，我们讨论了开发类层次结构时要牢记的几条准则。定义了大量新类后，退后一步检查新兴层次结构是否符合这些准则将很有帮助。确保类层次结构正确“是”关系类层次结构表示“ is-a”关系：如果B的每个实例也是A的实例，则类A是B的子类。例如，霞多丽 是White wine的子类。认为生物分类关系的另一种方式是“种”关系：霞多丽 是一种白葡萄酒。喷气客机是一种飞机。肉是一种食物。类的子类表示一个概念，该概念是超类表示的概念的“种类”。单一的葡萄酒不是所有葡萄酒的子类常见的建模错误是在层次结构中包含相同概念的单数形式和复数形式，从而使前者成为后者的子类。例如，它是错误的定义类葡萄酒 和一类葡萄酒 作为一个子类葡萄酒。一旦您将层次结构视为代表“某种”关系，就可以清楚地看出建模错误：单个Wine 并不是一种 Wines。避免此类错误的最佳方法始终是在命名类中使用单数或复数（有关命名概念的讨论，请参见第6节）。等级关系的可及性子类关系是可传递的：如果B是A的子类并且C是B的子类，则C是A的子类例如，我们可以定义一个Wine类，然后将一个White wine类定义为Wine的子类。然后，我们将霞多丽 类别定义为白葡萄酒的子类别。子类关系的及物性意味着霞多丽 类也是Wine的子类。有时我们区分直接子类和间接子类。一个直接的子类是类的“最近的”子类：有一类和层次结构的直接子类之间没有阶级。也就是说，在一个类及其直接超类之间的层次结构中没有其他类。在我们的示例中霞多丽 是一个直接子类白葡萄酒，而不是直接的子类酒。类层次结构的演变随着领域的发展，保持一致的类层次结构可能会变得充满挑战。例如，多年来，所有仙粉黛葡萄酒都是红色的。因此，我们将一类金粉黛 葡萄酒定义为红葡萄酒类的子类。但是，有时酿酒师开始压榨葡萄，并立即去除葡萄的颜色产生部分，从而改变了所得葡萄酒的颜色。因此，我们得到颜色为玫瑰色的“白色仙粉黛”。现在，我们需要将“仙粉黛” 类划分为两个仙粉黛类：白仙粉黛和红仙粉黛，并将它们分类为玫瑰酒和红酒的子类。 分别。类及其名称区分类及其名称很重要：类代表领域中的概念，而不是代表这些概念的词。如果我们选择其他术语，则类别的名称可能会更改，但是该术语本身代表着世界上的客观现实。例如，我们可以创建一个Shrimps类，然后将其重命名为Prawns-该类仍表示相同的概念。指虾菜肴的适当葡萄酒组合应指对虾菜肴。实际上，应始终遵循以下规则：相同概念的同义词不代表不同的类别同义词只是概念或术语的不同名称。因此，我们应该不会有一类叫做虾 和被称为类虾，以及可能称为类Crevette。而是有一个类，名为Shrimp 或Prawn。许多系统允许将同义词，  翻译或表示名称的列表与类相关联。如果系统不允许这种关联，则可以始终在类文档中列出同义词。避免上课周期我们应该避免类层次结构中的循环。我们说，当某个类A具有子类B并且同时B是A的超类时，层次结构中存在一个循环。在层次结构中创建这样的循环等于声明类A和B是等效的：全部A的实例是B的实例，B的所有实例也是A的实例。确实，由于B是A的子类，所以所有B的实例都必须是A类的实例。由于A是B的子类，所以所有A的实例也必须是B类的实例。分析类层次结构中的同级类层次结构中的兄弟姐妹兄弟姐妹在层次是属于同一类的直接子类类（参见第4.1）。层次结构中的所有兄弟姐妹（除了根节点的兄弟姐妹）都必须处于相同的通用级别。例如，白葡萄酒和霞多丽 不应该是同一类的子类（例如Wine）。 白酒比霞多丽更普遍。兄弟姐妹应该代表“沿着同一线”的概念，就像  书中相同级别的部分具有相同的一般性。从这个意义上讲，对类层次结构的要求类似于对书本大纲的要求。但是，位于层次结构根部的概念（通常表示为某些非常通用的类的直接子类，例如Thing）表示域的主要划分，而不必是相似的概念。多少是太多？对于一个类应具有的直接子类数目，没有硬性规定。但是，许多结构良好的本体具有两个到十二个直接子类。因此，以下两个准则：如果一个类只有一个直接子类，则可能存在建模问题或本体不完整。如果给定类的子类超过十二个，则可能需要其他中间类。这两个规则中的第一个类似于排版规则，即项目符号列表永远不应只有一个项目符号点。例如，大多数勃艮第红葡萄酒都是Côtesd’Or葡萄酒。假设我们只想代表大多数这种勃艮第葡萄酒。我们可以创建一个类干红葡萄酒，然后一个子类柯特斯d’Or的（图6一）。但是，如果在我们的代理中，勃艮第红葡萄酒和科特迪瓦葡萄酒基本相同（所有勃艮第红葡萄酒都为科特迪瓦葡萄酒，而科特迪瓦所有葡萄酒都是勃艮第红葡萄酒），则可以创建科特斯d’Or类不是必需的，并且不会向表示形式添加任何新信息。如果我们要包括的CTE Chalonnaise葡萄酒，这是更便宜的勃艮第葡萄酒来自该地区南部的热膨胀系数D’或，然后我们将创建的两个子类勃艮第 类：柯特斯d’Or酒店和科茨Chalonnaise（图6 b）。图6。红色勃艮第类的子类。一个类只有一个子类通常会指出建模中的问题。现在假设我们将所有类型的葡萄酒都列为Wine 类的直接子类。然后，该列表将包括这样的更一般类型的酒作为博若莱和波尔多，以及更具体的类型，如Paulliac和玛（图7一个）。Wine类 有太多直接的子类，而且，为了使本体论能够以更有条理的方式反映不同类型的葡萄酒，Medoc 应该是波尔多的子类， 而Cotes d’Or应该是勃艮第的子类。还具有红酒和白葡萄酒等中间类别这也将反映出许多人拥有的葡萄酒领域的概念模型（图7b）。但是，如果不存在自然类来将一长串同胞中的概念进行分组，则无需创建人工类，只需将类保持原样即可。毕竟，本体是对现实世界的反映，如果在现实世界中不存在任何分类，则本体应该反映出来。图7。对葡萄酒进行分类。具有所有葡萄酒和葡萄酒类型，而不具有多个分类级别。多重继承大多数知识表示系统都允许在类层次结构中进行多重继承：一个类可以是多个类的子类。假设我们要创建一个单独的甜品酒类，即甜品酒类。波特酒既是红酒又是甜品酒。[4] 因此，我们将Port类定义 为具有两个超类：Red wine和Dessert wine。Port 类的所有实例都将是Red Wine类和Dessert wine类的实例。该端口 班级将从其父母双方那里继承其槽位及其侧面。因此，将继承该插槽的值SWEET糖 从甜酒类和单宁水平槽和用于从它的色彩时隙的值红酒类。何时开设新课程（或不开设）在建模期间做出的最困难的决定之一是何时引入新类或何时通过不同的属性值表示区别。既很难导航具有许多无关类的极其嵌套的层次结构，又很难导航具有很少类且在插槽中编码了太多信息的非常扁平的层次结构。要找到合适的平衡并不容易。有几条经验法则可以帮助您决定何时在层次结构中引入新类。一个类的子类通常（1）具有超类没有的其他属性  ，或者（2）与超类不同的限制，或者（3）参与与超类不同的关系红酒可以具有不同水平的单宁，而此属性通常不用于描述葡萄酒。甜品酒的糖槽值是SWEET，而甜品酒的超类不是。黑比诺葡萄酒可能与海鲜搭配得很好，而其他红酒则不能。换句话说，通常仅在存在我们可以说出的有关该类的东西而我们不能说出的有关超类的东西时，才在层次结构中引入一个新类。实际上，每个子类都应该添加新的插槽，或者定义新的插槽值，或者为继承的插槽覆盖某些方面。但是，有时即使没有引入任何新属性，创建新类还是有用的。术语层次结构中的类不必引入新的属性例如，某些本体包括领域中使用的常用术语的大型参考层次结构。例如，电子病历系统下的本体可以包括各种疾病的分类。这种分类可能就是这样-术语的层次结构，没有属性（或具有相同的属性集）。在这种情况下，将术语组织为层次结构而不是统一列表仍然很有用，因为它将（1）允许更轻松地进行探索和导航，以及（2）使医生能够轻松地选择术语的通用级别，即适合这种情况。引入没有任何新属性的新类的另一个原因是要对概念建模，领域专家通常会在其中进行区分，即使我们可能决定不对区分本身进行建模。由于我们使用本体来促进领域专家之间以及领域专家和基于知识的系统之间的通信，因此我们希望在本体中反映专家对领域的看法。最后，我们不应该为每个附加限制创建类的子类。  例如，我们引入了红葡萄酒，白葡萄酒和玫瑰葡萄酒两类，  因为这种区别在葡萄酒界是很自然的。我们没有介绍  精致葡萄酒，中度葡萄酒等的课程。在定义类层次结构时，我们的目标是在创建对类组织有用的新类和创建太多类之间取得平衡。一个新的类或属性值在为领域建模时，我们经常需要决定是否将特定的区别（例如白葡萄酒，红葡萄酒或玫瑰酒）建模为属性值或一组类，这再次取决于领域的范围和任务手。是创建类白葡萄酒还是简单地创建类Wine 并为广告位颜色填充不同的值？答案通常在我们为本体定义的范围内。白葡萄酒的概念有多重要在我们的域中？如果葡萄酒在该领域中仅具有很小的重要性，并且该葡萄酒是否为白葡萄酒对其与其他物品的关系没有任何特别的暗示，那么我们就不应该为白葡萄酒引入单独的类别。对于工厂生产酒标的领域模型，任何颜色的酒标的规则都是相同的，区别也不是很重要。另外，对于葡萄酒，食物及其适当的组合，红酒与白葡萄酒的区别很大：它与不同的食物搭配，具有不同的特性，依此类推。同样，酒的颜色对于我们可以用来确定品酒顺序的酒知识基础也很重要。  因此，我们为白葡萄酒创建了一个单独的类。如果具有不同插槽值的概念成为其他类中不同插槽的限制。否则，我们以广告位值表示区别。同样，我们的葡萄酒本​​体具有Red Merlot和White Merlot之类的类别，而不是所有Merlot葡萄酒的单一类别：Red Merlots和White Merlots确实是不同的葡萄酒（由相同的葡萄制成），并且如果我们正在开发葡萄酒，这种区别很重要。如果区分在领域中很重要，并且我们将具有不同值的对象视为不同种类的对象，  则应该为该区分创建一个新类。考虑类的潜在个体实例也可能有助于决定是否引入新类。单个实例所属的类不应经常更改。通常，当我们使用概念的外在属性而不是内在属性来区分类时，这些类的实例通常必须从一个类迁移到另一个类。例如，冷冻酒不应该是描述餐厅酒瓶的本体中的一类。该性质C hilled 应该仅仅是葡萄酒在瓶中的一个属性，因为实例冷藏的葡萄酒可以轻松地停止作为这个类的一个实例，然后再次成为这个类的一个实例。通常，数字，颜色，位置是插槽值，并且不会导致创建新类。然而，酒是一个明显的例外，因为酒的颜色对酒的描述至为重要。再举一个例子，考虑人体解剖学本体。当我们代表肋骨时，我们是否为“第一个左肋骨”，“第二个左肋骨”等等创建一个类？还是我们有一个带肋的类肋骨，用于排列顺序和横向位置（左右）？[5]如果我们在本体中表示的关于每个肋骨的信息明显不同，那么我们确实应该为每个肋骨创建一个类。也就是说，如果我们要表示详细的邻接关系和位置信息（每个肋骨都不同）以及每个肋骨playa和它保护的器官的特定功能，我们需要这些类。如果我们以稍低的一般性水平对解剖模型进行建模，并且就我们的潜在应用而言，所有肋骨都非常相似（我们只是在X射线上谈论哪根肋骨断裂，而不会影响身体的其他部位） ，我们可能想简化层次结构，只使用Rib类，它有两个位置：横向位置，顺序。实例还是类确定特定概念是本体中的类还是单个实例取决于本体的潜在应用范围。确定类从何处结束和各个实例开始的地方，首先要确定表示形式中最低的粒度级别。粒度级别又由本体的潜在应用确定。换句话说，知识库中最具体的项目是什么？回到我们 在第3节第1步中确定的能力问题，构成这些问题答案的最具体概念是知识库中各个人的很好的候选人。个体实例是知识库中最具体的概念。例如，如果我们仅谈论将葡萄酒与食物搭配，我们将对特定的葡萄酒瓶不感兴趣。因此，诸如Sterling Vineyards Merlot之类的术语可能会成为我们使用的最具体的术语。因此，Sterling Vineyards Merlot将成为知识库中的一个实例。另一方面，如果我们除了要保持良好的葡萄酒-食物搭配知识基础之外，还希望在餐厅中保存葡萄酒的清单，则每种葡萄酒的单个瓶子都可能成为我们知识库中的单个实例。同样，如果我们想为斯特林葡萄园梅洛葡萄酒的每个特定年份记录不同的属性，则该葡萄酒的特定年份是知识库中的一个实例，而斯特林葡萄园梅洛葡萄酒是一个包含所有年份的实例的类。另一个规则可以将某些个体实例“移动”到类集中：如果概念形成自然的层次结构，那么我们应该将它们表示为类考虑葡萄酒产区。最初，我们可以将主要葡萄酒产区（例如法国，美国，德国等）定义为类别，并在这些大区域内定义特定的葡萄酒产区作为实例。例如，勃艮第地区是法国地区类别的一个实例。但是，我们还要说的是科特迪瓦地区是勃艮第地区。因此，勃艮第大区必须是一个类（为了具有子类或实例）。然而，使勃艮第地区的一类和阿摩尔滨海省或地区的实例勃艮第地区似乎是任意的：很难清楚地区分哪些区域是类，哪些是实例。因此，我们将所有葡萄酒产区定义为类。Prot-g-2000允许用户将某些类指定为Abstract，这表示该类不能具有任何直接实例。在我们的例子中，所有区域类都是抽象的（图8）。图8。葡萄酒产区的层次结构。类名旁边的“ A”图标表示这些类是抽象的，不能有任何直接实例。如果我们从类名称中省略单词“ region”，则相同的类层次结构将是不正确的。我们不能说阿尔萨斯阶级 是法国阶级的子类：阿尔萨斯不是法国的一种。但是，阿尔萨斯地区是法国的一种地区。只能将类安排在层次结构中-知识表示系统没有子实例的概念。因此，如果术语之间存在自然的层次结构，例如在第4.2节中的术语层次结构中，即使它们本身没有任何实例，也应将这些术语定义为类。限制范围作为定义类层次结构的最后注解，以下规则集始终有助于确定何时完成本体定义：本体不应包含有关该域的所有可能的信息：您不需要专门化（或泛化）超过应用程序所需的内容（每种方式最多可以多一层）。对于我们的葡萄酒和食物示例，我们不需要知道标签使用哪种纸或如何烹饪虾类。同样，本体不应包含层次结构中所有可能的属性以及类之间的区别。在我们的本体中，我们当然没有包括葡萄酒或食物可能具有的所有属性。  我们代表了本体中项目类别最突出的特性。  尽管葡萄酒书籍可以告诉我们葡萄的大小，但我们并未包括这些知识。  同样，我们也没有在系统中的所有术语之间添加可以想象的所有关系。  例如，我们在本体中没有包括诸如喜欢的葡萄酒和喜欢的食物之类的关系，只是为了更完整地表示我们定义的术语之间的所有相互联系。最后一条规则也适用于在我们已经包含在本体中的概念之间建立关系。考虑描述生物学实验的本体。本体将可能包含生物有机体的概念。它还将包含实验者 执行实验的概念（带有他的名字，隶属关系等）。的确，作为一个人的实验者也恰巧是生物体。但是，我们可能不应该在本体中包含这种区别：出于这种表示的目的，实验者不是生物体，我们可能永远不会对实验者本身进行实验。如果我们代表了一切，我们可以说的关于本体中的类的话，实验者 将成为生物有机体的一个子类。但是，对于可预见的应用程序，我们不需要包括此知识。实际上，在现有类别中包括此类附加分类实际上会造成伤害：现在，实验人员的实例将具有与  生物体有关的重量，年龄，物种和其他数据的空位，但与描述实验的上下文绝对无关。但是，我们应该将此类设计决策记录在文档中，以使那些正在关注该本体并且可能不了解我们所考虑的应用程序的用户受益。不相交的子类许多系统允许我们明确指定几个类是不相交的。如果类不能有任何共同的实例，则它们是不相交的。例如，我们本体中的甜品酒和白酒  类并非脱节：有很多酒是两者的实例。Sweet Riesling类的Rothermel Trochenbierenauslese Riesling实例就是这样的一个例子。同时，红葡萄酒和白葡萄酒是互不相干的：没有一种葡萄酒可以同时具有红白两色。指定类是不相交的  使系统能够更好地验证本体。如果我们声明红葡萄酒和白葡萄酒类是不相交的，然后创建一个类，该类是雷司令 （白葡萄酒的子类）和波特 （红葡萄酒的子类）的子类，则系统可以指出建模错误。定义属性-更多详细信息在本节中，我们讨论在定义本体中的插槽时要牢记的其他一些细节（第3节中的步骤5和步骤6）。主要地，我们讨论反向时隙和时隙的默认值。反槽一个时隙的值可以取决于另一个时隙的值。例如，如果一个 葡萄酒 是通过产生一个酒厂，则酒厂 产生 该葡萄酒。制造商 和生产商这两个关系称为逆关系。“双向存储”信息是多余的。当我们知道某酒厂生产葡萄酒时，使用知识库的应用程序总是可以推断出该酒厂生产该酒的逆关系的价值。但是，从知识获取的角度来看，使这两条信息明确可用很方便。这种方法允许用户在一种情况下填写葡萄酒，而在另一种情况下填写酒庄。然后，知识获取系统可以自动填写逆关系的值，以确保知识库的一致性。我们的例子中有一个对  逆槽：该制造商 的的槽葡萄酒 类和产生 所述的槽酒厂 类。当用户创建Wine 类的实例并填写maker 插槽的值时，系统会自动将新创建的实例添加到 相应Winery 实例的Produces插槽。例如，当我们说Sterling Merlot由Sterling Vineyard酒厂生产时，系统会自动将Sterling Merlot添加到Sterling Vineyard酒厂生产的葡萄酒清单中。（图9）。图9。具有反槽的实例。槽产生 的类酒厂 是槽的逆制造者 为类葡萄酒。填充其中一个插槽会触发另一个插槽的自动更新。默认值许多基于帧的系统都允许指定插槽的默认值。  如果某个类的大多数实例的特定插槽值都相同，则可以将该值定义为该 插槽的默认 值。然后，在创建包含该插槽的类的每个新实例时，系统会自动填写默认值。然后，我们可以将值更改为构面允许的任何其他值。也就是说，这里有默认值是为了方便：它们不会对模型施加任何新限制或以任何方式更改模型。例如，如果我们将要讨论的大多数葡萄酒是浓郁的葡萄酒，我们可以将“丰满”作为该葡萄酒的默认值。然后，除非另有说明，否则我们定义的所有葡萄酒都将是浓郁的。请注意，这与 插槽值不同。插槽值不能更改。例如， 对于甜品酒类，可以说槽糖的价值为SWEET 。然后，甜酒类的所有子类和实例都将具有槽糖的SWEET值。在任何子类或类实例中都不能更改此值。名字叫什么为本体中的概念定义命名约定，然后严格遵守这些约定，不仅使本体更易于理解，而且还有助于避免一些常见的建模错误。命名概念有很多选择。通常，没有特别的理由选择一个或另一种选择。但是，我们需要定义类和插槽的命名约定并遵守。知识表示系统的以下功能会影响命名约定的选择：  系统是否为类，插槽和实例使用相同的名称空间？也就是说，系统是否允许具有相同名称的类和槽位（例如类酒厂 和槽位酒厂）？  系统区分大小写吗？也就是说，系统是否将仅在大小写不同的名称视为不同的名称（例如Winery 和winery）？  系统允许在名称中使用哪些定界符？也就是说，名称可以包含空格，逗号，星号等吗？例如，Protg-2000为所有框架保留一个名称空间。区分大小写。因此，我们不能拥有一流的酿酒厂 和散装酿酒厂。但是，我们可以有一个Winery类 （不是大写）和一个slot winery。另一方面，CLASSIC不区分大小写，并且为类，插槽和个人维护不同的名称空间。因此，从系统角度来看，命名类和老虎机Winery都没有问题。大写和分隔符首先，如果对概念名称使用一致的大写字母，则可以大大提高本体的可读性。例如，通常使用大写的类名，并使用小写字母表示插槽名称（假设系统区分大小写）。当一个概念名称包含多个单词（例如Meal course）时，我们需要对这些单词定界。这是一些可能的选择。  使用空间：用餐过程（许多系统，包括Protg，在概念名称中都允许有空格）。  一起运行单词并大写每个新单词：MealCourse  在名称下使用下划线或破折号或其他定界符：Meal_Course，Meal_course，Meal-Course，Meal-course。（如果使用定界符，则还需要确定每个新单词是否都大写）如果知识表示系统允许在名称中使用空格，那么对于许多本体开发人员来说，使用它们可能是最直观的解决方案。但是，重要的是要考虑您的系统可能与之交互的其他系统。  如果这些系统不使用空格，或者您的表示媒体不能很好地处理空格，则使用另一种方法会很有用。单数或复数类名表示对象的集合。例如，葡萄酒 一类实际上代表了所有葡萄酒。因此，对于某些设计师而言，将类称为Wines 而不是Wine更为自然。没有其他选择比其他选择更好或更差（尽管在实践中，类名的单数用法更常见）。但是，无论选择什么，都应该在整个本体中保持一致。某些系统甚至要求其用户预先声明是否将概念名称使用单数或复数，并且不允许他们偏离该选择。始终使用相同的表单还可以防止设计人员犯下诸如创建类Wines 然后创建类Wine 作为其子类的建模错误（请参见4.1节）。前缀和后缀约定一些知识库方法建议在名称中使用前缀和后缀约定来区分类和插槽。  两种常见的做法是增加一个人─ 或后缀-of 位名称。  因此， 如果我们选择了has- 常规，我们的老虎机将成为has-maker 和has-winery。槽成为制造商-中 和酒厂-的 ，如果我们选择了OF- 约定。这种方法允许任何查看术语的人立即确定该术语是类还是空位。但是，术语名称会稍长一些。其他命名注意事项定义命名约定时，还需要考虑以下几点：请勿在概念名称中添加诸如class''， property’‘，``slot’‘等字符串。例如，从上下文中始终可以清楚地看到该概念是类还是插槽。另外，您对类和插槽使用了不同的命名约定（例如，分别使用大写和不使用大写），该名称本身将指示该概念是什么。      避免概念名称的缩写通常是一个好主意（即使用Cabernet Sauvignon而不是Cab）        类别的直接子类别的名称应全部包含或不包含超类别的名称。例如，如果我们要创建Wine 类的两个子类来表示红葡萄酒和白葡萄酒，则这两个子类名称应该是Red Wine和White Wine或Red and White，而不是Red Wine and White。  其他资源我们将Prot.g.-2000用作示例的本体开发环境。Duineveld及其同事（Duineveld等，2000） 描述并比较了许多其他本体开发环境。我们试图解决本体开发的基础知识，并且没有讨论本体开发的许多高级主题或替代方法。戈麦斯-普雷斯（G.mez-Prez 1998）和乌斯霍德（Uschold ）（Uschold and Gruninger 1996） 提出了替代的本体开发方法论。Ontolingua教程（Farquhar，1997年）讨论了知识建模的一些形式方面。当前，研究人员不仅强调本体的发展，还强调本体的分析。  随着更多本体的产生和重用，将有更多工具可用于分析本体。例如，Chimaera （McGuinness et al。2000） 提供了用于分析本体的诊断工具。Chimaera执行的分析既包括检查本体的逻辑正确性，也包括诊断常见的本体设计错误。本体设计者可能希望在不断发展的本体上运行Chimaera诊断，以确定与常见本体建模实践的一致性。结论在本指南中，我们描述了基于声明性框架的系统的本体开发方法。我们列出了本体开发过程中的步骤，并解决了定义类层次结构以及类和实例的属性的复杂问题。但是，遵循所有规则和建议后，要记住的最重要的事情之一是：对于任何域，都没有单一的正确本体。本体设计是一个创造性的过程，没有两个由不同人设计的本体是相同的。本体的潜在应用以及设计者对领域的理解和看法无疑会影响本体设计的选择。“证明在布丁中” —我们只能通过在我们为其设计的应用程序中使用本体来评估本体的质量。致谢Protg-2000（http://protege.stanford.edu）由斯坦福大学医学信息学的Mark Musen小组开发。我们使用Protog-2000的OntoViz插件生成了一些图形。我们从Ontolingua本体库（http://www.ksl.stanford.edu/software/ontolingua/）中导入了葡萄酒本体的初始版本，该库又使用了Brachman及其同事发布的版本（Brachman等，1991）。并随CLASSIC知识表示系统一起分发。然后，我们修改了本体，以提供基于声明性框架的本体的概念建模原则。雷·费尔格森（Ray Fergerson）和莫·佩莱格（Mor Peleg）对早期草案的广泛评论极大地改善了本文。参考文献Booch，G.，Rumbaugh，J。和Jacobson，I。（1997）。统一建模语言用户指南：Addison-Wesley。Brachman，RJ，McGuinness，DL，Patel-Schneider，PF，Resnick，LA和Borgida，A。（1991）。与CLASSIC一起生活：何时以及如何使用类似KL-ONE的语言。语义网络原理。JF Sowa，摩根考夫曼（Morgan Kaufmann）编辑： 401-456。Brickley，D.和Guha，RV（1999）。资源描述框架（RDF）架构规范。万维网联盟建议的建议： http : //www.w3.org/TR/PR-rdf-schema。Chimaera（2000）。Chimaera本体环境。www.ksl.stanford.edu/software/chimaeraDuineveld，AJ，Stoter，R.，Weiden，MR，Kenepa，B.和Benjamins，VR（2000）。WonderTools？本体工程工具的比较研究。国际人类计算机研究杂志 52（6）：1111-1133。Farquhar，A.（1997）。Ontolingua教程。http://ksl-web.stanford.edu/people/axf/tutorial.pdfG.mez-Préz，A.（1998年）。知识共享和重用。应用专家系统手册。利勃维茨，CRC出版社编辑。Gruber，TR（1993）。一种可移植本体规范的翻译方法。知识获取 5：199-220。Gruninger，M。和Fox，MS（1995）。本体设计和评估的方法论。在：知识共享中的基本本体问题研讨会的论文集，IJCAI-95，蒙特利尔。Hendler，J。和McGuinness，DL（2000）。DARPA代理标记语言。IEEE智能系统 16（6）：67-73。Humphreys，BL和Lindberg，DAB（1993）。UMLS项目：在用户和他们所需的信息之间建立概念上的联系。医学图书馆协会公告 81（2）：170。McGuinness，DL，Abrahams，MK，Resnick，LA，Patel-Schneider，PF，Thomason，RH，Cavalli-Sforza，V.和Conati，C.（1994）。经典知识表示系统教程。http://www.bell-labs.com/project/classic/papers/ClassTut/ClassTut.htmlMcGuinness，DL，Fikes，R.，Rice，J。和Wilder，S。（2000）。合并和测试大型本体的环境。知识表示和推理的原理：第七届国际会议论文集（KR2000）。AG Cohn，F。Giunchiglia和B. Selman，编辑。加利福尼亚州旧金山，摩根考夫曼出版社。McGuinness，DL和Wright，J.（1998）。配置的概念建模：一种基于描述逻辑的方法。工程设计，分析和制造的人工智能-有关配置的特殊问题。马萨诸塞州穆森（1992）。知识共享和重用的维度。计算机与生物医学研究 25：435-467。Ontolingua（1997）。《 Ontolingua系统参考手册》。http://www-ksl-svc.stanford.edu:5915/doc/frame-editor/index.htmlPrice，C。和Spackman，K。（2000）。SNOMED临床术语。BJHC＆IM-英国医疗计算与信息管理杂志 17（3）：27-31。Protege（2000）。Protege项目。http://protege.stanford.eduRosch，E。（1978）。分类原则。认知与分类。RE和BB Lloyd，编辑。新泽西州希尔赛德（Lawrence Erlbaum）出版商： 27-48。Rothenfluh，TR，Gennari，JH，Eriksson，H.，Puerta，AR，Tu，SW和Musen，MA（1996）。可重用的本体，知识获取工具和性能系统：  Sisyphus-2的PROT-G-II解决方案。国际人类计算机研究杂志 44：303-332。Rumbaugh，J.，Blaha，M.，Premerlani，W.，Eddy，F。和Lorensen，W。（1991）。面向对象的建模和设计。新泽西州恩格尔伍德悬崖：Prentice Hall。Uschold，M.和Gruninger，M.（1996）。本体：原理，方法和应用。知识工程评论 11（2）。[1]我们将类名大写，并以小写字母开头插槽名称。对于示例本体中的所有术语，我们还使用打字机字体。[2]我们还可以将类视为一元谓词，即具有一个自变量的问题。  例如，“这是葡萄酒吗？”   一元谓词（或类）与二进制谓词（或槽）形成对比，二元谓词具有两个参数。  例如，“这个物品的味道浓吗？” “这个东西的味道是什么？”[3]有些系统仅使用类指定值类型，而不需要实例类型插槽的特殊声明。[4]我们选择在本体中仅代表红色端口：白色端口的确存在，但极为罕见。[5] 在这里，我们假设每个解剖器官是因为我们也想谈一类“约翰1日左肋。” 现有个体的各个器官将在我们的本体中表示为个体。]]></content>
      <categories>
        
          <category> KG </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 本体设计 </tag>
        
          <tag> 本体开发 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[EverNote与Sublime搭建云端Markdown写作系统]]></title>
      <url>/tools/2020/02/16/Evernote-Sublime/</url>
      <content type="text"><![CDATA[天下苦秦久矣自从开始写博客，越来越迷恋Markdown这种优雅的写作方式，无论写什么，一直在寻觅一种优雅地、得心应手地Markdown写作系统，苦于未果。写作系统的痛点许久未找到搜寻到适合的写作系统，究其原因，主要有两大痛点未被满足：  市面上大多数Markdown编辑器都需要保存在本地，而我确需要多终端同步，在家里电脑、公司电脑以及手机端同步。  Evernote、有道云笔记等云笔记既要满足多终端云同步，同时满足Markdown编辑方式，但我需要预览、查看、编辑拆分开来（这里的预览与查看状态不同），使操作轻量化、简洁化。以上的写作环境都不能满足我轻量化、优雅地编辑体验。因此，转而继续寻觅…初见曙光直到看到吕立青的一篇文章敏捷写作：MACOS 环境下写作系统的最优配置，瞬间眼前一亮，里面提及Evernote与Sublime无缝对接的方式。  Evernote：一款多平台的云笔记；  Sublime：一款轻量级的编辑器；为什么是它们？为什么是Evernote？有道云笔记没有和Sublime联动的插件，Evernote在Sublime上有插件sublime-evernote-使用Markdown打开和保存Sublime中的Evernote笔记。为什么是Sublime？Sublime是收费软件，但可以无限期试用，有漂亮的用户界面和强大的功能，安装包小巧、功能插件丰富。这里先看一下效果吧：Sublime-Evernote插件特点  发送笔记至Evernote： 将当前视图中的Markdown文件转化为富文本格式并将其发送到Evernote，并且可设置标题、标签和存储位置；  打开Evernote笔记：Sublime命令面板可从Evernote笔记本中选择笔记，或通过搜索将富文本笔记转换成Markdown笔记在Sublime视图中显示；  更新Evernote笔记：在Sublime编辑已打开笔记的Markdown文件后，可以将其保存回Evernote（以富文本格式）；  支持全面双向Metadata：可以在Markdown文件中设置YAML Metadata更改文件中的笔记本、标题和标签；  附件：可以打开、插入、罗列、删除附件；  剪辑笔记：可将当前所选文字作为代码段保存到新笔记中；Evernote&amp;Sublime环境配置第一步，安装Evernote和Sublime，这里就不多说了，去官网下载最新版本。Sublime安装MarkdownEditingMarkdownEditing是一款Sublime中编辑Markdown的插件，安装后Sublime可支持编辑Markdown文件。在Sublime中工具栏打开命令面板，输入Package Control:Install Package打开下载仓库，输入MarkdownEditing下载安装。如果不支持在线安装，则移步MarkdownEditing-github下载，进行手动导入安装。Sublime安装Evernote插件在Sublime中工具栏打开命令面板，输入Package Control:Install Package打开下载仓库，输入Evernote下载安装。Sublime连接印象笔记账号  首先从Evernote Token获取你Evernote的Token，获取之后切记保密。  拿到Token后，在Preferences &gt; Package Settings &gt; Evernote &gt; Settings-User填写noteStoreUrl和token字段。  保存并重新启动Sublime，完成账号的关联。{    "noteStoreUrl": "your noteStoreurl XXX",    "token": "your token XXX",}Sublime操作同步至Evernote在Sublime中工具栏打开命令面板，此时输入Evernote就会出现有关操作Evernote的指令，常用指令包括：Command Palette &gt; Evernote: New empty note    //新建空笔记Command Palette &gt; Evernote: Open Evernote Note   //打开笔记本Command Palette &gt; Evernote: Send to Evernote    //发送至EvernoteCommand Palette &gt; Evernote: Update Evernote Note    //更新Evernote笔记以上只是常用指令，详细指令可查看Evernote插件的官方Github地址：sublime-evernote同时sublime-evernote非常友好的提供了快捷键设置操作，在Sublime中打开Preferences &gt; Key Bindings-User ，将以下配置项填写至其中：{ "keys": ["super+e"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Evernote: "} },{ "keys": ["ctrl+e", "ctrl+s"], "command": "send_to_evernote" },{ "keys": ["ctrl+e", "ctrl+o"], "command": "open_evernote_note" },{ "keys": ["ctrl+e", "ctrl+u"], "command": "save_evernote_note" },好了，剩下的就自己体验吧！可以说是很优雅了。MacOS中使用ShiftIt管理窗口的大小和位置这里多说两句，上面的截图使用了左右窗口，此窗口不是手动布局，而是通过ShiftIt工具进行自动布局，可使用快捷键快速布局多应用界面窗口。  安装软件时切记打开对应的权限。结合个人应用需求不断探索、寻找高效率软件，提高单位时间内的输入、产出结果。]]></content>
      <categories>
        
          <category> tools </category>
        
      </categories>
      <tags>
        
          <tag> EverNote </tag>
        
          <tag> Sublime </tag>
        
          <tag> Markdown </tag>
        
          <tag> 云端同步 </tag>
        
          <tag> 写作系统 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《漫谈产品经理》-俞军]]></title>
      <url>/pm/2020/01/29/Talking-about-product-managers/</url>
      <content type="text"><![CDATA[《漫谈产品经理》-俞军            您的浏览器不支持PDFs预览. 请下载该PDF后查看 : 点击下载PDF.俞军当年求职简历  男  26岁  上海籍  同济大学化学系五年制  览群书，多游历  97年7月起在一个国营单位筹备进口生产项目  99年4月起在一个代理公司销售进口化工原料兼报关跟单  2000年1月起在一个垂直网络公司做分析仪器资料采编  2000年7月起去一个网络公司应聘搜索引擎产品经理，却被派去做数据库策划，9月起任数据中心经理  长期想踏入搜索引擎业，无奈欲投无门，心下甚急，故有此文      如有公司想做最好的中文搜索，诚意乞一参与机会    本人热爱搜索成痴，只要是做搜索，不计较地域（无论天南海北，刀山火海），不计较职位（无论高低贵贱一线二线，与搜索相关即可），不计较薪水（可维持个人当地衣食住行即是底线），不计较工作强度（反正已习惯了每日14小时工作制）。搜索🔍研究院克隆版  搜索引擎9238的搜索研究院克隆版俞军产品经理十二条  产品经理首先是用户；  站在用户角度看问题；  用户体验是一个完整的过程；  追求效用，不做无用的东西；  发现需求，而不是创造需求；  决定不做什么往往比决定做什么重要；  用户是很难被教育的，要迎合用户，而不是改变用户；  关注最大多数用户，在关键点上超越竞争对手，快速上线，在实践中不断改进；  给用户稳定的体验预期；  如果不确定该怎么做，就先看别人是怎么做的；  把用户当傻瓜，不要让用户思考和选择，替用户预先想好；  不要给用户不想要的东西，任何没用的东西对用户而言都是一种伤害；「产品经理如何突破发展瓶颈」-3节课访谈视频访谈嘉宾: 俞军、苏杰、张涛、耿新跃、朱晓华。点击立即播放视频]]></content>
      <categories>
        
          <category> PM </category>
        
      </categories>
      <tags>
        
          <tag> 漫谈产品经理 </tag>
        
          <tag> 俞军 </tag>
        
          <tag> 滴滴 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[社会、职场100法则]]></title>
      <url>/lifes/2019/12/22/Million-annual-salary-100-rules/</url>
      <content type="text"><![CDATA[  今天在书店看到一本鸡汤手册《百万年薪100法则-陈轩说》，比较有意思，是一些金句摘选，搬过来后面持续回味。《社会&amp;职场，100法则》      【1】这派那派无论什么派，终归斗不过行动派。        【2】所谓奋斗的意义，无非是竭尽全力远离庸人！这些年拼命做事，无非是希望看到更美的风景，也希望自己能成为别人眼中不错的风景。现在回头来看，最有趣的景色，其实就在翻山越岭的路途之中。        【3】知到极处便是行，行到极处即为知，知行合一是职场最大的修行。        【4】“小和尚为啥斗得过老妖怪？”，因为“小和尚有戒律”！戒律就是让你“先为不可胜而后求胜”。        【5】毕业前几年，其实就是个体实现真正的社会化和独立意志逐渐觉醒的过程。        【6】狭路相逢勇者胜。能吃苦的人很多，但有勇气的人凤毛麟角。        【7】在最有承受能力的时候冲出去，靠的是时机，敢不敢冲出去靠的是勇气。这都取决于观念。        【8】永远不要轻视学历的力量，更不要否认和轻视名校学历的力量。这个法则适用于地球上任何国家。但名校更多的是入场券和催化剂，并不能保证商业和职场的最终成功。        【9】当一个人心智越成熟、能力越强、社会地位越高，不需要其他人提供情感和物质上的援助时，他的共情社交就越少，而功利社交就越多。        【10】粉和黑，难以持久。长远讲：路人，才是人际常态。虽有些悲哀，但这是现实。与其在可疑的人际关系上耗费心力，不如一心一意低头练剑。        【11】个人真正的长大，是认识到社会和个人发展的根本动力是交换，客观评估自己所拥有的竞争资源，用最有效的方式来配置自己的资源，并通过社会分工和交换获得最高的价值。        【12】5%的勇气锁定了100%的未来，只有迈出第一个5%，才会拥有后来的100%。有些人，一辈子爬过的高峰，只是上下班高峰。        【13】没有什么是安全的，安全的生活比死亡更糟糕；没有什么是确定的，悬而未决才是生活大美；自由的生命是缤纷高贵和绚美庄严之所在。        【14】路走久了，关系背景自然就多了。让阴谋论、背景论见鬼去吧。        【15】在积累了丰富的社会经验和行业经验后，实现财富的爆发式增长往往只需要很短的时间。        【16】人生的意义究竟是什么？管他呢！不该去追寻或者试图证明存在的意义，我们存在的本身就是最大的意义。如同流萤的莹，如同星空的星，如同草长莺飞的草，如同宇宙微尘的尘埃，四时消长，繁衍与消亡，无意义的本身就是人生所有的意义！        【17】我最喜欢知乎这句话：你爷爷不努力，你爸爸不努力，你知道来问这个问题。你再不努力，你儿子、你孙子将来还要关注这个问题。        【18】其实我们都是在海边玩沙子的小孩，在岁月之浪侵袭而来前，我们只有加油抓紧垒起自己心中的城堡。但如果遇到有沙子磨脚，不要硬扛，要先弯腰，把沙子倒出来。        【19】不管愿不愿意，无论承不承认，每个人都根据稀缺性，而被暗中标好了价格。商品的价值是使用价值，人的价值是利用价值。        【20】智慧的出发点是怀疑，道德的出发点是相信！商业中不要掺和伦理，也不要抗拒别人对你的怀疑。想获得职位，就得把事情搞定，要不然只能被离开。        【21】专业的表现就是“说到做到”。生命的本质是时间，品牌的本质是承诺，不遵守承诺就是谋财害命，连累自己的个人品牌一文不值。        【22】世界是面镜子，你只看到你愿意看到的，这叫幻境。陷入幻境很危险，挣脱出来，一需要棒喝，而需要慧根。        【23】职场中什么人容易成功？我来告诉你：傻子和疯子。傻子是肯吃亏的人，疯子是肯行动的人。        【24】生活的本质是选择，一场没有彩排的演出，一场走向坟墓的舞蹈，一场注定要孤独的盛宴，一场持续不断的试图不堕入平庸泥潭的努力。        【25】年轻人的苦恼无非是：自己想站着，亲朋好友无一例外地告诉你，跪着舒服！        【26】智商是世界的秩序，而降维攻击则是胜利者的秘密。        【27】战略的核心是重点论，本质是权衡取舍，外在体现是“放弃”。管理的核心呢？是“残忍”，要求极其理性。为什么，因为现实很残忍。        【28】岁月最大的敌手不是死亡、不是孤独、而是虚妄。管理最大的难题就是个性的成熟。        【29】除了生病和亲友去世的痛苦是真实的，其他痛苦只是价值观而已。        【30】CEO的能力是 - 专心致志的能力和无路可走时选择最佳路线的能力。        【31】个人发展的野心必须建立在公司发展的前提和依托之上，0的99%还是0。        【32】做领导的，不能逼着英雄抗事，就是笨蛋！识别不了真正的英雄，就是失职！轻易放走了英雄，简直就是犯罪。让狗熊坐在英雄的位子上，那就该沙头了。        【33】50年的利益格局叫规则；500年的利益格局叫法律；5000年的利益格局叫文化。        【34】招人就像武大郎开店，要找拥有一只价值观的人做事，否则即便能力再强也要出问题。        【35】金钱的快感，在于它能带来更多的选择，而不只是更多的物质。        【36】产品人格化，CEO明星化，是网红时代的导流技巧。        【37】以己之短，攻敌之长，是对别人几十年付出和学习的蔑视。        【38】穷人家的孩子，缺的绝对不是宠爱，而是见识，是充裕经济条件支撑下的视野、格局和心态的提升，是多情境高效率的社交训练。        【39】30之前要放，要张扬，要试错，要撞墙碰壁跌跟头，要看风景攒经验，以此来获得洞穿世道人心的能力和清醒的自我观照与定位。        【40】对度过艰苦岁月的人来看，快乐是奢侈品，可有可无；而对于“90后”而言，快乐是必需品，和阳光空气一样与生俱来。        【41】找一家中意的公司、找一个中意的岗位，坚持10年必成大器。        【42】如何抓住发财的机会？态度端正、头脑清晰；未雨绸缪、专心积累；扩展人脉、勇于尝试。一句话：卡位、布局、等风来！        【43】成不了网红，那你就别去创业！        【44】99.99%的新品牌、新产品和新企业，都是死于流量不足。        【45】以“勾引”为主要手段的病毒营销，已经是企业老板和创业精英们的终极门槛。        【46】以人为商业的切入点和运营核心，这就是生意的趋势和未来。        【47】“网红经济”的本质可以概括为“做内容 + 养粉丝 + 卖产品”。        【48】在社交媒体的新传播时代，冒犯别人、极端化的表达和吹牛大王，反而成为圈粉和建立影响力的不二之选。        【49】这个世界，但凡取得点成就的人，都是有点“自虐”请向的人。        【50】如何创建“很毒”的内容，少花钱甚至不花钱而实现百万甚至千万级别的品牌曝光，将成为“网红”能否持久红下去的关键。        【51】好产品到底怎么做？一言以蔽之，以差异化价值聚拢规模化客户并创造长期价值。差异化价值是核心。        【52】智慧是最大的性感，唯有智慧，才能成就神一样和拥有牢固护城河的“网红”，而且，不会弄脏自己的羽毛。        【53】阅读量高低是能力，尽力则无悔，但阅读量造假可就是人品了，这个信息越来越对称的时代，谁比谁傻？这样做其实是自毁前程。        【54】即便你选择创业的行业符合O2O模式的前提条件，我还是要提醒你：运营、资本、营销，一个也不能少！        【55】商业的发展途径只有一个：复制！小米生态链的本质，我的理解就是，对小米成功关键因素的复制和放大。        【56】寒门难出贵子，责任真的在父母。        【57】如果你觉得生活容易，一定是有人替你承担了太多不易。        【58】寒门子弟，至少得焦虑30年，才能学会放松；必须被挫败300次，才能逐渐从容；丛林社会没有人指导，盲人骑瞎马，夜半临深池；头破血流到40岁，才算真正了解社会。        【59】同智商、情商、逆商等一样，时商，也就是对待时间的态度和运用时间创造价值的能力。我认为，这是当下最靠谱的概念。        【60】精神自由在先，财富自由在后。精神自由是超越自我，财富自由是超越外在。        【61】啥叫安全感？在我看来，它是懒惰惯性作用下的不良嗜好。        【62】你所谓的舒适区，不过是“英年早逝”的墓志铭。        【63】“舒适区”更像是理想国，是一个毕生朝圣的目标，而不是路上的的一把躺椅，随时可供你休息。        【64】“生命有限，知识无穷”，你要变的杰出，就必须花比别人更多的时间来学习，来磨练自己的大脑。        【65】经验是智慧的一种，其实更是勇气的重要部分。        【66】缺乏对传统营销的精髓的尊重和掌握，任何新媒体工具都不过是流动的盛宴和短命的狂欢；放弃对病毒式营销的追进和学习，任何顶尖策略和产品都不过是易逝之烟花和注定之败局。        【67】在行的人，永远都抢手。        【68】抓住根本，绕开细枝末节，这是一个人在有限生命中取得成功的关键。        【69】理性的行动派，最性感。        【70】从本质上讲，理性是一种技能而非性格，因为性格的养成最终还是来源于技能的提升。职场中的成熟不见得能眼前能迁延到生活中去。        【71】主动的去经历事物，积极的从书中和自己的实践中总结规律，思考如何应用规律，就是达到“理性”彼岸的通道。        【72】在执行力面前，想法和创意一文不值。        【73】岁月能拉平任何人与人之间的距离。生活有一种神奇的平衡能力，任何一条道路都不可能只有利没有弊。拖着不做选择，才是最大的风险。        【74】63%的富豪为了财富甘愿承担风险，但只有6%的穷人愿意这么做。但他们坚信自己是自己的皇帝、是自己的太阳、是自己的宙斯。别笑，这是真的。        【75】交朋友的本质是资源互换、利益共享，也就是合作。        【76】好的内容能像病毒一样自复制自传播。一篇文章能在短短两天时间实现爆炸式和病毒式推广？我认为根本原因在于“将合适的内容在合适的平台上推送给合适的人”。        【77】用一句话概括O2O就是：凡订单和收入来自线上，线下只承担配送，而且“解决掉不创造核心价值的中间环节”的商业模式，皆可称为O2O。而且如果只是借助互联网和移动互联网做一些品牌宣传和产品推广，并没有实现渠道变革型精简的，只能成为具有互联网意识的传统企业。        【78】无直播，不网红。直播的时代才刚刚开始，我们通过与众人的相互结合，将自己变为一种新的、更强大的物种。        【79】“将一些有的没的，可能有用又没什么用的东西，给那些自己都想不明白需不需要的人。”这句话道出了营销的本质。        【80】无论是博客，微博，还是微信时代，写作是营销人的基本功，是对思维的训练，是头脑的草稿纸，当然也是情绪的沙袋。        【81】小狼要辉煌，还得靠老狼。老狼在资源和技能上的加持，足以让小狼获得神一样的光彩。        【82】一切节省，本质上都是对时间上的节省！        【83】看不透自然想不通，想不通自然做不到。        【84】看不透“职场就是一个冷酷残酷的价值交换体系”，升值和自我升值一定就跟你没什么关系。        【85】坚信自己的直觉，坚定的对自己抱有最大的期望，就是最大的自我善待。        【86】多琢磨琢磨如何错位竞争，比长得帅的人更聪明，比聪明的人家境好，比家境好的人身体棒，比身体棒的人学历高……相信我，你一定有超越他人的地方，这就是你的竞争优势。        【87】最强大的人脉，其实就是你自己。        【88】企业的生命线是现金流，人生也是！当现金流断了，只能拿命挡，此时的命就是比纸还贱。        【89】人生是一场世代累加的马拉松，教育一定是投资回报率最高的方式。        【90】成长道路无非两条，或循规蹈矩，或野蛮生长。        【91】勇气其实是平凡人的一次选择。搞定貌似不可能搞定的事，就是人生最大的胜利。        【92】奋斗就像明星，你看到的是他们风光靓丽的那一刻，你没看到的是他们当年蘑菇一样在等待在修炼在哭泣在焦虑。        【93】体面体面，先靠体力，后靠面子。在商业世界很现实，它只在乎你的业绩，没人关注自尊。有业绩为体，才有薪酬、地位做面子。        【94】切记用体力上的勤奋，代替脑力上的懒惰。        【95】优秀是一个陷阱。你刚毕业能优秀到哪儿去？职场前10年，不要参加同学会，不会跟别人比。闷下头好好干10年，10年后我保证你鹤立鸡群。        【96】北京是世界上最大的城市，它无比包容，你所拥有的梦想基本都可以在这里实现，只要你足够坚持。        【97】要用制度解决道义上的困境。靠管理者自我道德约束，其实是将企业置于极其危险的境地。制度创新才是企业管理的顶层设计。        【98】优秀的人只在做事上较劲，恩怨纠葛属于情绪问题，对于做事和成长毫无意义。一个人具备做大事的能力，首先必须超级理性。不让情绪纠缠自己，懂得和现实讲和。        【99】如果你想变富，只需在一生中不断地买入资产就行了；如果你想变穷，只需不断买入负债。搞清楚了资产和负债的区别，财富自由就触手可及。        【100】任何圆满与满足，大多时候是暂时性状态。趁年轻竭尽全力为社会创造价值，给世间你最珍惜的情感最充足的物质保障，这是你我的责任。  再附一段朋友发过来的认知与财富理论：  你永远赚不到超出你认知范围外的钱除非你靠运气但是靠运气赚到的钱 最后往往又会靠实力亏掉 这是一种必然  你所赚的每一分钱 都是你对这个世界认知的变现 你所亏的每一分钱 都是因为对这个世界认知有缺陷  这个世界最大的公平在于 当一个人的财富大于自己的认知的时候这个社会有100种方法收割你  直到你的认知和财富相匹配为止]]></content>
      <categories>
        
          <category> Lifes </category>
        
      </categories>
      <tags>
        
          <tag> 百万年薪 </tag>
        
          <tag> 100法则 </tag>
        
          <tag> 关于职场 </tag>
        
          <tag> 关于生活 </tag>
        
          <tag> 一碗鸡汤 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《大数据时代》书摘]]></title>
      <url>/ai/2019/08/13/BigData-Times/</url>
      <content type="text"><![CDATA[  《大数据时代》是国外大数据研究的先河之作，作者维克托•迈尔•舍恩伯格被誉为“大数据商业应用第一人”，书中有一些观点个人比较认同，摘抄过来，留作记录📝。大数据时代的3个转变      第一个转变是不再依赖于随机采样。我们有更多的数据和信息，甚至可以处理和某个特别现象相关的所有数据。（采用分析的精确性随着采样随机性强相关，而与样本数量相关性较弱）。不是随机样本，而是全体数据。        第二个转变是不再热衷于追求精确度。不是精确性，而是混杂性。        第三个转变是不再热衷于寻找因果关系。不是因果关系，而是相关关系。  大数据时代更强调混杂性而不是精确性执迷于精确性是信息缺乏时代和模拟时代的产物，只有5%的数据是结构化且能适用于传统数据库的。如果不接受混乱，剩下95%的非结构化数据都无法被利用，只有接受不确定性，我们才能打开一扇从未涉足的世界之窗。学会拥抱混乱“大数据”通常用概率说话，而不是板着“确凿无疑”的面孔。整个社会要习惯这种思维需要很长时间，其中也会出现一些问题。但现在，有必要指出的是，当我们试图扩大数据规模的时候，要学会拥抱混乱。数据量与算法的关系当数据只有500万的时候，有一种简单的算法表现的很差，当数据达到10亿的时候，它变成了表现最好的，准确率从原来的75%；提高到了95%以上。与之相反地，在少量数据情况下运行的最好的算法，当加入更多数据时，也会像其他算法一样有所提高，但是却变成了在大量数据条件下运行的最不好的。  “大数据基础上的简单算法比小数据基础上的复杂算法更加有效。” - Peter Norvig 《数据的非理性效果》基于相关关系的预测相关关系的核心是量化数值之间的数理关系。想关关系强调当一个数据增加时，另一个数值很有可能会随之增加。这种很强的相关关系，比如谷歌的流感趋势：在一个特定的地理位置，很多人通过谷歌搜索特定的词条，该地区就有更多的人患了流感。相反，相关关系弱就意味着当一个数值增加时，另一个数据几乎不会发生变化。例如：一个人的鞋码和他幸福的相关关系，就会他们之间几乎没有关系。建立在相关关系分析基础上的预测是大数据的核心，而且更快、更准确，且不易受偏见的影响。  这个系统依赖的是相关关系，而非因果关系。它会告诉你会发生什么，而不是为什么发生，这正是这个系统的价值。   - 麦格雷戈博士]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 大数据 </tag>
        
          <tag> 相关关系 </tag>
        
          <tag> 拥抱混乱 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[创造性思维]]></title>
      <url>/thinking/2019/08/04/Creatinve-Thinking/</url>
      <content type="text"><![CDATA[创造性思维是以灵活、灵动和原创的方式进行思考的过程，并且被认为是战略、解决问题和决策的重要元素。可以提供广泛的可能性和解决方案。以下是创造性思维的常见类型：饱满的心态支持、拓展、连接其他人的想法，而不是竞争性的解决问题。发散思维挑战公认的假设和想法。推测猜测缺少信息或不确定性的地方。头脑风暴允许想法快速流动而无需验证。保持歧义延迟假设和约束的加强，直到最后一刻。约束的创造力施加旨在激发创造力的约束。例如：排除解决问题的明显方案。设计思维将所有策略、解决问题和决策制定视为一个设计过程，也就是创造某事的过程。反事实思维思考如果历史事实发生变化，世界会有何不同。例如：考虑如果没有发明飞机🛫或重力不存在，世界会是什么样子。抽象化思考与具体现实不同的概念。比喻将复杂事物简化为更简单的类比。思想实验通过思想实验反驳或验证想法。评书在故事中包装想法，今天存在的许多发明首先出现在小说中。]]></content>
      <categories>
        
          <category> Thinking </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[数据与信息]]></title>
      <url>/ai/2019/08/04/Data-&-Information/</url>
      <content type="text"><![CDATA[数据数据是可以由机器高速处理的原始事实。信息信息是为人类消费而处理和组织的数据。差异「数据」 意味着文件、数据库、数据结构中由机器组织的原始事实。「信息」 意味着由机器处理的数据以供人们理解。人类为人类创造的信息通常被称为「知识」。案例假如市场数据包含大型公司股票在过去十年期间发生的十几亿笔交易的细节，这些数据汇聚总结在一个图表中，显示了一段时间内的价格，人们可以在图表中立即了解股票的历史价格信息与走势，用于创建此类图形的原始数据量非常大，并且对人们判断未来走势极其有用。数据与信息            /      数据      信息                  定义      事实是对机器有用的格式      已经处理和结构化以供人们使用的数据              例如      一个天气数据库，每天从气象站和卫星捕获数百万的大气观测数据      天气预报      ]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[关于推理 - 12种推理类型]]></title>
      <url>/thinking/2019/08/03/About-Reasoning/</url>
      <content type="text"><![CDATA[在人工智能的各种应用中通常需要使用推理，而推理始于人类的思维模式，这里对常见的几种推理做了简单整理，以供参考。  「推理」是“使用理智从某些前提产生结论”的行动。    - 来自 · 维基百科「推理」是以符合逻辑的、合理的思考方式思考事物的过程。被认为是一种人类天生的能力，但现在已经被逻辑学、数学、以及人工智能等领域逐渐形式化。「推理」是一种过程或者行动，主要用于决策、解决问题和评估事物。推理可以是正式的，可以是非正式的；可以是自上而下的，也可以是自下而上的；可以用来处理不确定性，也可以用来处理科学真理。常见的12种推理类型演绎推理「演绎推理」是从一般到具体，换句话说，它是从一个理论开始，并努力寻找确认的观察结果，被称为自上而下的逻辑。常用来寻求现象来证明理论。它使用形式逻辑并在逻辑上产生结果。演绎推理通常与归纳推理形成对比，可以说，演绎推理对确定性感兴趣，而归纳推理处理存在的可能性。      逻辑学中有名的三段论（syllogism）就是典型的演绎推理例子：          人皆有一死      苏格拉底是人      所以，苏格拉底会死      归纳推理「归纳推理」是一种基于一系列已知事实形成理论的逻辑形式，是自上而下的逻辑，寻求理论来解释观察。它的本质是探索，允许意料之外但在情理之中的结果。归纳推理的典型例子：因为地球上大多数生命都依赖于液态水生存，所以水对外星生命形式（如果存在的话）必须是重要的。类比推理「类比推理」是使用类比对两事物之间进行比较，来进一步理解事物的意义。通常用于制定决策、解决问题和沟通。作为制定决策和解决问题的工具，类比用于将复杂场景简化更为容易的事物，只要替换有效，可以提高解决方案的质量；作为一种交流工具，类比可通过熟悉且易于理解的比较，将复杂问题简单化。分析推理「分析推理」是使用独立的逻辑，基于事实的思想或论据。换句话说，解释分析推理不需要有关于世界的经验或信息。分析陈述本身就是事实；而合成陈述需要有关世界的其它知识才能知道它们是真实的。例如：“所有单身汉未婚”之类的陈述本身就是分析；“中国🇨🇳拥有丰富的传统文化”这样的陈述是合成的，因为没有额外的信息就无法证明这一点。诱导推理「诱导推理」类似归纳推理，从寻找或猜测理论来解释观察到的一系列现象。诱导推理并不是很严谨，但可以做出最好的假设和猜测。它通常用于背景不确定的情况下，主要用来做辅助决策和故障排除等相关情况。例如：医学评估可以从解释一组症状的最可能的病症开始。诱导推理也是人工智能常用的方法。向后归纳「向后归纳」是从潜在结论开始向后推理的过程，可以反向绘制可以达到每个潜在结论的步骤，然后根据目标评估路径。这是一种自上而下的方法，从理论或结果开始，向后解释，它允许不确定性并且通常用于人工智能。向后归纳往往需要做很多工作，因为通常有很多路径可以到达既定结果，就像“条条大路通罗马”。对计算机来说，通过机器的结束状态，来向后推理来评估动作的效果。例如：计算机下棋的经典方式是通过反向归纳。批判性思维「批判性思维」是一个理性思考的过程，旨在以客观、全面、知情的方式得出结论。批判性思维是人类思想的产物，受文化、语言等因素的影响。人类思想基于自然语言，做出判断前需要考虑大量的想法。批判性思维是一种智力参与的过程，在发表意见之前，要仔细查证据和假设，以达到深入的理解。反事实思维「反事实思维」是一种常见的思维模式，已知结果来追溯未评估的选择和行动，典型代表是“如果我有…”，“如果我当时怎么…做,就会怎么…”。考虑的是已知不可能的发生的事情，考虑过去的决策是如何制定的，这是一个可以提高决策能力的共同的人类思维过程。换句话说，反事实思维是评估过去的可能性对于改善未来决策或解决问题的价值。直觉「直觉」是心灵在没有推理等逻辑过程的情况下获取知识的能力，换句话说，大脑🧠获得直觉判断的方法对于思想者来说是未知的。通常认为直觉是通过无意识感知的结果。是由无意识感知的心灵所做出的判断，这种判断表现出智慧，但产生这些判断的过程并不是很清楚。尽管直觉有时候被轻视，但他在科学发现中却发挥了重要作用。动机推理「动机推理」是欲望和恐惧影响理性思维过程的倾向。通常人们可能会寻求合理的理由来做他们想做的事情，而不是使用逻辑来发现最佳的情况。我们通常很容易想出一些逻辑参数来支持自己做出这样或那样的选择，就不会再去探索其他可替代的选择，因此放弃了潜在的更好的选择。机会推理「机会推理」是一种人工智能，它可以根据情况使用不同的逻辑方法，即「正向链接」和「反向链接」。「正向链接」，举个例子：  A：会计师通常擅长数学。  B：张三是一名会计师。  演绎：张三可能擅长数学。上面的例子是模糊逻辑的一个例子，因为它能够理解灰色区域，其中存在“通常”、“可能”，它属于前向链接，因为它从你已知的信息转移到新的信息。「反向链接」：反向链接看未来状态，并试图看到未来是如何发生的，这对于实现目标或避免损失非常有用。例如：人工智能可以使用反向链接检查国际象棋游戏中给定时刻的最终状态，来确定可能获胜的移动序列。机会推理根据情况使用正向链接和反向链接。人工智能可以具有多个逻辑引擎，这些逻辑引擎基于它们在给定情况下过去的表现而被选择。理论上，单个人工智能可以拥有大量逻辑引擎，它根据特定类型的问题的已知结果进行选择。循环推理「循环推理」是逻辑，一个自己证明自己的结论。结论可以作为假设或前提采用。循环推理通常会产生逻辑上有效的参数，并且是没有实际意义的逻辑示例。例如：如果我是 DJ,那么我就是 DJ。(完)]]></content>
      <categories>
        
          <category> Thinking </category>
        
      </categories>
      <tags>
        
          <tag> 演绎推理 </tag>
        
          <tag> 归纳推理 </tag>
        
          <tag> 类比推理 </tag>
        
          <tag> 分析推理 </tag>
        
          <tag> 诱导推理 </tag>
        
          <tag> 向后归纳 </tag>
        
          <tag> 批判性思维 </tag>
        
          <tag> 反事实思维 </tag>
        
          <tag> 直觉 </tag>
        
          <tag> 动机推理 </tag>
        
          <tag> 机会推理 </tag>
        
          <tag> 循环推理 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Palantir分析：「商业模式画布」、「SWOT」、「垄断特征」、以及「7个商业模式」]]></title>
      <url>/palantir/2019/07/26/Palantir-Analysis-09/</url>
      <content type="text"><![CDATA[  这里翻译一篇关于Palantir的分析文章，包括商业模式画布、SWOT、垄断特征、及7个商业模式。有关Palantir，这里暂不赘述，不了解且感兴趣的读者可自行Google。商业模式画布  再放一张Google 翻译后的吧，可以对照着看。价值主张      它通过整合客户拥有的所有数据 - （任何规模&amp;任何类型的数据），促进人与计算机之间的协同工作。        独特的价值主张：它为企业和政府机构的所有分析需求提供了一个单一平台，主要用于检测欺诈和犯罪。Palantir开发了动态本体等技术，将各种数据源集成到一个平台中，非技术用户可以专注于调查查询，而不是学习复杂的查询语言。        它专注于一个核心产品 - （机器增强6数据分析） - 并建立了一个几乎完全独立的工程团队来实现它。    Palantir Gotham：Palantir Gotham，以前称为Palantir政府，是Palantir的第一个产品，主要是为政府设计，帮助国防机构识别潜在的威胁。该平台的基础模型基本上是图形，主要围绕对象及其之间的链接构建。来自多个源的结构化和非结构化数据都输入到系统中。然后将数据转换为对象并生成到模型中。用户可以使用该模型来描述，探索和查询这些对象的属性和关系。通过该平台构建的多个应用程序使用户能够在平台内搜索、可视化、假设、发现模式并与同事分享见解。减少用户与其数据之间的摩擦。      Palantir Metropolis：Palantir Metropolis，以前称为Palantir Finance，主要是为金融业设计，帮助进行欺诈检测。该平台围绕时间序列构建。从根本上说，它的基础模型是一系列事件。该平台非常适用于分析保险索赔数据，网络流量和金融交易模式。它可以帮助用户在数学上分析随着时间推移的模型行为（例如，股票价格）。Metropolis主要支持聚合分析：选择一组模型和一个时间段，然后对它们进行复杂的数学计算。由于其快速的迭代和协作能力，Metropolis在这个领域的竞争中脱颖而出。        数据可视化、预测分析和地理智能空间。        虽然Palantir只在数据可视化、预测分析和地理情报空间中发挥作用，但却是这些领域的领域专家。虽然Palantir一直在扩展其产品组合以提供其他分析功能，但它受到来自业内其他参与者激烈竞争与挑战。        为了进一步说明Palantir庞大且不断增长的市场机会，强调我们对IT决策者的调查。要求IT专业人员在未来12-24个月内确定他们在数据分析中的首要任务。当今企业的首要任务是数据集成和可视化，然后是洞察力生成。这个领域的领导者目前是拥有这些重要功能的更好工具的公司。尽管Tableau，Qlik和Splunk在这个市场上取得了进展，但仍避免不了与微软，IBM，甲骨文和SAP等大公司竞争。现阶段Palantir尚未被企业客户广泛使用，但它拥有出色的集成和可视化工具，这对政府和商业机构都非常有价值。        四分之一的受访者认为，预测分析以及机器学习集成代表了分析的未来。这在数据量不断增长的世界中是有道理的，因为报告和可视化工具本身并不足够。业务领导者需要解析数据以做出业务决策。        Palantir平台用于多个行业领域，以帮助实现数据集成，数据可视化和数据分析需求。Palantir擅长整合几乎任何类型的数据：文本，电子邮件，日志，甚至图像和视频。通过为其数据创建引用对象，它可以搜索和识别不同数据之间的链接。然后，不同行业流中的分析师使用此数据进行进一步调查。        在反欺诈，反恐，情报和犯罪预防领域，Palantir帮助整合来自随机来源的数据，例如现场报告，与首次信息报告（FIR）相关的电话号码，甚至来自移动设备的低分辨率图像设备。然后通过Palantir Graph或Map提供数据，这些易于查看的应用程序可帮助研究人员发现事件之间的模式并发展假设。在数据源和记录保存极为重要的保险，金融和医疗保健行业中，Palantir使用其知识管理应用程序来跟踪和保护通过其平台传输的每个数据。它还确保在将数据索引到平台以供将来引用时将适当的安全级别关联起来，通过其协作应用程序。        Palantir真正的差异化特征是服务组件，以及其运营模式、执行工程人才、套利的能力。  收入来源      就预订而言，我们估计2017年Palantir接近35亿美元，其中约40-50％的预订来自政府合同。        重大的欧洲扩张; 自2014年以来欧洲的收入增加了三倍。        Palantir是一家企业软件公司，通过两种标准定价模式获得收入：SaaS订阅和专业服务。我们认为Palantir的季度收入遵循类似SaaS的趋势，从季度到季度连续增长。        典型的Gotham安装包括：56.4万美元Palantir服务器的价格，假设4个核心$112K软件更新和维护服务器，每年（第一年免费）$ 100K培训，假设50个用户$600K工程服务集成。假设2-3名部署工程师为1年总计：150名用户为150名。        Palantir特别令人困惑的是，它并不能完全清楚它是产品还是服务公司。除了对其实际软件产品的使用收费之外，在安装时他们还提供大量的工程，部署和培训服务合同包，所有这些服务都要收取额外费用。  成本      虽然Palantir可能会将相对较小比例的收入用于销售和营销，但其同行（如Splunk，Tableau和Qlik）将其50％以上的收入用于吸引和留住客户。我们认为这些公司营销支出水平提高的主要原因之一是来自大型成熟企业软件供应商的激烈竞争。规模较小的公司倾向于花更多钱与企业客户站在一起，提供大幅折扣以说服客户改变他们的分析平台。然而，即使小公司采取这一步骤，已建立的参与者也可以降低价格以保留其客户群。由于Palantir不必将其收入用于销售和营销，这可能会带来大量节省，从而增加其盈利。        Palantir认为它能够在合同中收取如此高的价格是因为他们的服务对他们的客户来说是一个非常高的价值。此外，Palantir的价格实际上比同等价格的技术解决方案（如Bloomberg终端或SAP）便宜。在一个典型的一般例子中，Palantir部署超过3年，每用户11,000美元（3），低于Bloomberg终端（5）的24,000美元价格。考虑到典型分析师的年薪从40,000美元到90,000美元不等，3年以上的每用户成本是相对较小的成本，特别是如果Palantir能够使这些用户在一个数量级上更有效。  核心资源      在筹款方面，Palantir自成立以来已筹集了约27.5亿美元的总股本。该公司最近一轮融资于2016年1月完成，当时筹资约8.8亿美元，导致后期资金估值约为200亿美元。        Palantir开发了多种应用程序（如图形和地图）和创新仪表板和技术（如动态本体和Nexus对等）来处理大量结构化和非结构化数据。        我们相信Palantir的员工基础在过去五到七年中迅速增长。该公司估计2009年员工人数不足50人; 然而，到2017年，该公司在全球范围内增加到2,000多名员工，在华盛顿特区，欧洲和硅谷建立了主要业务。  主要合作伙伴  CIA的风险投资公司In-Q-Tel是美国情报界的一部分，投资于国防运营的新技术，是Palantir的早期投资者。主要活动      空中客车公司利用硅谷的专业知识（Palantir）来加速A350的生产。        德国默克公司采用Palantir进行大数据健康计划。        虽然很难找到公开的Palantir定价数据，但我们估计，每个服务器核心每月的Palantir Gotham或Metropolis许可证的价格可能在每月3,000到10,000美元之间，还需要额外的支持，维护和培训费用。        与产品和许可证相比，软件服务的利润率往往较低，主要原因是人员成分可变。我们相信Palantir通过其客户合同捆绑咨询，支持，维护，培训和其他此类现场服务。从长远来看，我们预计公司将“产品化”其服务，因为它已经开始明确推动企业。        从加密和多级权限保持坏人到审计跟踪和匿名化保持好人好29，Palantir努力保护自由。        接下来，看看Palantir的职位列表，它更加模糊。他们为某些职位编造了自己的头衔。设计师 - Palantir办公室软件工程师 - Palantir Office前向部署软件工程师 - 客户现场部署战略专家 - 客户现场产品专家 - 客户站点此结构看起来更像是埃森哲咨询团队，而不是硅谷产品公司。        从财务角度来看，很明显，工程服务是最高利润率。假设您可以通过利润丰厚的股票期权向FDE支付10万美元/年，Palantir每位部署工程师的利润率为60％。此外，客户经常将FDE保持在比所需要的更长的时间，因为他们比自己的员工更好。然而，在操作上，Palantir的思想领袖是产品工程师，他们提出了先进的数据处理算法。我推测这些特殊头衔是人力资源部门争夺山谷中最优秀的人才。顶级工程师不尊重在技术服务公司工作，因此Palantir必须重新成为一家产品公司，以吸引最优秀的技术人才。这种方法非常成功，因为Palantir被视为硅谷的宠儿。        Palantir通过向客户收取数百万甚至数十亿美元的大型部署合同来为其产品定价，该合同包括现场实施团队，培训服务，维护和许多服务器核心。由于每个客户端都有一组完全独特的数据源，因此Palantir部署具有极高的触摸性，需要高水平的自定义。        价值链。大数据分析涉及检查大量结构化和非结构化数据，以发现隐藏的模式，趋势和相关性，以帮助企业做出有关其产品或服务的明智决策。企业使用执行数据提取，策划，分析和可视化的工具和应用程序来支持战略决策。虽然“大数据分析”一词描述了各种各样的功能和任务，如图表5所示，但行业专家认为，更广泛的软件分析领域包括三大类功能：（1）商业智能和分析工具/平台; （2）分析和绩效管理应用; （3）分析数据管理和集成平台。  客户细分      Palantir的早期客户包括相当长的联邦，州和地方机构和部门名单，如国防部，CIA，FBI，国土安全部，洛杉矶警察局，芝加哥PD和NSA。        该公司与不同的政府机构（如FBI，CBI，国防部和司法部）合作，将所有数据整合到一个平台中。此步骤在解决复杂案例时非常有用，因为分析师能够识别不同数据源中的模式。        Palantir失去了一个关键的网络安全客户：Home Depot。  通道      最后，据Palantir公开交易的同行称，市场机会正在以相当强劲的速度增长。Tableau估计其产品的可用市场将从2013年的约150亿美元增长到2019年的266亿美元，主要是通过新客户收购和增加渠道预订。该公司认为，到2017年底，其国际增长将占其总收入的三分之一左右。        Palantir开发了多种应用程序（如图形和地图）和创新仪表板和技术（如动态本体和Nexus对等）来处理大量结构化和非结构化数据。        口口相传。  客户关系      情报、执法和国土安全客户。        SaaS订阅和专业服务。        数据分析供应商以不同的方式为其产品定价。一些价格基于使用的数据量;，每个用户一些价格， 和其他人使用用户编号和基于数据的定价的组合。虽然有些公司提供永久许可选项，但大多数公司都为其客户使用基于订阅的模式。定价模型可以从非常简单（例如，Tableau的单一定价模型）到非常复杂（例如，Palantir的定价，其未公开披露）。        快速浏览Palantir的定价图表显示，虽然每台服务器的许可证价格约为140,000美元至150,000美元，但其服务每年可增加35万至75万美元。鉴于整合各种数据源所涉及的复杂性，对于计划使用Palantir产品的企业而言，其中一些服务实际上是强制性的。        Palantir做为B2B公司而言，仍然存在两个悬而未决的问题：Palantir的收入中有多少来自永久许可证？从SaaS许可证中获得的收入的Palantir政府和商业合同的平均持续时间是多少？        Palantir称他们实行基于价值的定价，这使他们能够为每个客户最大化WTP。例如，在政府方面，Gotham唯一可比的产品是美国陆军的内部分布式共用地面系统，耗资23亿美元。一份泄露的文件引用了2012年的一项研究，其中96％的阿富汗战争战士更喜欢Palantir。所以我们可以假设Palantir可以为他们的产品收取高达2.3B的费用 - 仅靠陆军。        如今，Palantir正在向零售/ CPG公司扩张，因为他们寻求新的市场机会，销售周期比政府更短。与政府不同，这些公司确实与IBM BI，SAP和内部解决方案有比较点。当他们进入这个行业时，Palantir应该会看到由于竞争加剧而导致其利润率下降，特别是因为IBM BI甚至可能只是为了阻止Palantir。有趣的是，这些较低的利润率最终是否会扩散到政府方面，因为更高的透明度应该标识数据分析产品的真正价值。        一旦Palantir建立了他们的员工基础，他们就可以向他们的客户收取他们迫切需要的工程人才的溢价。这不是要淡化他们的技术堆栈 - 但考虑到它需要多少定制，并且Palantir的商业模式不是通过软件包销售其产品，而是以其商业模式的大型部署合同的形式销售，Palantir的运营模式吸引的方式，投资于并管理其劳动力资本是其目前成功的主要原因之一！  SWOT分析优势（Strengths）劣势（Weaknesses）      Palantir面临与潜在定价去杠杆化和将预订转换为现金相关的挑战。        拥挤的竞争格局：目前有100多家大小公司提供大数据和分析软件产品和服务。我们的调查表明，大型软件技术供应商（包括Microsoft，IBM，Oracle和SAP）是BI和Analytics最常用的IT供应商之一。是什么让我们对Palantir的近期前景略微谨慎？在过去的几年里，Palantir的大型科技公司的竞争逆风加强了。这些不利因素以及对AI / ML计划的更多关注正在推动BI /分析产品。        不明确的长期盈利潜力：我们对最近的媒体报道感到鼓舞，即Palantir有望在2017年底实现盈利。但是，可比较的大数据分析和商业智能公司的长期成本结构仍未得到证实和争议。从长远来看，随着Palantir从服务/咨询驱动的销售周期转变为传统的SaaS销售周期，我们预计销售周期会更长，这可能会导致结构性支出与今天的水平相比更高。        不透明的定价策略：与其他同行不同，Palantir不会公开披露其定价策略。缺乏透明度导致对其产品的理解不清楚，以及它们与同行的产品相比如何。关于Palantir价格表的媒体报道表明，Palantir的产品可能比同行更昂贵，这种情况可能导致缺乏定价杠杆或增加客户获取成本。        数据隐私和安全挑战：由于Palantir与解决欺诈和犯罪的政府机构有关，因此Palantir的产品与大量敏感信息（公共和私人）相互作用。因此，Palantir还有责任更加透明地使用公共数据并保护公共信息。最近，有关企业信息泄露和黑客行为的报道更加关注Palantir等公司。        客户流失带来的潜在定价去杠杆化：媒体报道表明，Palantir的定价可能导致客户流失率上升，尤其是那些可能不需要高度复杂的分析平台的客户。虽然很难找到公开的Palantir定价数据，但我们估计，每个服务器核心每月的Palantir Gotham或Metropolis许可证的价格可能在每月3,000到10,000美元之间，还需要额外的支持，维护和培训费用。        将预订转换为净收入的挑战：2015年，Palantir的客户预订超过了约1​​7亿美元。但是，目前还不清楚这笔资金中有多少会转化为公司的收入。我们认为典型的Palantir客户签订了为期三年的合同，这意味着当前财政年度的账面转换率为33％。投资者会将现金转换率提高作为长期健康表现的标志。        服务收入影响Palantir的毛利率：与产品和许可证相比，软件服务的利润率往往较低，这主要是由于人事部门的变化。我们相信Palantir通过其客户合同捆绑咨询，支持，维护，培训和其他此类现场服务。从长远来看，我们预计公司将“产品化”其服务，因为它已经开始明确推动企业。        不断上升的私人股东激进主义潜力：Palantir的早期投资者对流动性事件一直相当耐心。Palantir首次筹集机构资本将近十年。在过去一年左右的时间里，该公司卷入了与早期投资者（KT4 Partners）进行信息访问的双向法律斗争。此类法律纠纷凸显了初创投资者与希望保持对股东严格控制的公司之间的争议关系。最近在优步发生的事件就证明了这一点，我们将密切关注与KT4合作伙伴正在进行的诉讼，以及任何此类其他相关事件。        继富达和贝莱德之后，摩根士丹利显著降低了Palantir的估值。        由客户流失驱动的潜在定价去杠杆化。媒体报道表明，Palantir的定价可能会导致客户流失率上升，尤其是那些可能不需要高度复杂的分析平台的客户。虽然很难找到公开的Palantir定价数据，但我们估计，每个服务器核心每月的典型Palantir Gotham或Metropolis许可证的价格在3,000美元到10,000美元之间，需要额外的支持，维护和培训费用。        将预订转换为净收入的挑战。2015年，Palantir的客户预订量超过了约17亿美元。但是，目前还不清楚这笔资金中有多少会转化为公司的收入。我们认为典型的Palantir客户签订了为期三年的合同，这意味着当前财政年度的账面转换比例为33％。投资者认为不断增长的现金转换率是长期健康表现的标志。  机会（Opportunities）      IT专业人员青睐大型技术供应商的BI和分析产品。我们的大多数受访者都将Microsoft，IBM，Oracle和SAP视为其公司目前使用的供应商。这些选择突出了Palantir面临的竞争格局，尽管其创新和独特的产品。        未来12个月BI和分析支出前景乐观。89％的受访IT专业人士表示他们计划在未来12个月内增加对BI＆Analytics软件的支出。        预测分析和机器学习集成将是未来五年关注的重点领域。49％使用BI和分析工具的公司将预测分析和机器学习集成确定为未来五年的主要关注领域。这些高级分析可帮助企业分析他们收集的数据量并从中获取可操作的见解        大多数公司更喜欢使用咨询服务以及BI和分析产品。83％的受访者表示他们使用专业服务和数据分析产品，进一步加强了Palantir的市场推广战略。        非结构化数据已经在企业中广泛使用。47％的受访者表示他们在执行数据分析时“始终”使用非结构化数据。另有43％的受访者表示他们“偶尔”会使用这些数据。        庞大且不断增长的市场机遇：对大数据分析，可视化和商业智能软件的需求估计将从2017年的1500亿美元增长到2020年的2100亿美元，转化为强劲的12％增长（三年复合年增长率）。虽然Palantir的可用市场机会仍有争议，但我们对主要市场趋势和Palantir产品演变的分析表明，该公司可能的目标是每年花费400至500亿美元，主要用于数据可视化，预测分析和欺诈分析，这意味着公平强劲和可持续的增长轨迹。        重要的长期趋势：关键的长期趋势，如移动性，数据增长和向云的迁移，增加了数据分析需求，引发了几家新分析供应商的崛起。这些趋势导致来自多个来源的非结构化数据呈指数增长。我们对IT决策者的调查显示，目前超过90％的公司使用非结构化数据。Palantir凭借其先进的数据集成技术，将从这些长期趋势中受益。        在网络安全，反欺诈措施和反恐方面增加IT支出的受益者：行业专家预测全球军事和国防预算的IT份额将持续上升。我们相信Palantir在数据分析领域占据独特的地位，并从提高对全球打击犯罪和欺诈的认识中获益。该公司业界领先的分析平台使其成为全球政府和企业的首选供应商。        政府IT支出持续显着增长潜力：2017年美国联邦，州和地方IT支出预计将超过2000亿美元，其中约30-35％用于国防，公共安全和司法部门的IT。Palantir主要关注这些垂直行业，加上针对特定政府用例的定制产品，使我们更加坚信Palantir有一条通向政府内部长期发展的途径。        独特，用户友好的客户主张：Palantir的第一代产品路线图主要由政府用例驱动，强调易用性和非技术最终用户可操作的仪表板。我们认为，Palantir的内部知识产权建立在早期政府合同的基础上，使公司能够减少大数据分析的摩擦。企业公司现在可以专注于绘制可操作的业务结论，而不是实现数据清理，解析和其他与输入相关的活动。        备受瞩目的客户增加了销售和营销杠杆：Palantir的技术与赈灾（飓风桑迪），欺诈检测（伯尼麦道夫庞氏骗局）以及反恐活动（捕获奥萨马本拉登）等重大全球事件有关。虽然其同行SaaS公司将其净收入的50％用于销售和营销，但我们相信Palantir受益于媒体对高度可见事件和客户故事的报道。这种宣传可能会大大节省销售和营销费用，使公司在2017年底前更接近盈利        有吸引力的收入组合 - 从政府转向商业：我们认为，Palantir通过将其商业收入从2008年的约0％增长到2017年的约50-60％，使其客户群多样化。投资者将积极看待这一转变，它将提高报告透明度并减轻投资者对Palantir与某些政府机构发生冲突的担忧。        潜在的收购目标：今年的预订总额估计为35亿美元，数据分析领域的行业领先技术，以及围绕其政府关系的可争议的护城河，Palantir为希望扩展到预测分析的老牌企业提出了一个有吸引力的收购目标，数据集成和数据可视化空间。这种吸引力在Palantir的估值下提供了合理的底线，并将帮助投资者在其估值框架中构建下行风险情景。        专家希望内容和预测分析能够带头帮助企业整合多个数据源并提供可操作的洞察力。        由于企业收集和需要解释的大量数据，其中一个子部分，即商业智能和分析，一直在快速增长。在过去几年中，报告和查询工具的需求量很大。然而，在向前发展的过程中，专家们希望内容和预测分析能够带头帮助企业集成多个数据源并提供可操作的见解。        从分析师转向业务用户：这个市场中用户增长的主要原因是使用部分的转变。用法正在从分析用户转移到业务用户，将用户群增加了3.5倍以上。这些额外的用户需要更复杂和跨功能的分析。业务用户已经成为创新的主要推动力，因为他们在没有IT干预的情况下寻求自助服务，并通过创新的协作工具来分享整个组织的洞察力。组织正在从基础数据报告转向更高级的分析和基于洞察的工具，以帮助做出未来的决策。        BI模型的分散化：传统BI平台由组织内的IT团队领导，BI分析由数据科学家执行，但其余活动（如数据收集，维护和安全性）均由IT管理球队。BI现在正朝着完全分散的模式发展，不需要IT帮助。在此模型中，业务用户通过直接访问不同的数据源来实现数据准备和可视化。这种方法可以使小型和大型组织更容易，更广泛地使用。BI领域的新进入者主要使用此模型。        融合下一代BI架构：目前，没有一个平台可以满足所有BI需求。组织使用多种工具来实现BI的不同方面，例如数据报告，日志记录，可视化和高级分析。个别组件玩家现在正在添加更多功能以转换为平台播放器。他们努力成为客户的单一BI和分析源。即使是以IT为中心的传统BI平台也试图提供更好的分析和可视化工具，但它们已被现有的基础架构所拖累。IBM在其Cognitive Analytics平台上取得了一些进展，但尚未被企业所接受        进一步考虑这一估计，我们强调了我们专有调查的相关观察结果。当被问及他们目前使用的BI和分析工具的类型时，超过40％的IT专业人员表示他们使用所有三种主要的分析工具。换句话说，今天使用分析软件工具的方式发生了明显的变化。他们的核心价值主张已经从简单的仪表板式工具演变为更智能的软件，可以帮助推动业务决策。        根据2016年IDG研究调查，数据分析是预计将迁移到云端的最佳应用程序。        根据我们最近的两次投资者情绪调查，我们了解到大数据和分析代表了所有软件应用程序中最有希望的增长领域        移动性、数据增长和向云移动等关键的长期趋势增加了数据分析需求，引发了几家新分析供应商的崛起。这些趋势导致来自多个来源的非结构化数据呈指数增长。我们对IT决策者的调查显示，目前超过90％的公司使用非结构化数据。Palantir凭借其先进的数据集成技术，将从这些长期趋势中受益。        在网络犯罪，反欺诈措施和反恐方面增加支出的受益者.        政府IT支出持续显着增长潜力.  威胁（Threats）  投资者在未来18至24个月内监控的关键问题是竞争的影响以及政府/服务收入对Palantir利润率的混合转移      最近有媒体报道称，Palantir有望在2017年底实现盈利。但是，可比公司的长期成本结构仍未得到证实和争议。从长远来看，随着Palantir从服务/咨询驱动的销售周期转向传统的SaaS销售周期，我们预计销售周期会更长，这可能会导致结构性支出增加。        最后，盈利门槛似乎已被推迟。规模较小，年轻的公司没有达到盈利水平，而这些公司的年龄较大，年龄较大的同行正在大量涌现。快速比较分析供应商在增加收入里程碑时的利润率表明，较大的，已建立的分析供应商（如Adobe）已经能够实现盈利，而较小的供应商（如Workday）的盈利能力则低于负20％。        数据隐私和安全挑战        由于Palantir与解决欺诈和犯罪的政府机构合作，Palantir的产品与大量敏感信息（公共和私人）相互作用。因此，Palantir还有责任更加透明地使用公共数据并保护公共信息。最近，有关企业信息泄露和黑客行为的报道更加关注Palantir等公司。  垄断特征专有技术      Palantir能够整合所有形式的数据，包括实时日志，电子邮件，聊天对话，社交媒体内容，甚至图像和视频内容。工程师在帮助安装平台时，汇集来自所有来源的数据，将其摄取到Palantir平台并创建可在调查期间引用的对象。与其他主要分析平台不同，Palantir平台可以在几周内安装并完全运行，而不是数月或数年。多年来，Palantir基于其在国防和金融领域的学习，在其两个产品平台上增加了几项新技术，并将其扩展到其他行业领域。Palantir在客户中非常受欢迎，主要是因为其用户友好的应用程序，有助于识别不寻常的模式。        Palantir平台融合了基于人类的算法和强大的引擎，可以在极其精细的水平上同时扫描多个数据库。该公司的主要收入来源是其两个大型分析平台：Palantir Gotham和Palantir Metropolis。这两个平台集成了针对不同分析领域的技术解决方案。该系统接受庞大的数据库，并允许用户以看似无数的方式对信息进行切片，并对所有必要的安全需求具有适当的敏感性。        处理非结构化数据是当今的核心竞争力之一        在创业社区，我们喜欢谈论快速迭代的重要性，但是在推送代码时很容易做到就像在服务器上点击刷新一样简单。在企业界，计算机通常不与互联网连接，因此推送代码实际意味着工程师必须飞到公司的物理位置并亲自升级软件。尽管存在额外的挑战，但Palantir将快速迭代作为优先事项的方式有助于它在短短几年内开发出经过实战考验的世界级工具。搬运工：客户的讨价还价能力  网络效应      大量企业和政府机构继续采用该平台        Palantir介绍了Horizon技术，以推动大量数据的交互式工作流程        备受瞩目的客户提供销售和营销杠杆  经济舱规模  我们相信Palantir公司将继续保持其估值，因为它增加了空客和默克等大客户，并通过自动化加快成本削减。品牌  为了使Palantir保持竞争力，它需要不断重塑自身，以便在竞争扩大其产品时保持相关性。这种重新发明可能需要大量投资，只有规模才具有成本效益。随着分析领域的众多供应商，Palantir在研发和销售方面的投资预计将增加，从而导致其长期利润率的不确定性。此外，Palantir可能会发现很难与具有更大口袋和更广泛品牌认知度的公司竞争，因为这些大公司可以大量折扣新兴产品以获得牵引力或留住客户。7个商业问题工程      Palantir开发数据分析软件，以解决欺诈预防，反恐和其他商业情报任务。        如今，Palantir的软件无缝地工作，将大量结构化数据（如电子表格）和非结构化数据（如图像和社交媒体帖子）导入一个集中式数据库，可以对所有信息进行可视化和分析。        Palantir平台融合了基于人类的算法和强大的引擎，可以在极其精细的水平上同时扫描多个数据库。        问题：SQL有一个令人沮丧的学习曲线。只有分析师知道今天如何使用它，这已经足够困难了。        解决方案：Palantir的数据分析运行在自然语言查询上，因此普通人可以轻松使用它，这为更多关注重要数据提供了巨大的机会。BOS：减少。        问题：数据分散在各处。例如，如果联邦调查局有人的案件档案，那么中央情报局很可能甚至都不知道。同样，洛杉矶警察局的官员必须在一个数据库中搜查抢劫案件，但要进行不同的搜查以检查是否有谋杀案。        解决方案：通过与潜在用户交谈，Palantir意识到大多数数据都是碎片化的，而且大部分数据都是非结构化的。因此，他们构建了工具来组合多个非结构化源。BOS：减少。        问题：查询很慢。即使计算行业与摩尔定律保持同步，速度仍然是分析数据繁重任务的一个问题。如果你有一个10k行的小型数据库，你可以很快地运行一个查询，但是一旦你处理了几千兆字节的信息，你可能很容易等待半小时的结果…如果结果没有超时或命中内存问题。        解决方案：Palantir在运行时和迭代中针对速度进行了优化。BOS：减少。        在Palantir Gotham（政府产品）投入多年的思考和编程后，Palantir意识到许多相同的核心竞争力 - 处理非结构化数据，结合多个数据集，查询速度 - 可以在商业世界中发挥巨大作用。        Palantir的技术是其竞争优势。没有其他系统允许用户在不同的数据集之间绘制关联，并且可以轻松或快速地可视化连接。在后端，Palantir的基础设施使用尖端数据处理算法以闪电般的速度搜索大量数据集。  时机  我们的投资理念受到以下需求的推动：先进且最终用户友好的数据分析，将知识产权追溯到其政府关系，更高的大数据分析和网络安全支出。垄断      例如，Palantir只在数据可视化，预测分析和地理情报空间中发挥作用，但却是这些领域的领域专家。虽然Palantir一直在扩展其产品组合以提供其他分析功能，但它受到来自业内其他参与者的激烈竞争的挑战。        总体而言，我们认为Palantir的市场规模在400亿至500亿美元之间，主要在数据可视化，预测分析和欺诈分析领域。        虽然Palantir的大规模数据集成方法听起来类似于IBM等知名技术公司的工作，但它在实际工作中采用了截然不同的方法。        在一个新项目中，公司通常会派出一个不超过三名工程师的小团队，其任务是在几天内提出可能的解决方案。Palantir工程师喜欢他们作为技术世界的局外人的角色：他们没有站在仪式上，而且往往非常不受内部IT专家的欢迎，他们的工作是他们的第二猜测。        与此同时，竞争对手的人工智能公司认为，Palantir已经进行了巧妙的自我推销交易，其数据集成技术远非业内独一无二。他们还说，它的方法有时比纯AI公司更慢，更昂贵，因为它使用工程师团队设计即时响应问题而不是简单地应用现有算法。        但随着该公司的估值上升至200亿美元，它成功围绕其数据分析方法创造的神秘感已证明是非常有价值的。  人      由前PayPal执行官Peter Thiel，以及来自斯坦福大学的Alex Karp，Joe Lonsdale和Stephen Cohen于2004年创立。        Palantir Technologies是一家数据分析软件供应商，由前PayPal执行官Peter Thiel和Alex Karp，Joe Lonsdale以及斯坦福大学的Stephen Cohen于2004年创立。        CNN任命Shyam Shankar为世界十大思想家之一。        招聘过程是人才和文化的平等部分。特别是在工程方面，人才是一个很好的理性衡量标准（“你能用C++写一个程序来做x吗？”），但评估某人的文化契合度总是有点试探性。在Palantir的案例中，他们选择了一个能够考虑所有文化因素的单一措施：“这是一个你想与之合作的人吗？”  分配      当时美国副总统乔·拜登（Joe Biden）承认该公司的防欺诈能力。此次荣誉之后还有其他几项认可，例如被“商业周刊”，CNBC和大通创新奖评选为最佳50家科技创业公司名单。        虽然2016年5月的BuzzFeed文章揭示了Palantir与其所服务的政府机构之间的紧张关系，但由于其在非政府部门的多元化客户群，该公司的预计在2015年继续稳步增长，超过17亿美元。Palantir参与社会事业 - 例如与圣克拉拉县共同努力解决无家可归问题 - 使公司能够展示其平台的广泛能力，并通过口口相传获得宣传。  持久      对大数据分析，数据可视化和商业智能软件的需求预计将从2017年的1500亿美元增长到2020年的2100亿美元，转化为强劲的12％增长（三年复合年增长率）。尽管Palantir的可用市场机会仍有争议，但我们对主要市场趋势和Palantir产品发展的分析表明，该公司可能的目标是每年花费400至500亿美元，主要用于数据可视化，预测分析和欺诈分析领域，这意味着相当强劲和可持续的增长。        Palantir的高接触安装也有助于建立长期动力，因为一旦部署成为客户的新标准并且多年来一直用于构建部署，就很难移除部署。这种粘性使Palantir在如此短的时间内迅速增长到了5亿美元的收入，没有放缓的迹象。        匿名是正确的。Palantir不在AI领域，仅使用机器学习来支持其主要的数据分析重点。        模式匹配。在银行业，Palantir通过向分析师提供详细信息来帮助分析师调查欺诈行为，以便他们进行交互式调查。当分析师识别出欺诈性交易时，Palantir会训练模型来表示和识别这种欺诈形式，然后将其用于优先处理类似案例以进行分析师调查。        预测分析：例如，给定时间序列数据，关于工业零件在其整个生命周期中的表现以及它在开始破坏之前的样子，Palantir将尝试在它们破裂之前识别零件*，以便在它们可以维修或更换期间一个预定的维护窗口，而不是需要紧急停机，可能节省大量的资金。        所以，Palantir使用机器学习来增强其分析平台的有效性。但同样，他们并没有参与任何人工智能。  秘密      独特，用户友好的客户主张。        Palantir的关键区别在于其将大量结构化数据（数据库表，电子表格等）和非结构化数据（图像，视频，报告等）集成到用户友好的分析平台中的独特能力。任何处理大量数据搜索和排序的人都知道使用数据库查询语言会令人沮丧。通常，只有专门的分析师才能有效地使用这些查询语言 Palantir通过使用自然语言查询，将这个问题颠倒过来，因此任何人 - 甚至是不懂编程语言的人 - 都可以轻松地通过大量数据进行深入的搜索。因此，Palantir的平台已经被多个政府组织的各种用户广泛接受。由于该软件易于使用。        Palantir拥有三个关键特性，使其成为独特的数据分析产品：Palantir Graph，Palantir Map和Palantir的移动应用程序。  ]]></content>
      <categories>
        
          <category> Palantir </category>
        
      </categories>
      <tags>
        
          <tag> Palantir分析 </tag>
        
          <tag> 商业模式画布 </tag>
        
          <tag> SWOT </tag>
        
          <tag> 垄断特征 </tag>
        
          <tag> 7个商业模式 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[BAT-医疗知识图谱相关产品分析介绍]]></title>
      <url>/ai/2019/07/14/BAT-Medical-AI/</url>
      <content type="text"><![CDATA[为什么写之前一直把精力放在知识图谱本身的设计与实现上，并未侧重对行业落地产品与市场需求分析。近日，反思许久，也算有所感悟，究其原因是确定不下要从哪个行业、或市场入手，举旗不定。关于知识图谱落地行业，电商、金融、公安、医疗是信息化比较早的行业，可作为前期切入领域，之前有进行相关分析，这里不再赘述，详情请访问历史文章。同时，也想把知识图谱行业产品分析作为一个系列来做，这次就先说医疗行业，为什么是医疗？因为上周被大佬从战略层面、以及医疗行业本身进行了升维打击，可以说是碾压，惨不忍睹，以后有机会再细说，下面进入正题。从国家战略以及省市区规划报告层面，事关国计民生的医疗行业，一直是AI发展所关注的重点。目前，中国医疗资源结构性失衡，三甲医院专家云集、人满为患，基层医院专家难寻、门可罗雀；并且常年来，约占医院总数8%的三级医院，承担了约40%的诊疗和住院患者的重任。社会老龄化加速，医疗资源有限，我国医疗健康的具体情况可参见，规划发展与信息化司发布的《2018年我国卫生健康事业发展统计公报》。在互联网领域，BAT等巨头一直热衷走平台战略路线，并且一直是科技与行业发展的引领者。医疗AI方面，BAT也早已布局，纷纷推出产品，例如：百度灵医、阿里“Doctor You”与“ET医疗大脑” 、腾讯觅影。下面就来具体分析下以上产品，加深对医疗AI落地方向，与医疗行业需求的了解。分析BAT的产品，是因为尊重其对行业发展与引领的影响力。  下面主要介绍并简单分析百度灵医、阿里“Doctor You”与“ET医疗大脑” 、腾讯觅影与知识图谱相关的产品，主要参照各自产品官网介绍，如有错误或不当之处，欢迎交流指正。百度“灵医”百度“灵医”，主要切入方向为临床辅助决策、医疗大数据治理与智能诊前助手。百度灵医产品架构图临床辅助决策面向医生，根据针对场景与疾病的不同又拆分为3个版本，分别为标准版、基层版、专病版。标准版面向大型医院需求进行定制，针对辅助诊断、治疗方案推荐、相似病历推荐、医嘱质控、病历内涵质控、医学知识查询等目标进行功能设计，同时满足国家对电子病历系统功能应用水平分级评价、医疗健康信息互联互通标准成熟度测评等相关要求设计产品细节，嵌入医生工作流，提升临床效率。《电子病历系统功能应用水平分级评价方法及标准（试行）》辅助诊断界面治疗方案推荐界面相似病历推荐界面医嘱质控界面从以上产品截图可以看出，百度灵医临床辅助决策系统侧重建设电子病历，有利于NLP进行病历分析、语义分析，方便信息抽取去推荐。结合搜索引擎技术进行知识检索、病历检索；利用症语义向量相关性及疾病诊断模型进行疑似疾病判断、治疗方案推荐、相似病历推荐等等。由输入框信息自动对医嘱进行风险分析及把控，基于传统规则、NLP、推理模型对病历全面分析，保证结果的准确度，同时利用知识图谱基础能力，对医疗知识精准、快速查询。以结构化电子病历为产品重点，应以覆盖各层级评级要求为基本要求，学习过往专家案例诊疗案例为学习基础，同时针对患者个人情况，生成满足患者自身体质要求的治疗方案，并且可以满足现有医院系统，可顺利接入客户现有系统，以满足无缝接入，无论是API/BS/CS等都应该开发，并且设计开发系统之前应充分考虑开品的评价标准，前期设计方案或选用模型，应尽量以此标准为依据选取方案，避免走偏。  在设计开发系统前，充分了解所面向用户对精准度的要求，毕竟功能可以少，但如果对精准度失望，对企业的损失是将不可估量。所有质检、审查功能要做到国家标准全覆盖，精准度与语义理解度需绝对强化，提高系统风控能力。基于以上理解，还是要再说一句，功能可以少，但是需要精，因为不知道哪个功能，将会满足某个用户的痛点需求，以此思维模式让产品成为用户需求满足的第一选择。基层版根据《“健康中国2030”规划纲要》要求医疗单位实现分级诊疗，构建“基层首诊，双向转诊，急慢分治，上下联动”的医疗体系，推动分级诊疗落地、加强基层医疗水平建设，减轻三甲医院的医疗压力。因此对基层版在标准版的基础上增加了智能问诊、病例自动生成功能等，满足基层医生实际使用习惯，提升基层医疗机构的诊疗能力。百度灵医功能覆盖就医流程图智能问诊界面  问诊与辅助决策不同，不在于有多么高的精度，但病种覆盖需要尽量全面，之前也提到行业知识图谱的设计从广度优先出发比从深度优先出发更具有优势，所有的知识来源应尽量选择具有说服力和权威的资料，严格把控知识质量，系统的设计遵循便捷性、与轻量性，考虑到用户本身IT理解力，系统更需要便捷的可操作性。专病版面向医生在专病诊疗方面提升效率，降低疏漏可能性，也为解决专病诊治的行业性难题。  病情评估数据获取复杂，导致医生在繁忙的临床诊疗中，容易漏掉信息或无法及时处理信息，无法保障评估的实时、准确；  医学指南与实际诊疗要求的不一致，导致临床决策缺乏参考。针对当下医生在专病诊治上的挑战，实现单病种质控，有效防止疏漏提升效率；并与三甲医院合作共建辅助决策模型，优化临床决策。医疗大数据治理是为推动医疗AI的基础性工作，也是实现病历结构化的第一步，针对结构化病历的分析，使得病历数据可以更方便地再利用，成为教学、科研、管理决策的重要资料。结构化良好的病历数据，可支持大规模病历的自动抽取、分析，构建知识图谱，从而进行高效、精确的辅助决策。然而数据的利用存在两重困难：  数据分散，形态多样：院内数据分散于不同系统，结构化与非结构化数据并存，缺乏统一规范的形式。  自由文本，难以利用：文本信息方便表达概念以及事件等，是临床治疗过程的主要记录形式，但不利于机器的理解和进一步分析。所以进行医疗大数据处理是进行医疗AI化的基础性工作，也是必要工作。智能诊前助手通过基于知识图谱的多轮友好问答实现问诊，了解患者病情，将患者和医生精准匹配，致力于提高医院线上服务水平、降低分诊压力，改善患者诊前体验。这块可参考左手医生，交互还是较友好。阿里“Doctor You”与“ET医疗大脑”Doctor You :临床诊疗辅助决策临床医学科研辅助平台中国医学会误诊资料显示，中国临床医疗误诊率为27.8%，在临床科研数据中心，使用搜索引擎技术为医生提供快速、准确，多种组合方式的病历搜索功能。通过数据仓库、数据挖掘等方法，用海量临床科研数据来评价治疗效果，发现诊疗规律，提炼最佳治疗路径，提高医疗科研的能力和水平。  以人为核心的病历矩阵。  以疾病为核心的临床科研数据矩阵。  多源异构的医疗数据处理。  大数据科研辅助分析引擎。针对单病的辅助诊疗系统，面对重大疾病进行检测肿瘤基因、遗传基因与传染病等精准医疗手段，联合多方能力，接入系统以建立聚合诊断系统，对相关疾病进行风险预测。临床医师能力训练平台为建立优秀的医师培训体系是卫生事业改革和发展的一项重要任务。鉴于此，开发沉浸式医师培训系统，提升医师培训的质量与效率。新打造的医师培训系统将从过往脱敏病例（使不能从病例中推断患者个人信息）中挖掘疾病的临床路径并自动构建虚拟病人，医师用户可在模拟场景中对虚拟病人进行诊疗，并从中获取医学知识，规范诊疗操作，提高临床思维。  沉浸式医师培训系统，自动构建虚拟病人。  医师用户可在模拟场景中对虚拟病人进行诊疗。  获取医学知识，规范诊疗操作，提高临床思维。糖尿病诊断与用药分析系统ET医疗大脑：解决医疗行业的核心问题医疗质量管理对临床数据和医院运营数据的分析，结合各级部门对医疗质量标准的管理，综合运用自然语义分析、智能算法能力，对病历/病案质量，临床路径标准等进行自动监测和分析。降低因各类“错误书写”和“信息缺失”造成的医疗事故，提高医疗服务质量，实时对医疗机构的服务质量进行提示和统计管理。精细化运营分析利用智能分析算法，对医疗机构和区域医疗的运营核心指标（包括收入、利润、门急诊/住院、抗菌药管理等700余个重点关心的指标）、上级主管部门考察的重点指标（根据主管部门要求设置，并在云端定期更新）进行跟踪分析，跟踪预测指标走势，第一时间发现异常情况，并对核心指标的影响因素进行分析，找到影响核心指标的关键因素和科室，为制定管理策略提供参考。人工智能能力接入面对各类单点的人工智能能力（图像，语音，临床辅助决策等），通过“统一人工智能和数据集成平台”，医疗机构可以实现一站式智能应用对接，提供可视化应用管理，安全数据对接，统一数据脱敏，和异构数据集成等能力。医疗机构和客户可以因此安心对接人工智能算法。智能资源调度“床位不够用”；“CT排队时间长”；“儿科急诊排队长” 等等问题每天在各类机构出现，利用历史数据和城市级别的其他数据可以智能分析和预测机构面临的医疗需求，有效优化资源的使用，让合适的患者获得合适的医疗服务。  从“Doctor You”与“ET医疗大脑”产品性质来说，“Doctor You”侧重医疗本身以及疾病的诊断与治疗，适用于科研者和医生，而“ET医疗大脑”侧重从医疗资源的调度以及宏观调控，适用于管理者。腾讯“觅影”觅影的AI辅诊包括3款产品：智能导诊、病案管理、诊疗风险监控智能导诊技术为患者提供移动端的智能导诊服务，引导患者顺利就医，缓解医院导诊咨询的压力。智能导诊技术面向医院信息化服务商、各大医院免费开放，支持文字、语音的人机交互方式。觅影在医疗领域积累的医学知识图谱、诊断模型、病情理解、名医专家库等AI辅诊基础能力，切入医院的疾病预测、辅助决策、数据分析等应用场景，提供一站式的开放技术。疾病预测领域的分诊导诊这一细分场景，可以根据医院需求定制，为患者提供智能导诊服务，缓解医院导诊咨询压力。觅影产品架构图智能导诊功能：  对医学文献、病历、问答等医疗数据的学习，进行症状推理。  问答聊天机器人，支持文字、语音双输入，问询即出结果。  全病种预测范围覆盖全科室、常见疾病，基本满足导诊需求。  定制化接入根据医院科室划分、职能划分和医生资源分布情况，提供定制化接入。智能导诊功能，问询即出导诊结果，患者通过医院公众号、小程序等接入端，简要描述症状或疾病，导诊助手会追问引导其补充症状，从而精准匹配科室，为其推荐专业方向最相符的医生，实现线上导诊挂号一步到位。病案智能管理通过深度学习技术，提取海量病案特征信息，助力医院的数据标准化和医疗数据管理，为医院科研提速。目前国内医院的病案，依赖病案室人力或数据公司进行整理。科室的医学科研，提取病案特征信息也是通过人工完成。 需要投入大量人力与资金，准确率不能得到保障。通过深度学习技术，实现病案智能化管理，自动提取病案特征信息，为科研提速。通过AI辅助诊疗，对医院数据做标准化处理，助力医院完成工作量巨大而且推行困难的数据治理工作。同时基于人工智能技术和产品实力，根据需求，针对数据做定制化改造优化，输出符合要求的标准化数据。病历结构化：基于自然语言理解技术和人工智能技术，充分理解病历，高效、准确地按照需求提取出病历特征，并作结构化输出。提升科研效率，节省笔数据整理需要消耗的费用。诊断风险控制：通过诊断风险监控系统，提升诊断准确率，降低误诊风险。将医学诊疗信息以轻便的方式共享给医生。从高层面出发，全面管理并控制医生团队的诊疗水平，构建科学、精准和友好的诊疗风险监控。辅助医生临床诊断：AI辅助诊疗在诊疗风险监控的同时，及时、准确的给到医生诊断建议和治疗方案建议。提升诊疗效率。方便医生日常诊断与鉴别诊断的工作。诊疗风险监控基于深度学习模型建模，辅助降低医生诊疗风险，让专家的知识经验便捷共享。通过AI诊断分析模型，提升诊断准确率。辅诊背景由于诊断的不确定性，门诊诊断有误诊风险。诊断风险监控通过AI辅助医生诊疗，给出精准建议，辅助医生进行鉴别排除。降低高危疾病漏诊风险。升医院门诊的诊断准确率，降低诊断风险。结束语传统的医疗辅助系统，是基于医学指南、医生的经验固化成的计算机系统，系统自我学习能力差，缺乏自我修正和提升能力。而医疗AI有望打破这一困境，结合人工数据标注，实现自我迭代学习，让机器从普通与典型病案数据中总结治疗与用药经验，结合治疗的实际情况及患者后续随访的数据，不断修正和提升。以上对BAT医疗AI产品的介绍与了解可看出，现阶段的医疗AI,针对其所面向人群与产品目标大致可以分为以下3种：  面向医生：提供临床建议与辅助决策。  面向管理者：优化资源配置与医疗服务监管。  面向消费者：提供个性化健康指导与就医建议。现阶段AI医疗商业化条件不成熟，落地需科研与捐赠“双管齐下”。根据《2019中国人工智能医疗白皮书》显示，国内尚未有商业化落地产品，且国家相关产品审批标准尚未建立，客户对产品效果半信半疑，产品落地依然走科研合作与捐赠路线，以此验证市场并打磨产品。ChangeLog  Created on 19.07.14]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 医疗行业 </tag>
        
          <tag> 知识图谱 </tag>
        
          <tag> 百度灵医 </tag>
        
          <tag> 阿里DoctorYou </tag>
        
          <tag> ET医疗大脑 </tag>
        
          <tag> 腾讯觅影 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[「金字塔原理」附录三]]></title>
      <url>/model/2019/07/11/Pyramid-Principle/</url>
      <content type="text"><![CDATA[  《金字塔原理》- 要点汇总]]></content>
      <categories>
        
          <category> Model </category>
        
      </categories>
      <tags>
        
          <tag> 金字塔原理 </tag>
        
          <tag> 芭芭拉明托 </tag>
        
          <tag> 模型 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[无监督学习方法的特点]]></title>
      <url>/ai/2019/07/02/Unsupervised-Learning/</url>
      <content type="text"><![CDATA[无监督学习方法的模型、策略、算法无监督学习用于聚类、降维、话题分析、图分析。            /      方法      模型      策略      算法                  聚类      层次聚类      聚类树      类内样本距离最小      启发式算法              聚类      K均值聚类      K中心聚类      样本与类中心距离最小      迭代算法              聚类      高斯混合模型      高斯混合模型      似然函数最大      EM算法              降维      PCA      低维正交空间      方差最大      SVD              话题分析      LSA      矩阵分解模型      平方损失最小      SVD              话题分析      NMF      矩阵分解模型      平方损失最小      非负矩阵分解              话题分析      PLSA      PLSA模型      似然函数最大      EM算法              话题分析      LDA      LDA模型      后验概率估计      吉布斯抽样，变分推理              图分析      PageRank      有向图上的马尔可夫链      平稳分布求解      幂法      术语注释  PCA : 主成分分析（Principal Components Analysis）  LSA ：潜在语义分析（Latent Semantic Analysis）  NMF ：非矩阵分解（Non-negative Matrix Factorization）  PLSA : 概率潜在语义分析（Probabilistic Latent Semantic Analysis）  SVD : 奇异值分解（Singular Value Decomposition）  LDA : 潜在狄利克雷分配（Latent Dirichlet Allocation）                                               ---摘自《统计学习方法》·李航  ]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 统计学习 </tag>
        
          <tag> 无监督学习 </tag>
        
          <tag> 算法总结 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[10 种监督学习方法特点概括]]></title>
      <url>/ai/2019/07/02/10-Supervised-learning-methods/</url>
      <content type="text"><![CDATA[10 种监督学习方法特点的总结概括            方法      适用问题      模型特点      模型类型      学习策略      学习的损失函数      学习算法                  感知机      二类分类      分离超平面      判别模型      极小化误分点      误分点到超平面距离      随机梯度下降              K 近邻法      多类分类，回归      特征空间，样本点      判别模型      /      /      /              朴素贝叶斯法      多类分类      特征与类别的联合概率分布，条件独立假设      生成模型      极大似然估计，最大后验概率估计      对数似然损失      概率计算公式，EM 算法              决策树      多类分类，回归      分类树，回归树      判别模型      正则化的极大似然估计      对数似然损失      特征选择，生成，剪枝              逻辑斯谛回归与最大熵模型      多类分类      特征条件下类别的条件概率分布，对数线形模型      判别模型      极大似然估计，正则化的极大似然估计      逻辑斯谛损失      改进的迭代尺度算法，梯度下降，拟牛顿法              支持向量机      二类分类      分离超平面，核技巧       判别模型      极小正则化合页损失，软间隔最大化      合页损失      序列最小最优化算法（SMO）              提升方法      二类分类      弱分类器的线性组合      判别模型      极小化加法模型的指数损失      指数损失      前向分布加法算法              EM 算法      概率模型参数估计      含隐变量概率模型      /      极大似然估计，最大后验概率估计      对数似然损失      迭代算法              隐马尔科夫模型      标注      观测序列与状态序列的联合概率分布      生成模型      极大似然估计，最大后验概率估计      对数似然损失      概率计算公式，EM 算法              条件随机场      标注      状态序列条件下观测序列的条件概率分布，对数线形模型      判别模型      极大似然估计，正则化极大似然估计      对数似然损失      改进的迭代尺度算法，梯度下降，拟牛顿法      EM算法在这里有些特殊，它是个一般方法，不具有具体模型。                                                    摘自《统计学习方法》 李航  ]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 统计学习 </tag>
        
          <tag> 监督学习 </tag>
        
          <tag> 算法总结 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[数据量、数据处理能力与知识图谱]]></title>
      <url>/ai/2019/06/25/kg-data/</url>
      <content type="text"><![CDATA[前言之前的文章中提到过知识图谱的主要应用方向有三个：语义搜索、智能问答、可视化决策。而底层基础决定上层建筑，底层的基础说来说去还是知识快速查询、图实时计算、以及知识推理，但当下的最大困难是数据的获取与知识的抽取。知识图谱背后，强大的自然语言处理能力，是不可或缺的，尤其是医药行业，缺少可商业化的实体识别、抽取工具，如果一味的追求高质量的数据或自动化的办法，必然导致在行业发展初期数据量上的滞后性。规则模式考虑到医疗行业的本身的局限性，数据需要保证严谨、合规、科学。因此可靠的数据来源为临床病历、医学指南、医学教科书、相关论文、科普资讯、医患问答。以上数据来源大多都为文献，但是文献有文献的好处，语言描述多为书面语，可以从中总结规律，从而升级为模板进行收取。比如:（疾病-&gt;症状）。书面语描述多为：&lt;X疾病&gt;的症状有&lt;Y症状&gt;，&lt;X疾病&gt;的临床表现为&lt;Y症状&gt;，&lt;X疾病&gt;容易引起&lt;Y症状&gt;等不适症状等等。人的书写与口语表达都存在一定的模式，针对这些数据及模式，学习文献中的语法及结构，采用机器学习算法，综合统计自然语言处理，收集足够数量的数据，数据量越大越能体现出规律及语法，从海量文本中学习知识的描述方式，如果想单方面从结构化数据中获取更多的数据，那么数据量将及其有限，产出的知识效果将难以支撑上层应用。与其说知识图谱的规模从根本上决定了智能的瓶颈，不如说是数据量的积累和数据的处理能力决定了智能的发展。即使是高度结构化的医学病历，其结构中也大多存在着大段的文本，要想抽取其中的疾病症状，也需要强大的自然语言处理能力，所以这块终究是绕不过去的。个人建议基于模板的方式虽然简单粗暴，但是易于利用非结构化文本进行冷启动，数据海量。其实无论采用哪种方式，前期的人工训练、干预都必不可少。虽然此方法计算复杂度较高，但可以提升计算性能，根据抽取效果对规则模式的效果设计打分卡，从而优化算法，提升覆盖率与召回率。如果最开始就想建立大而全知识图谱，各方面都考虑，必然导致各方面受缚，无法前进。前期选择一个小领域，例如疾病、药品。以深度优先或者广度优先的方式，从海量文本抽取信息。（个人建议采用广度优先，此处的原因与爬虫的工程要点区别不大，是采用深度优先还是广度优先，类比可得出）。  如果暂时没有聪明的办法，就先想办法把笨办法做到最好。公众号]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 数据积累 </tag>
        
          <tag> 知识图谱 </tag>
        
          <tag> 数据处理能力 </tag>
        
          <tag> 广度优先 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[「资源」| 30份人工智能行业报告]]></title>
      <url>/ai/2019/06/15/AI-baogao/</url>
      <content type="text"><![CDATA[声明      本次资源分享为30份人工智能细分领域行业报告。        资源均来源于公开渠道收集整理，分享出来，以飨各位。        资源如涉及版权问题，请公众号对话框联系，立即处理。    资源截图如下，如有需要，文章底部附百度网盘链接，免费获取。资源截图资源链接  链接：https://pan.baidu.com/s/1pF0fgU4-p8bJIhVtQEStNA 提取码：ochm防和谐备份：  链接：https://pan.baidu.com/s/1_KAvuIwg_CNpHP9vEK7-vQ  提取码：h82x公众号]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 人工智能 </tag>
        
          <tag> 行业报告 </tag>
        
          <tag> 30份 </tag>
        
          <tag> 细分领域 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱在金融领域的分析与应用]]></title>
      <url>/ai/2019/06/15/finance-kg/</url>
      <content type="text"><![CDATA[前言知识图谱因其自身的图展示、图挖掘、图模型计算优势，可帮助金融从业人员进行业务场景的分析与决策，有利于建立客户画像、进行精准营销获客，发现信用卡套现、资金挪用等行为，更好的表达、分析金融业务场景的交易全貌，从而成为行业的宠儿。金融业务场景分析从上世纪 50 年代的 IT 金融开始，到如今的人工智能金融，科技的进步帮助金融行业取得更长足的发展。人工智能的进步更是让金融服务场景变得更加丰满。近年来知识图谱在电子商务、金融、公安、医疗等行业逐步开始落地，这些行业在基础设施、应用范围、市场规模来看，对于知识图谱的应用落地打下了坚实基础，渗透更深入。本文重点来讲在金融领域的应用。金融行业的优势在于基础设施好、信息化较早且成熟，数据标准化程度高；业务由数据驱动，应用范围较广；市场规模大，金融机构在数据业务的付费意愿高，付费能力强。下面将对智能在金融领域的4大业务线服务流程及细分环节、场景应用拆解，具体如下：  信贷：获客（用户画像、智能营销、智能客服、生命周期管理）、身份验证（反欺诈、活体识别、关联分析）、授信（风险定价、信用评分）、贷中监控（交易风险欺诈）、贷后管理（智能催收）；  理财：获客（用户画像、智能营销）、KYC（智能投顾、智能客服）、匹配（智能匹配、智能投研、资产组合管理）；  保险：产品设计（声明周期管理）、获客（用户画像、智能营销、智能获客）、定价/承保（风险定价）、核保核赔（反欺诈、图像识别）、赔付（智能理赔）；  支付：交易前（交易反欺诈引擎）、交易中（交易反欺诈）、交易后（模型优化）；风控是金融领域的通用需求、核心需求更是金融的根基，无论是银行还是消费金融公司，风控的底层业务逻辑几乎完全相同，差异主要存在于面对客群与风险偏好。同时，风控也是金融业务的核心，无论是国家监管层还是经营利润驱动都对金融机构的风控能力提出很高的要求。大数据及人工智能服务商以风控切入金融领域未来发展空间非常大，金融机构通常会谨慎选取服务商，建立长周期且深度的合作。有机会获取用户整个生命周期的数据，并以此切入到金融其他领域，为服务商的发展奠定了契机。服务商想要服务金融领域的门槛也更高，也不是想进就能进的，门槛主要在于技术、数据、场景理解、客群和获客5各方面，金融业务依赖数据和建模，建模依赖于数据、算法的积累，同时也依赖于业务场景的理解；技术上的高投入对于客单价和客户数对服务商来说是非常大的考验，直接影响营销收入。相关类型企业在金融领域发展的优劣势：  互联网巨头在数据、技术、业务场景理解等方面均占优势，发展前景较好，未来市场空间大。  创新型公司技术、业务场景理解强，在获取客户方面较弱，很难与银行及大型金融机构合作。  产业类公司有数据优势，但随着百行征信的入场，数据优势被削弱。  I T类公司有较强的客户资源及获客能力，对业务场景的理解弱于其他类型服务商。金融领域客户资源层级图：服务商在进行金融领域切入时可先对具体要服务的客户层级进行确定，方便对产品进行定位：业务场景分析金融领域四大核心业务中可发展知识图谱的场景流程，也是知识图谱现阶段落地的热门应用项目：      信贷领域的重点是获客、身份验证、以及授信环节。获客需要建立用户画像，追踪用户的完整生命周期；身份验证即通过活体识别、OCR等技术进行申请人的验证的问题，任务关联分析需要图关联技术，找出任务关系图谱；授信环节更要汇聚多方数据源，通过多维度历史数据进行建模并取得风险定价，输出信用分给金融机构。        理财领域的重点是营销获客和智能投顾。营销与信贷类似，需要建立用户画像实现精准营销；智能投顾需要KYC和投借匹配，要重点分析用户风险等级及偏好，并进行KYC与KYP结合，进行智能匹配。        保险领域的重点是营销获客与核保核赔。在核保核赔环节需要建立反欺诈预警模型，降低欺诈风险。        支付领域的核心是交易反欺诈，需要通过各种技术建立交易反欺诈引擎，并根据交易数据进行反欺诈引擎模型优化。  在金融行业的个领域细分场景中，唯营销、获客和反欺诈、风控是通用且核心的环节，市场上以这两个场景切入金融业务的各类公司尤为多。营销&amp;获客在互联网的全面发展的大时代背景下，金融业务基于线下营销的模式已几乎全面转战线上，茫茫互联网，如何找到客户是进行金融营销的首要问题。营销获客，需要链接多个数据源搭建智能化客户经营体系尤为关键，建立尽量全面完整的用户画像，覆盖完整的用户生命周期，并做机器学习与关系挖掘的混合营销模型，才能做到真正的智能营销、获客。营销获客整体的系统设计搭建，可大体分为 5 个方面：数据层面、模型方案、业务引擎、场景搭建、推广渠道。营销客群可分为个人客户和企业客户，链接多方数据源，针对客户建立完整的画像体系，挖掘潜在需求，进行有针对性的精准营销推送，是智能营销获客的基本思想。个人客户画像可从基本属性、购买能力、行为特征、兴趣爱好、心理特征、社交网络等方面，采用聚类、分类，以及协同过滤，分析待售客户、及潜在客户的需求与客群之前的关系，分析用户的相似性、共同爱好，细分人群活动地点、产品使用场景，从而制定并匹配以什么样的营销策略、推送策略、洽谈策略、服务策略，沉淀企业营销获客中的方法论，提升经验的可复用性。企业客户画像可以从基本信息、法律诉讼、经营状况、经营风险、企业发展、知识产权、投融资信息等方向来整体建立对企业当前状况的分析，通过这些数据建立细分服务场景中的各类分析模型，得出该企业当下的可营销指数，同时生成针对化的分析报告并针对当前问题提出解决方案，以此建立的营销机制策略可提高营销获客转化率，避免人海战术，降低人力成本。风控&amp;反欺诈金融业务中反欺诈、风控本质上是通过数据、技术甄别业务中的潜在风险。采用不同维度的数据，灵活组合产品与服务模块，建立关联数据之间的信息挖掘、推理，识别诈骗团伙，建立科学量化的分级策略模型，进行业务场景中的欺诈风险验证，洞察业务中的高危行为，解决金融行业风险痛点。依托知识图谱中的图关联分析、图计算推理等技术，解决金融领域数据孤岛、数据不对等造成的风险不可控问题，提前对信息的一致性进行验证，识别欺诈团伙、关联监控、失踪复联、黑产识别等风险，对客户数据、交易数据全面整合，建立频繁汇入、汇出、以及环装、汇聚等模型，对用户、账户进行针对性管理，减少机构、企业的损失。金融欺诈的形式、方式不断更新，相对于风控，概括来说就是“道高一尺，魔高一丈”，从而引发一系列金融黑产，这些黑产的特征上逐渐呈现呈现专业化、产业化、隐蔽化、场景化等特征。风险是金融的固有属性。金融机构本身就是以经营风险为盈利的根本手段，所以金融机构要提高盈利，最重要的就是降低风险。金融行业的 5大风险包括：信用、市场、流动性、操作和法律，以信用和市场风险为主。      信用风险是指债务人或交易对手未能履行合同所规定的义务或信用质量发生变化，影响金融产品价值，从而给债权人或金融产品持有人造成经济损失的风险。        市场风险是指在证券市场中因股市价格、利率、汇率等的变动而导致价值未预料到的潜在损失的风险。        流动性风险是指因市场成交量不足或缺乏意愿交易的对手，导致未能在理想的时点完成买卖的风险。        操作风险是指由不完善或有问题的内部程序、员工、信息科技系统以及外部事件所造成损失的风险。  为降低信用风险与市场风险给金融机构带来的影响，实时引入市场新闻、舆情、社交信息、政策变化，以及其他机构的信用数据，挖掘各放信息建立不同纬度的信用风险，信用风险不单单是评估不光是狭义的个人信用问题，还包含设计广义上的社会不可控因素。建立市场风险评估，更要深度结合股市价格、利率、汇率等数据，与相关数据房建立深度合作关系，把握实时市场走势，识别风险、预测风险影响范围，给出风险定价范围，清楚的给出细粒度的风险计算结果，让预测结果更有可信性和溯源性。风控不单单是对外，也要包含对机构内部的风险控制，对内主要是对机构内部流程、跨部门合作漏洞、子机构对接风险、业务逻辑风险、产品策略风险、多条业务线重合风险等各种隐含风险，所以在系统设计时应尽量进行全量数据、全角色的覆盖整合。金融知识图谱构建的早期还是以数据为主，随着不同纬度数据的补充，数据源市场集中度的提升，市场核心需求逐渐由数据过渡到建模，不久的未来金融KG市场的竞争核心，将是数据与分析平分天下。以前风控业务是以数据输出为主，建模分析为辅，因此收费模式核心为数据调取量，随着数据壁垒的打破，数据分析能力（打分卡+数据科学家）输出将成为风控商业模式的核心。需要注意的是搭建KG系统的核心不是数据和算法，而是对业务的理解和知识图谱的设计，就像常见的各类业务系统，数据库选型和数据表设计非常关键，但是这种系统的设计离不开对业务深入理解和对未来场景变化的预判。结语数据驱动是金融业务的共识。基于知识图谱的数据平台，解决数据挖掘关联分析，将是金融业务机构的发展方向，以营销获客、反欺诈风控切入的公司逐步发展为提供金融全流程服务的平台服务商，实现按业务服务流量收费的商业模式。金融行业已经朝着大数据+云计算+区块链+人工智能技术互相融合的方向而去，大数据为机器学习、算法模型优化提供数据，云计算保证算力与存储，区块链避免信息泄露、被篡改的安全问题。人工智能是未来金融产业发展的核心驱动力，而知识图谱作为金融业务的核心驱动力之一，在信息数据隐含关系挖掘有着不可替代的能力，促进金融升级转型。预告：下一篇将侧重金融领域营销获客及风控系统产品设计注：文中部分数据、图表来源于ifenxi  、艾瑞。Changelog  创建于 2019-06-15]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 金融领域 </tag>
        
          <tag> 知识图谱 </tag>
        
          <tag> 营销获客 </tag>
        
          <tag> 风控反欺诈 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[「医疗知识图谱」到「综合性医疗大脑」]]></title>
      <url>/ai/2019/05/29/Medical-brain/</url>
      <content type="text"><![CDATA[背景最近，由于某些原因，特别关注了医疗知识图谱方面的发展&amp;应用情况，有了些浅薄认识，故码此文，以供参考。随着智能时代的到来，把临床数据、临床指南、组学数据通过大数据、知识图谱、可视化系统结合，核心医学概念的全面覆盖、医疗生态圈内全方位知识数据的聚合，构建综合医疗大脑，给临床医生、科研工作者、管理工作者提供帮助，成为未来医疗的发展方向。Tips：临床数据：医院信息系统的电子病历、影像、检验等一大堆专业临床业务系统产生的数据集合。临床指南：针对特定的临床情况，帮助临床医生和患者根据特定的临床情况做出恰当决策的指导意见。组学数据：如基因组学、蛋白组学及代谢组学产生的生物信息数据，医院另一个数据中心。想法既然是综合的医疗大脑，那么满足多样化的应用场景是必要条件，提供语义搜索、知识问答、临床辅助、疾病趋势预测、疾病易感人群、热词搜索标签云、预防、疾病所需检查、忌吃食物、理疗食谱等等。从大量的医疗新闻、临床指南，医院历史数据，药品库、疾病库、处方库、风险因子库和医疗资源库，建立起实体之间的语义关系，最后形成知识图谱、医学大脑、成为社会化医疗应用。以美团餐饮大脑为参考，构建综合性医学大脑，邀请更多医疗机构参与合作，共同构建完整的医学大脑，包括疾病症状、用药参考、以及从海量病例中挖掘的经验知识等等，以疾病、症状、用药、问诊等节点，建立精准的关系结构，实现智能化的诊疗知识图谱。如果单纯按照临床数据、临床指南、组学数据等数据图谱化没有太大的发展意义。 如CMeKG中文医学知识图谱，属学术研究不做过多评价。CMeKG目前是1.0版，包括：6310种疾病、19853种药物（西药、中成药、中草药）、1237种诊疗技术及设备的结构化知识描述，涵盖疾病的临床症状、发病部位、 药物治疗、手术治疗、鉴别诊断、影像学检查、高危因素、传播途径、多发群体、就诊科室等以及药物的成分、适应症、用法用量、有效期、禁忌证等30余种常见关系类型， 关联到的医学实体达20余万，CMeKG目前的概念关系实例及属性三元组达100余万。CMeKG仅供学术研究使用，不做商业用途。行业难点医疗、金融等细分领域的智能化过程中，行业本身面临着诸多困境，医惠科技何国平讲到了医疗行业的四座大山：  1、医疗信息化的发展有20多年的历史，期间出现多条发展路线，使得采集数据不连续或维度单一，数据价值大打折扣；  2、数据分散在很多业务系统，数据掌握业务商手中，不同业务商的数据标准结构不同，造成数据的清洗、整理非常困难；  3、不同医院、不同医生对病情的描述方式存在差异，计算机无法理解这些表达，需要对采集到的数据进行标准化处理，标准化的过程非常困难；  4、对数据进行充分挖掘、转化为知识，尤其在数据体量非常庞大的情况下，也存在很大的困难。针对以上问题，我在调研过程中发现OMAHA七巧板医学术语集文档，只不过加入使用需要支付昂贵的费用，这里我列出一些官方提供的文档作为参考：  1、OMAHA七巧板医学术语集入门指南_20190430.pdf  2、OMAHA术语集发布文件规范_20190417.pdf  3、子集定制工具使用指南_20190417.pdf以前由专家收集整理信息的建设方式消耗巨大的资金与时间，至今仍没有一个较为完整的医学知识图谱。中文医学术语建设更是严重落后于发达国家，严重医疗大数据技术的发展。医疗本身的局限性。如医学临床指南，对疾病临床治疗过程如果严格按照指南来做，哪怕出现了差错，从法律的角度，承担的责任也比较有限；如果没有按照指南来做，产生了差错，那责任就会比较大，所以医学临床指南的加入在智能化的过程中会非常重要。互联网上存在很多半结构化的医学临床指南，比如丁香园、名医百科、中华医学会、医脉通，经常会公布一些指南。医学数据处理中指代消解、实体消歧的工作量不比一般行业少。期刊论文，病程记录，不同医院，不同医生，表达习惯千差万别，比如发热、发烧、高烧、低烧、39度，医生想要表达的就是发烧，但是计算机理解不了。所以数据的标准化，是数据实体化的关键。数据的标准化以后，就是数据的实体化。举个例子，如何诊断小儿麻痹症？它的多临床表现有哪些？检验指标是什么？判断一个小儿麻痹症，在诊断出小儿麻痹症以后，根据医学临床指南，他要吃什么药？要做什么检查？做什么康复等等，有一系列指南。把这些描述标准化，建立语义关系，就是数据实体化。对于广大普通用户，医学知识科普也面临着三大难题：网络医疗信息鱼龙混杂，难辨真假；优质的医学内容分散，难检索；自然语言与医学专业术语之间的差异，搜索不精准。应用举例搜狗明医在医疗领域进行了三方面应用：      1、权威医学内容的呈现。在搜索某个疾病，会出现该疾病的概述、症状、治疗护理和专家意见等卡片式的内容呈现，方便让用户对疾病有更全面和清晰的了解。        2、推理计算。搜索某个症状时，将该症状可能会涉及的疾病以及概率计算出来，同时将科室和具体的症状列出供用户参考。甚至当用户搜索某个疾病后，利用医院的地理位置和科室设置等信息，直接计算出和推荐离用户最近的医院。        3、智能分诊系统。智能辅助问诊机器人，通过用户提交的症状对疾病的类型、就诊建议等作出判断和推荐。除了文本和语音技术之外，将图像识别技术应用于智能自诊推出“湿疹痱子识别”功能，当家长上传宝宝患处照片后，帮助家长判断宝宝身上的红斑可能是湿疹还是痱子。  展望在智能医学的发展当中，必须在可解释性、可循证性、资源可信度上做大量工作。将医学文献知识转变为医疗知识图谱，也包括将海量病例中挖掘的经验知识转变为机器可以理解的表示形式，是医疗知识图谱发展中所必须经历的。同时，图谱数据量大、数据覆盖面广、数据质量高是知识图谱能够走入临床的基础。足够的数据才能帮助辅助诊断做全面的分析，包括：  基于疾病与症状关系辅助诊断；  基于疾病与检查检验关系推荐检查检验；  基于疾病与药品关系及药物相互作用推荐用药；  基于指南、文献以及相似病例推荐医疗证据。持续积累有效的治疗案例和数据，不断累积经验，持续学习，建立持续、快速的成长模式。构建针对不同的医疗管理与临床环节，覆盖诊前、诊中、诊后全流程端到端的解决方案。根据疾病症状分析系统，通过智能辅助诊断根据病人的描述来预测可能的疾病，给出一些确诊疾病相关的检查，用药环节，系统会在此前医生确诊的基础上，自动给出可用药物、剂量、剂型、频次。医生还可运用机器对病历进行汇总、复盘，找出可能存在诊断问题的病历，减少医生的出错率。建立读片标准和成像参数，构建多模态多病种影像平台，降低误诊、漏诊率。技术问题在医疗领域，抽象本体，归纳实体可以从疾病、症状、检查、检验、体征、药品等维度考虑，包括医生、科室、医院都可以囊括近来。关系是指实体间的关系，比如，针对疾病和症状，关系可有“包含关系”，“不包含关系”，甚至“金标准关系”。疾病和医生可以定义“医生擅长治疗疾病”，医生和医院可以定义“归属于关系”等。这些可以归纳到Schame构建层面，康夫子张超在介绍知识图谱建设中信息抽取时介绍到：知识规律发现其实就是pattern learning。人们是按照一定书写方式来描述知识的，数据量越大越能体现出书写的语法及结构。康夫子的一个核心技术即针对要抽取的知识从海量文本中学习这种知识的描述方式。康夫子的着眼点依次是：  1、快，因为医疗知识图谱有上千种关系，处理速度要快； 2、准确率高； 3、覆盖率高，比如要有足够多的疾病与症状的知识，才能分辨出疾病； 4、可控； 5、通用性强。在这样的标准下，比较推荐简单粗暴可控的框架，即基于模板的抽取。这类方法简洁可控，容易冷启动，准确率可控，通用性也不错。不足是：模板产生困难、覆盖率不高，而且容易产生语义漂移，需要做边界控制，最后是计算复杂度高。这是目前这种计算框架的优劣。重要图片医疗知识图谱的难点还在于AI 的基础能力，如自然语言处理、计算速度，模型适配。可见康夫子的医疗知识图谱技术发展不是完全说大话，还是有一定金刚钻的。建议想要做知识图谱的公司可以尽早准备入坑，可以在产品设计与技术方面多做积累，不断探索前行。医学知识图谱构建技术方案介绍可参考该论文《医学知识图谱构建技术与研究进展》：论文获取方式：公众号对话框回复【KG论文20190529】]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 医疗大脑 </tag>
        
          <tag> 知识图谱 </tag>
        
          <tag> 产品技术先行 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[浅析个性化推荐&知识图谱相结合]]></title>
      <url>/ai/2019/04/17/Recommender-system/</url>
      <content type="text"><![CDATA[  推荐系统是一种信息过滤系统，用于预测用户对物品的“评分”或“偏好”。 – From wikipedia推荐系统火热，是互联网、大数据、人工智能发展的必然趋势。其可应用于各个细分领域。如：新闻微博、电商、外卖团购、视频音乐、搜索查询、社交人脉、证券股票等等。目前推荐系统主要4种推荐方式：热门推荐、人工推荐、相关推荐、个性化推荐。热门推荐顾名思义就是热度比较高的当下热点事件或内容，有广泛的社会关注；人工推荐是编辑或内容运营人员将优秀的文章或物品进行有针对性的推送；相关推荐则为根据当下浏览的内容按照一定的信息或关联规则进行内容推荐；个性化推荐时根据用户的历史浏览记录，通过算法和模型进行机器学习为用户自身定制化的推荐。本文重点关注个性化推荐与知识图谱相结合的方式。产生背景Web2.0我们常用搜索引擎获取自己需要的信息，即使现在，搜索引擎也是主流的信息资料获取途径。但使用搜索引擎的背景是目标明确的情况下，同时也需要将目标转化为搜索🔍关键字，并在巨量的结果集下筛选信息会浪费大量的时间、资源。当用户需求较为模糊不能转化为搜索关键字时，推荐系统优势便凸显出来。推荐系统浅析推荐方式推荐系统产生推荐列表的常见方式可总结为2种：基于内容与基于协同过滤。  基于内容推荐做法：利用有关物品的离散特征，推荐具有类似性质的相似物品。（以物推物）此方法根据用户历史信息来识别和推荐类似内容。历史信息可手动定义，也根据类似性算法自动提取。与协同过滤的最大区别在于它仅依赖用户自身的信息或历史访问记录，而不依赖其他相似用户的历史行为。  基于协同过滤做法：根据用户的历史行为，如：购买、评价、点赞等行为，结合其他相邻用户的相似决策建立模型，用于预测当前用户对哪些物品感兴趣（或预测某些物品感兴趣的程度）。由于协同过滤要考虑其他用户的行为，使用群组知识并基于相似用于形成推荐内容。本质上，推荐内容基于多个相似用户之间的自动协作，并过滤出相似偏好或行为的用户。相似性: 根据所用的特定算法，将拥有类似兴趣爱好的用户进行分组，用于推荐内容。可用韦恩图表示相似程度。  Tips: 推荐系统是代替搜索引擎帮用户找到合适的物品，而推荐系统实现底层却使用搜索引擎算法对数据进行索引，还有其他大量相同的技术。但是在用户需求与应用场景上，推荐系统离用户更近。大多数场景下，用户的个性化需求很难转化为简短明确的查询词，推荐系统应运而生，填补空白，挖掘用户历史行为，满足个性化需求，实现精准推荐。  还有一种混合推荐方式：“混合方法”。混合方法是将基于内容与基于协同过滤结合使用，目的为增加推荐系统的效率和复杂性，并且合并之后有可能增加推荐的准确性，混合方法也可用于解决协同过滤数据冷启动。随着用户数据增加或成熟，权重逐步从基于内容过滤转向基于协同过滤。与搜索引擎相似，推荐系统也需要对推荐列表集进行过召回、过滤、排序，推荐引擎根据推荐算法获取到推荐结果集，然后根据筛选条件对召回结果集进行过滤，过滤后最终推荐结果，与此同时对推荐结果按照排序策略算法进行权重排序，用户便可看到最终的推荐结果。  以上主要为的当前业界所用或者称为传统推荐方式，以下将重点关注基于知识图谱的推荐的系统数据收集收集用户数据不是一蹴而就的。也就是需要经过常说的冷启动阶段。并且，数据需要经常更新，且有时效性。会随着时间、地点、年龄等因素的变化而变化。此处需要引入衰减机制，即让用户关键词表中的关键词喜好程度按一定周期或规律保持衰减。具体查看TF-IDF算法，此算法可返回一组某篇文本关键词TF-IDF的词对数，这些关键词最好的代表了这篇文本的核心内容，而这些关键词将本篇文章的关键程度量化。TF-IDF算法可参考《TF-IDF及其算法》数据又可分为显示数据和隐式数据，显示数据即用户的购买、退货、打分、点赞、收藏、评论等形式，直接表达自己的喜好。隐式数据可能使隐形的，需要深度挖掘，如：快进、重复观看、浏览、点击等等，隐式数据准确度较低，并存在很大的噪声。今日头条的内容推荐和微信看一看均提供了让用户主动优化推荐引擎的方式，让推荐数据最大程度的满足用户需求，精准描述用户画像。建立评判标准评判一个推荐系统的前提，是建立一个好的评判标准，不断改进算法，无限靠近评判标准。推荐系统的实际效果依赖多种因素，如用户意图、用户背景知识、对系统的熟悉度、信任度、用户界面等等。目前推荐系统的评判标准可分为“准确度(accurary)”和“可用性(usefulness)”两种。准确度是推荐系统的预测结果，与用户行为之间的误差。准确度还可细分为“预测准确度”和“决策支持准确度”；预测准确度又可分为“评分预测准确度”、“使用预测准确度”、“排序准确度”等，计算推荐系统对消费者喜好的预测与消费者实际喜好间的误差平均值。预测准确度是非常重要的评判标准，却不是唯一。推荐系统的可用性一般用覆盖率(召回率)来描述，为描述推荐效果的多样性，也常采用其他的可用性指标，这些指标对推荐系统的用户体验也具有非常重要的意义，如：新颖性、惊奇性、实用性、风险、鲁棒性、隐私性、自适应性、可扩展性、推荐效率以及可解释性等等。现有评估推荐系统的评估方法主要有：离线测评、在线测评与用户调研等.下面主要介绍离线测评：离线测评：把数据集分成训练集和测试集，通过训练集学习优化调整模型，用测试集对模型进行测试，计算精确度和运行效率，这种方法简单、属于闭门造车，不与用户交互，不能测试出用户满意度。所以一般用户自测或内部测试。离线测评中使用3个指标对其推荐结果进行评估：准确率（Precision）、召回率（Recall）、F值（F-measure），这3个值可从结果矩阵中评判推荐结果；具体算法详解可见历史文章《算法模型评估：准确率(Accuracy)精确率(Precision)召回率(Recall)和综合评价指标(F1-Measure)》。召回率反应被推荐系统推荐的物品占真正喜欢的物品的比重。准确率反应推荐系统的推荐水平，能不能将用户喜欢的物品推荐给用户，而用户不喜欢的物品则不推荐。F值是准确率和召回率的加权平均，均匀的反应推荐效果。知识图谱在推荐系统中的优势与方法介绍大数据环境下对知识图谱的发展奠定了数据上的优势，对多源异构数据进行整合，建立更细粒度的用户实体和文章或物品实体，得到更加紧密知识相关性。因此，知识图谱在扩展实体信息、强化实体之间的联系上，有天然的优势，可为推荐系统提供强大而丰富的参考作用。在知识图谱中，实体中包含着丰富的描述性知识，而这些知识恰好可以为推荐结果提供精确性、多样性与可解释性。  将知识图谱引入推荐系统主要有3种处理方式，并非可商用，此处只做方法介绍：基于特征的知识图谱辅助推荐基于特征的知识图谱辅助推荐的核心是知识图谱特征学习的引入，知识图谱可提供实体之间更深层次和更长范围内的关联，知识图谱的高纬度和丰富的语义关系，使得处理起来比物品属性更复杂困难。使用知识图谱特征学习对知识图谱进行处理，得到实体和关系的低维稠密向量表示，由此便可以较为自然的与推荐系统进行结合与交互。使用该方式处理，根据训练次序不同又可分为3种方式，以下为3种方式的处理示意图：基于结构的推荐模型基于结构的推荐模型可更直接的使用知识图谱的结构，对于知识图谱中的每个实体，都进行宽度优先搜索来获取其在知识图谱中的多边关联实体，并从中得到推荐结果。根据其所用关联实体的技术不同，有可分为向外传播法和向内聚合法：向外传播法模拟用户兴趣在知识图谱上扩展的过程，将每个用户的历史兴趣作为知识图谱的种子集合，沿着知识图谱的链接迭代向外扩展。附示意图一张：向内聚合法在学习知识图谱实体特征的时候聚合该实体的邻居特征表示，通过邻居聚合操作，将每个实体的特征计算都结合其临近结构信息，且权值是由链接关系和特定的实体(用户)决定，这样就同时刻画了知识图谱的语义信息和个性化兴趣。在这里提供网上看到的几种方式作为参考：  下位实体遍历：浏览此商品或文章（实体）后还需要其他下游相关辅助物品或信息，助力或强化已知实体。例如买了手机时候有可能需要屏幕贴膜、耳机、手机保护壳等等。  组合属性遍历：根据用户搜索或浏览的信息提供临近或相似实体，以供参考。如：当浏览Thinkpad E450笔记本时，系统便推荐同价位的其他品牌笔记本如华硕、神州等等，供用户参考。  同属性遍历：相同父实体的子实体也具有相关性，当一个实体具有多个父实体，不是所有的父实体都适合被往下遍历。当用户咨询Thinkpad E450时，系统推荐台式机就不是很合适。  二元实体遍历：适合同父类实体遍历，同父类实体通常表示这两个产品互补或者相似。  多路径遍历对比：知识图谱是网状的关系，实体之间可以通过多种路径遍历得到，所以可以对遍历路径进行对比得到较为合适的路径。基于知识图谱表示学习的协同过滤基本思想是对于协同过滤计算出来的最邻近物品，系统推荐给用户，而对于该用户喜欢的物品在语义上相似的物品，同样推荐给用户。相对于协同过滤推荐算法，仅使用推荐算法，加入内涵知识（知识图谱）会得到更好的效果，推高推荐的可用性。此方法将推荐物品嵌入到一个低维空间，然后计算物品之间的语义相似性，生成语义相似性矩阵，最终得到物品的语义临近，同时也解决了推荐冷启动问题。这里给出一个TransE-CF算法处理流程图。推荐系统使用知识图谱的重点与难点1️⃣、如何对用户偏好进行精准建模？知识图谱数据往往多源异构，具有丰富的用户、物品等实体数据信息，在此基础上如何提高推荐的准确性。2️⃣、大数据环境下，数据生成速度快，且多源数据融合过程中引入了更多的噪声和冗余，传统推荐算法中采用的精确计算方式越来越难以应对，概率模型统计方法将继续发挥重要作用。3️⃣、如何评价其推荐效果？传统推荐系统的评价指标主要是准确度和可用性。这些指标当然也可以用于基于知识图谱的推荐系统，用准确率和召回率来表示推荐系统的准确度。然而不同领域的推荐系统的实际问题不同，使用不同的数据集，使得难以形成统一的效用评价标准。4️⃣、如何通过深度挖掘和相关性知识提高推荐效果？鉴于知识图谱的特点，其相对于因果关系，其更适合关系挖掘。通过从知识图谱中深度挖掘物品实体之间、用户实体之间、以及物品与用户间的深层次关系，来得到更多的相关性结果，帮助用户进行个性化推荐，提高推荐结果的精确性、多样性和可解释性。5️⃣、如何提高推荐系统的可扩展性？可扩展性一直是推荐系统应用中的难点。传统推荐系统中，用户与物品数量增加，使计算量显著增大。目前主要的解决方法有聚类、数据集缩减、降维等。知识图谱中，用户之间、用户与物品之间信息互动产生大规模的数据集；将这些数据集融入知识图谱后会急剧增加计算复杂度。如何将用户之间产生的数据动态、快速地融入知识图谱并提高推荐系统的可扩展性，是要解决的难点。6️⃣、怎样充分利用社交网络信息？传统的推荐系统假设用户之间是独立同分布的，忽略了用户之间的社会交互与联系。知识图谱中用户与用户、用户与物品、物品与物品之间都存在一定的联系，用户不再是单一独立的用户，需要进一步挖掘用户之间的联系以发现更多的隐含信息。如何充分利用好图谱中的社交信息，将推荐系统的效果发挥的更好，值得期待。7️⃣、将知识图谱与推荐系统结合已逐渐成为学术研究与产业应用的研究热点，但现有方法仍有非常大的局限性，且模型都属于统计学习，通过挖掘网络中的信息，并采用统计学来推断。现有模型网络结构都是静态的，真实的业务场景中，用户的兴趣与需求会随着时间、地点等诸多因素而改变，如此多变的情况，对知识图谱的时效性具有非常高的要求，如何刻画时间、地点的演变网络，值得深入研究。与推荐系统结合的其他产业界研究热点方向有：  推荐系统与深度学习  推荐系统与强化学习  推荐系统中的用户画像  推荐系统的可解释性持续更新…ChangeLog  Create 2019-04-24参考资料  [1]. 如何将知识图谱特征学习应用到推荐系统？  [2]. 推荐算法不够精准？让知识图谱来解决  [3]. 个性化推荐系统，必须关注的五大研究热点  [4]. 知识图谱的推荐系统综述  [5]. 知识图谱在推荐系统的落地  [6]. RippleNet: Propagating User Preferences on the KnowledgeGraph for Recommender Systems]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 推荐系统 </tag>
        
          <tag> 知识图谱 </tag>
        
          <tag> 个性化推荐 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[算法与模型评估：准确率(Accuracy)，精确率(Precision)，召回率(Recall)和综合评价指标(F1-Measure)]]></title>
      <url>/ai/2019/04/10/Accuracy-Precision-Recall-F1/</url>
      <content type="text"><![CDATA[序言自然语言处理(ML)、机器学习(NLP)、信息检索(IR)等AI领域，评估(evaluation)是一项非常重要的工作，其模型或算法的评价指标往往有如下几点：准确率(Accuracy)，精确率(Precision)，召回率(Recall)和综合评价指标(F1-Measure)。简单整理，以供参考。准确率（Accuracy）准确率(Accuracy)是一个用于评估分类模型的指标。说人话，模型预测正确数量所占总量的比例。准确率的伪公式：准确率（Accuracy） = Number of correct predictions / Total number pf predictions = 正确预测数 / 预测总数在二元分类中，可根据正类别与负类别按如下方式计算：注：下方公式中，TP = 真正例 ， TN = 真负例 ， FP = 假正例 ， FN = 假负例。名词释义:  真正例（TP）: 正例样本被标记为正例。  假正例（FP）: 假例样本被标记为正例。  真反例（TN）: 假例样本被标记为假例。  假反例（FN）: 正例样本被标记为假例。试举例计算模型的准确率，假设某模型将100个肿瘤分为恶性（正类别）或良性（负类别）:根据上述例子的数据我们来计算该模型的准确率：乍一看，该模型的准去确率为0.91，也就是91%，（100个样本中有91个预测正确），这是不是可以表示我们的肿瘤分类器在识别恶性肿瘤方面酒标的非常出色呢？带着这个疑问，我们仔细分析一下正类别和负类别，深入理解该模型的效果。100个肿瘤样本中，91个为良性，其中，1个FP（假正例）&amp; 90个TN（真负例），9个为恶性，其中，1个TP（真正例）&amp;8个FN（假负例）。整个样本中有91个良性肿瘤，该模型将90个样本正确识别为良性肿瘤，将1个样本识别为恶性，这个效果很好。但是，在9个恶性肿瘤样本中，将8个样本识别为良性，9个恶性肿瘤有8个未被诊断出来，8/9，这个结果多么可怕！！！91%的准确率，看起来还不错，如果另一个肿瘤分类器模型总是预测良性，那么这个模型使用我们的样本进行预测，也会得出相同的准确率。换句话说，该模型与那些没有预测恶性肿瘤和良性肿瘤的模型差不多。还有，当我们使用分类不平衡的数据集（如：正类别标签与负类别标签数量存在明显差异）时，就一项准确率并不能反映情况。  为了更好的评估分类不平衡的数据集问题，下面引入精确率（Precision）和召回率（Recall）精确率（Precision）精确率为解决在被识别为正类别的样本中，为正类别的比例。精确率的公式定义如下：Tips: 如果模型预测结果中没有假正例，则模型的精确率为1。那我们来接着上面肿瘤预测的样本结果来计算其精确率，好，接着看预测样本分布图：其精确率的计算结果为：可以看到该肿瘤预测模型的精确率为0.5，换句话说就是，该模型在预测恶性肿瘤方面的正确率是50%。召回率（Recall）召回率为解决在所有正类别样本中，被正确识别为正类别的比例。召回率的公式定义如下：Tips: 如果模型的预测结果没有假负例，则模型的召回率为1.0。同样使用上述肿瘤预测的样本结果来计算其精确率，看预测样本分布图：召回率的计算结果如下：由以上结果可以看出，该模型的召回率为0.11，那么，就可以说，该模型的能够正确识别出所有恶性肿瘤的百分比是11%。  想要全面评估模型的有效性，必须同时检查精确率与召回率。但是，很遗憾，精确率和召回率往往是此消彼长。也就是说，提高精确率通常会降低召回率，反之亦然。好，带着这个问题，我们来看一个综合评价指标(F1-Measure)综合评价指标（F1-Measure）  F-Measure是一种统计量，又称F-Score,也是精确率（Presicion）和召回率（Recall）的加权调和平均，常用于评价分类模型的好坏。			-来自百度百科F-Measure数学公式为：如上式中，P为Precision， R为Recall，a为权重因子。当a = 1时，F值变为最常见的F1了，代表精确率和召回率的权重一样，是最常见的一种评价指标，因此，F1的数学公式为：根据前面的出的精确率和召回率，便可得出其F1值：  F1 综合了精确率和召回率的结果，当F1较高时，则说明模型或算法的效果比较理想。ChangeLog  Create on 2019-04-11]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 模型评估 </tag>
        
          <tag> 准确率(Accuracy) </tag>
        
          <tag> 精确率(Precision) </tag>
        
          <tag> 召回率(Recall) </tag>
        
          <tag> 综合评价指标(F1-Measure) </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[互联网项目风险管理清单]]></title>
      <url>/work/2019/04/04/Internet-Project-Risk-List/</url>
      <content type="text"><![CDATA[背景在没有项目经理时，产品经理就是产品的爹和娘，从点子到产品，真真的一把屎一把尿去拉扯。话是糙了点，但理不糙。项目管理  项目管理是项目管理者，在有限的资源约束下，运用系统的观点、方法和理论，对项目涉及的全部工作进行有效地管理，即从项目开始到结束的全过程计划、组织、指挥、协调、控制与评价，以实现项目的目标。  –MBAlib项目管理主要包括以下几个管理方向：  范围管理：对项目工作内容的控制与管理，包括：范围界定、范围规划、范围调整等。  时间管理：按照重要与紧急程度对工作内容排序、时间预估、进度安排等。  费用管理：对项目成本进行预估，合理安排实施费用，资源配置等。  质量管理：对项目中涉及产品质量设置标准，设定质量规划、控制、保证的标准。  人力管理：对项目人员进行组织规划、团队建设、人员选聘等一系列工作。  沟通管理：确保项目相关人员对目标清晰、信息传输过程中没有歧义，书写进度报告。  采购管理：对项目中所用资源进行采购、征购，资源选择、合同管理。  风险管理：预估项目中可能存在的各种不确定因素，包括：风险识别、风险量化、对策制定、风险控制等。  综合管理：确保各项工作有序推进，有项目全局意识，更好的总体把控。风险管理风险管理的目是在问题出现之前识别出潜在问题，并对潜在问题进行预判、评估，以便在出现问题时可灵活应对，缓解或消除对目标达成的不利因素。风险管理主要包括：风险识别、风险分析、风险计划、风险控制与风险追踪，识别并解决问题。最近在做项目，经常遇到一些因为没有进行项目风险评估的坑，所以对项目常见问题进行汇总，以后可按照这些方面进行排查、评估，可使项目顺利、快速推进并落地。风险清单  以下图片来自《浅谈互联网项目风险管理》：ChangeLog  Create 2019-04-04]]></content>
      <categories>
        
          <category> Work </category>
        
      </categories>
      <tags>
        
          <tag> 互联网项目 </tag>
        
          <tag> 风险管理 </tag>
        
          <tag> 风险预判 </tag>
        
          <tag> 风险清单 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Markdown用法之-奇技淫巧]]></title>
      <url>/blog/2019/03/29/Markdown-Diabolic-tricks/</url>
      <content type="text"><![CDATA[本篇文章不涉及Markdown的基本用法，主要总结本人在使用Markdown写博客时所用到的奇技淫巧，如有需要，拿走不谢。Markdown图片用法图片居中&lt;div align="center"&gt;&lt;img src="https://www.bobinsun.cn/assets/images/logo-top.jpg"/&gt;&lt;/div&gt;  效果展示自定义图片大小与位置&lt;div align="center"&gt;&lt;img width="200" height="auto" src="https://www.bobinsun.cn/assets/images/logo-top.jpg"/&gt;&lt;/div&gt;  效果展示Markdown插入视频视频适配屏幕&lt;video src="http://qiniu.swarma.org/newUser.mp4" controls="controls" width="100%" height="auto"/&gt;src：视频地址---http://qiniu.swarma.org/newUser.mp4controls：显示或隐藏播放器 true/falsewidth：播放器宽度height：播放器的高度  效果展示插入Emoji表情符号Emoji资源库  emoji-cheat-sheet：https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md资源截图：  效果展示:smile: :blush: :sparkling_heart: :cupid: :speech_balloon: :mag_right: :bathtub: :soccer: :gem: :one: :two::bowtie: :money_with_wings: :anguished: :family: :ox: :mega: :bath: :soccer: :watermelon: :bike: :us: :cn: :one: :u5408: :u6709: :do_not_litter: :sos: :x:设置文字属性改变字体颜色&lt;font color="#FF4500"&gt;我要变成这个颜色#FF4500&lt;/font&gt;  效果展示      我要变成这个颜色#FF4500    附：《十六进制颜色对照表》改变文字大小&lt;font size="1"&gt;我要变成1号字&lt;/font&gt;&lt;font size="2"&gt;我要变成2号字&lt;/font&gt;&lt;font size="3"&gt;我要变成3号字&lt;/font&gt;&lt;font size="4"&gt;我要变成4号字&lt;/font&gt;&lt;font size="5"&gt;我要变成5号字&lt;/font&gt;&lt;font size="6"&gt;我要变成6号字&lt;/font&gt;&lt;font size="7"&gt;我要变成7号字&lt;/font&gt;  效果展示      我要变成1号字        我要变成2号字        我要变成3号字        我要变成4号字        我要变成5号字        我要变成6号字        我要变成6号字  改变文字背景颜色  示例代码&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#7FFF00"&gt;我要变成#7FFF00背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#D2691E"&gt;我要变成#D2691E背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#6495ED"&gt;我要变成#6495ED背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#FFF8DC"&gt;我要变成#FFF8DC背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#008B8B"&gt;我要变成#008B8B背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#A9A9A9"&gt;我要变成#A9A9A9背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor="#8FBC8F"&gt;我要变成#8FBC8F背景色&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;  效果展示      我要变成#7FFF00背景色        我要变成#D2691E背景色        我要变成#6495ED背景色        我要变成#FFF8DC背景色        我要变成#008B8B背景色        我要变成#A9A9A9背景色        我要变成#8FBC8F背景色  Jekyll博客中插入PDF预览插件&lt;object data="http://example.com/yourpdf.pdf" type="application/pdf" width="100%" height="700px"&gt;    &lt;embed src="http://example.com/yourpdf.pdf"&gt;        &lt;p&gt;This browser does not support PDFs. Please download the PDF to view it: &lt;a href="http://example.com/yourpdf.pdf"&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;&lt;/object&gt;  效果展示《基于知识图谱的问答系统关键技术》            您的浏览器不支持PDFs预览. 请下载该PDF后查看 : 点击下载PDF.]]></content>
      <categories>
        
          <category> Blog </category>
        
      </categories>
      <tags>
        
          <tag> Markdown </tag>
        
          <tag> 奇技淫巧 </tag>
        
          <tag> 图片居中 </tag>
        
          <tag> 视频适配 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[对集智学园新版官网『知识星空』的一些思考]]></title>
      <url>/works/2019/03/28/swarma-Konwledge-StarrySky/</url>
      <content type="text"><![CDATA[一、前面的话昨天，饭团AI产品经理大本营hanniman团长给我分享了一篇文章《[集智学园知识星空——产品介绍篇](）》。集智学园采用知识图谱的方式对原官网进行了一次升级，官方介绍：使用一种全新的高维方式来展示网站课程。之前看过明略的官网，动画效果与之类似，不知道此官网是不是从明略官网得到的灵感，并进行了升级。  先来看一下演示视频：        本次升级为灰度上线。目前有两种方式可查看新版本：  第 1 种：小概率自动分流；  第 2 种：隐蔽入口（登陆站点可查看）；二、产品优势-官方介绍官方解释本次改版的目的是为将一维列表在高维空间上展示，说高维有很多独特优势，主要进行了3点说明：1.使用二维展示方式，展示的信息更多维，更丰富。在一维页面，为突出某些信息时，通常会在粗细、颜色、大小等方面做一些动作。并且很难在同一个页面展示信息之间的关联性，大多采用层级嵌套等方式来解决，无疑就要增加路由跳转与视觉跳出感。2.使用层级化展示，每个层级有对应的信息重点，在展示更多信息的同时，不产生视觉负担。人脑在一瞬间所能接受的信息量是有限的，当信息量大于人脑的处理能力时，人就会失去焦点，且感到混乱。层级化主要为解决”信息多”与”感到混乱”的问题。新版知识星空隐轻就重，由浅而深，由外入内，增加知识体系的沉侵感。3.高手可便捷地自行探索学习路径，同时也为初学者提供了推荐的学习路径。将课程信息按照聚类算法生成标签云，点击课程列表后将对课程目录按顺序进行链接，形成学习路径效果。三、产品分析对所有课程介绍数据与目录进行抽取（资料、文本、标签等），形成关键词标签（转化成高维特征矩阵），按照聚类、降维算法将各细分领域关键词的按照领域分类聚集（分布在二维坐标系上以点的形式呈现）展示成标签云，再将标签云按层级展示由近及远，由浅入深展示（加上移动+缩放的形式）。在搜索框输入关键词匹配对应课程，点击课程便根据目录连接整个目录，形成学习路径。最后就是动画效果了，动画效果在知识星空中显得尤为重要。可以看出来整个产品的核心在于算法生成标签数据，与前端的动态交互。可简单看做是一个课程地图。没有什么高深的技术，确是一次大胆的应用探索。集智学院做这个产品有一定的优势  AI方向的培训机构，有技术资源。  场景足够细分，AI方向的培训课程信息。  数据量小，根据已有课程信息来制作。  数据获取容易，且是结构化的。  作为AI培训机构，可吸引潜在学员。四、 未来应用分析此版官网可在一维平面时代产生一定新鲜感和视觉冲击，毕竟PC互联网已有10年左右没有大的风格与技术的改变。这样的展示与交互方式比较新颖，虽然现在只是一个雏形，但依旧可以看出未来的无限可能。这样的可视化应用场景非常广泛，可以嵌入各种类型的网站，包括：大型门户、行业、交易、分类信息、功能型、娱乐型，可以充分体现出信息之间的层级关系，是知识图谱可视化的一个典型应用案例。我上一篇文章《知识图谱产品设计与Schema定义(KG-PM系列)》中提到一个新框架：图平台 + 算法平台 + 应用平台，想要了解的同学可具体查看。可以断言，知识图谱类型的产品在未来一定是遍地开花，可涉及到：展示型、应用型、分析型等。虽然现在这样类型的模式刚出现，但我相信人类的嫁接与复制能力，这种能力将会在未来展现的淋漓尽致。就知识图谱范畴内的展示、应用、分析等形式也可与手机、AR/VR、城市大脑等应用端、场景相结合，关于应用点可参照集智学园的做“知识星空”的优势，与业务场景及自身特点充分结合，同时也切记留给用户足够的过渡时间、与空间，可进行新老版本切换，避免用户流失。]]></content>
      <categories>
        
          <category> Works </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 产品设计 </tag>
        
          <tag> 知识星空 </tag>
        
          <tag> 集智学园 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[从技术实现到产品落地，“知识图谱”的未来还有多远？]]></title>
      <url>/ai/2019/03/28/KG-Tec-Product/</url>
      <content type="text"><![CDATA[  本文旨在通过技术实现流程与产品应用落地系统的介绍知识图谱的构建原理与发展方向，不涉及具体实现代码与算法，结合市面上现有的知识图谱应用做简单分析，错误或不当之处敬请指正。            您的浏览器不支持PDFs预览. 请下载该PDF后查看 : 点击下载PDF.]]></content>
      <categories>
        
          <category> AI </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 产品落地 </tag>
        
          <tag> 技术实现 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱产品设计与Schema定义(KG-PM系列)]]></title>
      <url>/works/2019/03/26/KG-Design-and-Schema-Design/</url>
      <content type="text"><![CDATA[背景与@伟哥微信认识一个多月了，两周前约见并对于知识图谱的一些问题和想法进行讨论，感谢伟哥带着电脑并向我演示了他们的产品。Tips：以下知识图谱（简称：KG）方向整个讨论以伟哥演示他们的产品为主线，围绕如何理解KG、to B KG产品设计策略、to B KG产品的发展方向三大块进行讨论交流。  对于如何理解KG，先来看学术界的定义：知识图谱是结构化的语义知识库，用于以符号形式描述物理世界中的概念及其相互关系，其基本组成单位是『实体-关系-实体』三元组，以及实体及其相关属性-值对，实体之间通过关系相互联结，构成网状的知识结构。疑问对于上述定义有两点疑问：1.上面所说的关系是底层存储时以关系的形式存储，还是上层以关系的形式展示/应用，到底什么样的图产品可以称之为知识图谱？2.KG的Schema如何设计，设计要点在哪，以及流程是什么样的？问题1方案当时并未对第1点达成一致，后来伟哥提到一个新框架：图平台 + 算法平台 + 应用平台是不是有点抽象，先来拆分一下：      图平台：所谓图平台就是把结构化、非结构化等数据以关系的形式进行存储，提供给其他应用平台提供数据支持。其实知识图谱就隐藏在图平台里，说白了知识图谱就是将各类源数据转换成以关系的形式进行存储，所谓数据的抽取、表示、建模、获取、融合、存储等等一系列操作都是进行数据组织的过程，无所谓是用关系型数据库还是用图数据库存储。        算法平台：算法平台是连接图平台与应用平台的中间件，数据组织的过程要用到算法，上层的查询推理也要用到算法，算法可以说贯穿整个从构建到应用的过程。        应用平台：应用平台就是常说的业务场景，包含通用场景与细分行业场景，产业界所有的技术都应以支撑业务为中心，应用平台侧重知识的查询与推理，用最简单、最直接的操作获得数据的商业价值。  思考  在了解了伟哥演示的产品后，发现一个问题，（要吐槽了，伟哥勿打），作为细分行业to B产品，该产品只是基于已有数据做了图的展示，进行数据的图关系展示、查询搜索、路径打点连接、数据分布展示等。用我原话说：“感觉这个产品没有灵魂，没有核心竞争力”。为什么这么说呢？是，该产品将数据的关系梳理清楚，合理展示，以及展示数据在各个区段内的分布，能在短时间内发现数据之间的关联，方便业务人员进行查看了解关系盲区、数据盲区，缺点是基于数据的各条线路过于宽泛、杂乱，不能帮助业务人员有针对性的分析发现问题、聚焦问题，为决策提供有效帮助，属于一个信息聚合产品。因此，伟哥这个KG产品只能算是图平台。我的想法是可以根据业务场景梳理思维逻辑，抽象出规则，根据现在的数据关系基于某条规则、某条线路进行推理，根据一些算法如聚类、分类、关键点发现等等去挖掘业务问题点，真正做到让数据支撑业务决策，属于基于图谱实现算法对标业务场景。这一层涉及到具体的业务应用，算是应用平台。发展  据我对国内业界的了解，大多KG公司对于构建图平台已经不是难点了，困难在于根据业务场景构建应用平台与算法平台，以及由应用平台与算法平台反哺图平台。下一步KG的发展方向应该聚焦基于图平台的应用平台设计。问题2  针对第2点，KG的Schema如何设计，设计要点在哪，以及流程是什么样的？KG的Schema相当于领域内的数据模型，属于KG的模式层，其实就是用来描述本体层(Ontology)。为KG设计Schema相当于为其建立本体(Ontology)，包括概念、概念层次、属性、属性值类型、关系、关系定义域（Domain）概念集以及关系值域（Range）概念集。Schema是用来规范KG的领域与描述对象，起到管理KG的作用，比如概念本身的属性可以直接传递到实例，不需要为实例重新定义属性(模式层的属性)，实例可不完全包含概念的属性。如：“公司”会有“注册日期”，但具体到某个实例如“腾讯”可以没有这个属性，但如果“腾讯”有“注册日期”这个属性，可以直接用概念“公司”中的“注册日期”作为属性KG的设计主要为满足业务需求与应用场景，业务需求与应用场景决定产品设计，图平台产品设计的基础任务又是定义Schema，其中产品经理的主要任务就是考虑Schema该如何构建。Schema定义是与业务强行绑定的，每个KG的实际情况都不尽相同，没有通用的标准与流程，希望可以从从别人的只言片语中得到些许灵感或方向。伟哥看法我觉得schema这部分分为两层，1.架构上的schema，2.是基于架构上的schema进行业务梳理的实例化，第一点我觉得和技术选型底层设计息息相关，毕竟谁家的schema样式结构都不一样，第二点我觉得是基于第一点进行的业务数据构建，这部分产品经理可以通过梳理业务数据进行实例构建，不清楚你提的是第一点还是第二点。可以说一个是系统Schema,一个是业务Schema 。系统Schema主要由架构师来定，从表设计到数据库的构建过程。伟哥认为：第一个是系统的schema构建，另一个是基于业务梳理的实例化展示，这里好像没有schema的事。画一个逗逗陪着我的看法  以下是简书作者：画一个逗逗陪着我的一些经验分享，原文地址：知识图谱基础（三）-schema的构建，整理过来以供参考。Schema定义1.构建域域（Domain）的概念在类型（type）之上，定义域时应尽量抽象，域与域之间尽量相互独立，不交叉，如省份就不可定义为域，考虑是否要把一个概念当做域时，主要看这个概念是否可继续向上抽象，省份之上地区、国家、洲等等，他们都属于地理位置域。2.确定域的类型确定KG的业务需求、应用场景，思考Schema的核心需求，基于需求，需要确定哪些概念？如：汽车领域，包括汽车品牌、车系、发动机、油耗等；NBA领域，包括球队、所属联盟、教练、球员等。针对不同的需求，需要在域下面定义不同的类型满足需求。3.确定属性可从两方面思考：1、以用户需求为出发点；2、以数据统计为证据；比如构建了足球领域的球队类型后，类型集合了所有的球队实体，从用户角度出发，需要关注哪些关系。Schema的确认流程1.需求划分将应用根据需求强弱将其划分，可分为：基础核心需求、Schema特色需求、惊喜性需求、系统扩展需求。基础核心需求：构建KG的Schema需要的完成的核心需求，其优先级最高。Schame特色需求：需求优先级不是最高，但能形成与竞品形成差异化。惊喜性需求：非基础核心需求，做了最好，不做也可以。扩展型需求：需要充分考虑产品未来业务变化，该类需求可大大改变Schema结构。2.列出功能点根据需求划分，列出功能点，对功能点进行优先级排期，并充分考虑扩展性与业务发展变化。3.转化查询结构对每个功能点进行梳理，列出要点、重点，将产品需求转化为查询结构，查询语句可以是对用户体验最重要的一环，是从用户输入到结构返回的整个过程。尽量避免其中的逻辑漏洞。4.转化为开发需求将构建好的Schema与产品文档找与开发探讨，开发同学对该方案进行工程实现、查询效率、计算量、实现周期等方面进行考虑，产品经理设计时更侧重从需求与功能的方面思考，双方进行合理评估才得出最优方案。结束所以这块的具体情况还不是很清楚，后续再来补充。  以上是近期对于知识图谱的一些思考与总结，知识图谱系列会持续更新，也会加大关注AI领域的其他产品设计。]]></content>
      <categories>
        
          <category> Works </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 产品设计 </tag>
        
          <tag> Schema </tag>
        
          <tag> 思考&amp;整理 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[医疗知识图谱问答系统探究（一）]]></title>
      <url>/works/2019/03/14/KnowladgeGraph-QA-system/</url>
      <content type="text"><![CDATA[1、项目背景为通过项目实战增加对知识图谱的认识，几乎找了所有网上的开源项目及视频实战教程。果然，功夫不负有心人，找到了中科院软件所刘焕勇老师在github上的开源项目，基于知识图谱的医药领域问答项目QABasedOnMedicaKnowledgeGraph。  项目地址：https://github.com/liuhuanyong/QASystemOnMedicalKG用了两个晚上搭建了两套，Mac版与Windows版，哈哈，运行成功！！！从无到有搭建一个以疾病为中心的一定规模医药领域知识图谱，以该知识图谱完成自动问答与分析服务。该项目立足医药领域，以垂直型医药网站为数据来源，以疾病为核心，构建起一个包含7类规模为4.4万的知识实体，11类规模约30万实体关系的知识图谱。 本项目将包括以下两部分的内容：基于垂直网站数据的医药知识图谱构建基于医药知识图谱的自动问答2、项目环境2.1 windows系统搭建中间有很多坑，且行且注意。配置要求：要求配置neo4j数据库及相应的python依赖包。neo4j数据库用户名密码记住，并修改相应文件。安装neo4j，neo4j 依赖java jdk 1.8版本以上：  jdk安装方法可参考：windows系统下安装JDK8，下载地址：[https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-windows-x64.exe][1]  安装neo4j可参考博文：windows安装neo4j，下载地址：[https://go.neo4j.com/download-thanks.html?edition=community&amp;release=3.4.1&amp;flavour=winzip][2]  安装python可参考：Windows环境下安装python2.7根据neo4j 安装时的端口、账户、密码配置设置设置项目配置文件：answer_search.py &amp;  build_medicalgraph.py (github下载项目时根据个人需要也可使用git)数据导入：python build_medicalgraph.py，导入的数据较多，估计需要几个小时。python build_medicalgraph.py导入数据之前，需要在该文件main函数中加入：启动问答：python chat_graph.py2.2 Mac系统mac本身自带python、java jdk环境，可直接安装neo4j图数据库，项目运行步骤与windows基本一样。问题解答：  安装过程中如遇问题可联系Wechat: dandan-sbb。2.3 Neo4j数据库展示2.4 问答系统运行效果3、项目介绍该项目的数据来自垂直类医疗网站寻医问药，使用爬虫脚本data_spider.py，以结构化数据为主，构建了以疾病为中心的医疗知识图谱，实体规模4.4万，实体关系规模30万。schema的设计根据所采集的结构化数据生成，对网页的结构化数据进行xpath解析。项目的数据存储采用Neo4j图数据库，问答系统采用了规则匹配方式完成，数据操作采用neo4j声明的cypher。项目的不足之处在于疾病的引发原因、预防等以大段文字返回，这块可引入事件抽取，可将原因结构化表示出来。3.1 项目目录.├── README.md├── __pycache__      编译结果保存目录│   ├── answer_search.cpython-36.pyc│   ├── question_classifier.cpython-36.pyc│   └── question_parser.cpython-36.pyc├── answer_search.py├── answer_search.pyc├── build_medicalgraph.py    知识图谱数据入库脚本├── chatbot_graph.py    问答程序脚本├── data│   └── medicaln.json  本项目的全部数据，通过build_medicalgraph.py导neo4j├── dict│   ├── check.txt    诊断检查项目实体库│   ├── deny.txt      否定词库│   ├── department.txt  医疗科目实体库│   ├── disease.txt    疾病实体库│   ├── drug.txt      药品实体库│   ├── food.txt      食物实体库│   ├── producer.txt    在售药品库│   └── symptom.txt    疾病症状实体库├── document│   ├── chat1.png    系统运行问答截图01│   ├── chat2.png      系统运行问答截图01│   ├── kg_route.png    知识图谱构建框架│   ├── qa_route.png    问答系统框架图├── img    README.md中的所用图片│   ├── chat1.png│   ├── chat2.png│   ├── graph_summary.png│   ├── kg_route.png│   └── qa_route.png├── prepare_data│   ├── build_data.py    数据库操作脚本│   ├── data_spider.py    网络资讯采集脚本│   └── max_cut.py      基于词典的最大向前/向后脚本├── question_classifier.py    问句类型分类脚本├── question_classifier.pyc    ├── question_parser.py    问句解析脚本├── question_parser.pyc3.2 知识图谱的实体类型            实体类型      中文含义      实体数量      举例                  Check      诊断检查项目      3,353      支气管造影;关节镜检查              Department      医疗科目      54      整形美容科;烧伤科              Disease      疾病      8,807      血栓闭塞性脉管炎;胸降主动脉动脉瘤              Drug      药品      3,828      京万红痔疮膏;布林佐胺滴眼液              Food      食物      4,870      番茄冲菜牛肉丸汤;竹笋炖羊肉              Producer      在售药品      17,201      通药制药青霉素V钾片;青阳醋酸地塞米松片              Symptom      疾病症状      5,998      乳腺组织肥厚;脑实质深部出血              Total      总计      44,111      约4.4万实体量级      3.3 知识图谱的实体关系类型            实体关系类型      中文含义      关系数量      举例                  belongs_to      属于      8,844      &lt;妇科,属于,妇产科&gt;              common_drug      疾病常用药品      14,649      &lt;阳强,常用,甲磺酸酚妥拉明分散片&gt;              do_eat      疾病宜吃食物      22,238      &lt;胸椎骨折,宜吃,黑鱼&gt;              drugs_of      药品在售药品      17,315      &lt;青霉素V钾片,在售,通药制药青霉素V钾片&gt;              need_check      疾病所需检查      39,422      &lt;单侧肺气肿,所需检查,支气管造影&gt;              no_eat      疾病忌吃食物      22,247      &lt;唇病,忌吃,杏仁&gt;              recommand_drug      疾病推荐药品      59,467      &lt;混合痔,推荐用药,京万红痔疮膏&gt;              recommand_eat      疾病推荐食谱      40,221      &lt;鞘膜积液,推荐食谱,番茄冲菜牛肉丸汤&gt;              has_symptom      疾病症状      5,998      &lt;早期乳腺癌,疾病症状,乳腺组织肥厚&gt;              acompany_with      疾病并发疾病      12,029      &lt;下肢交通静脉瓣膜关闭不全,并发疾病,血栓闭塞性脉管炎&gt;              Total      总计      294,149      约30万关系量级      3.4 知识图谱的属性类型            属性类型      中文含义      举例                  name      疾病名称      喘息样支气管炎              desc      疾病简介      又称哮喘性支气管炎…              cause      疾病病因      常见的有合胞病毒等…              prevent      预防措施      注意家族与患儿自身过敏史…              cure_lasttime      治疗周期      6-12个月              cure_way      治疗方式      “药物治疗”,”支持性治疗”              cured_prob      治愈概率      95%              easy_get      疾病易感人群      无特定的人群      3.5 问答项目实现原理本项目的问答系统完全基于规则匹配实现，通过关键词匹配，对问句进行分类，医疗问题本身属于封闭域类场景，对领域问题进行穷举并分类，然后使用cypher的match去匹配查找neo4j，根据返回数据组装问句回答，最后返回结果。  问句中的关键词匹配：  根据匹配到的关键词分类问句  问句解析  查找相关数据  根据返回的数据组装回答3.6 问答系统支持的问答类型            问句类型      中文含义      问句举例                  disease_symptom      疾病症状      乳腺癌的症状有哪些？              symptom_disease      已知症状找可能疾病      最近老流鼻涕怎么办？              disease_cause      疾病病因      为什么有的人会失眠？              disease_acompany      疾病的并发症      失眠有哪些并发症？              disease_not_food      疾病需要忌口的食物      失眠的人不要吃啥？              disease_do_food      疾病建议吃什么食物      耳鸣了吃点啥？              food_not_disease      什么病最好不要吃某事物      哪些人最好不好吃蜂蜜？              food_do_disease      食物对什么病有好处      鹅肉有什么好处？              disease_drug      啥病要吃啥药      肝病要吃啥药？              drug_disease      药品能治啥病      板蓝根颗粒能治啥病？              disease_check      疾病需要做什么检查      脑膜炎怎么才能查出来？              check_disease      　检查能查什么病      全血细胞计数能查出啥来？              disease_prevent      预防措施      怎样才能预防肾虚？              disease_lasttime      治疗周期      感冒要多久才能好？              disease_cureway      治疗方式      高血压要怎么治？              disease_cureprob      治愈概率      白血病能治好吗？              disease_easyget      疾病易感人群      什么人容易得高血压？              disease_desc      疾病描述      糖尿病      4、项目总结基于规则的问答系统没有复杂的算法，一般采用模板匹配的方式寻找匹配度最高的答案，回答结果依赖于问句类型、模板语料库的覆盖全面性，面对已知的问题，可以给出合适的答案，对于模板匹配不到的问题或问句类型，经常遇到的有三种回答方式：  给出一个无厘头的答案；  婉转的回答不知道，提示用户换种方式去问；  转移话题，回避问题；  例如，本项目中采用了婉转的方式回答不知道：基于知识图谱的问答系统的主要特征是知识图谱，系统依赖一个或多个领域的实体，并基于图谱进行推理或演绎，深度回答用户的问题，基于知识图谱的问答系统更擅长回答知识性问题，与基于模板的聊天机器人有所不同的是它更直接、直观的给用户答案。对于不能回答、或不知道的问题，一般直接返回失败，而不是转移话题避免尴尬。整个问答系统的优劣依赖于知识图谱中知识的数量与质量。也算是利弊共存吧！知识图谱图谱具有良好的可扩展性，扩展了知识图谱也就是扩展了问答系统的知识库。如果问句在射程范围内，可轻松回答，但如果不幸脱靶，则体验大打折扣。从知识图谱的角度分析，大多数知识图谱规模不足，主要原因还是数据来源以及技术上知识的抽取与推理困难。]]></content>
      <categories>
        
          <category> Works </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 问答系统 </tag>
        
          <tag> 医疗诊断 </tag>
        
          <tag> 项目实战 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[还是有必要聊聊，To B 与 To C产品的区别]]></title>
      <url>/works/2019/03/03/ToB-and-ToC/</url>
      <content type="text"><![CDATA[  昨天，在与北京知识图谱@吴刚老师的聊天中，被问到：“ To B 与 To C产品的区别的在哪? ”。对于这问题，做为PM，我确实缺少对这方面系统的分析与理解，而且缺少条理性；知道是知道，但并不代表明白、不代表可清楚的说出个子丑寅卯，所以当时的回答也就是“goushi一坨”。趁周末，仔细琢磨下。1、什么是To B 与To B产品To B，也称『2B』，顾名思义 To Business，也就是面向企业客户，为企业客户提供产品或服务。To C，也称『2C』，To Consumer，即面向终端用户，直接为广大消费者与用户提供产品或服务。2、目标对象的诉求与特点To B 面向企业客户，客户是理性的，这类对象有清晰、明确的需求，而这些需求为解决企业中真实存在的问题，或者配合企业战略而出现，产品经理需将这些需求转化为产品，以满足企业客户的目标。客户采购的特点主要有：      采购金额大，重复消费可能性大；        项目进展周期长，对接过程复杂；        采购对象多，参与决策者复杂；        销售方式一对一，强化客户关系很重要；        要求服务专业化；  客户会对服务者从各方面进行理性的选择与价值判断。此处不做过多细节的讨论。To C面向终端用户，用户是感性的，用不用或买不买该产品，凭的是个人的喜好和欲望的冲动。从心理学上讲，人的欲望是无尽的。个人认为：人的欲望是推动社会发展的根本因素。这类需求需要产品经理去挖掘，去创造，去迎合用户的心理诉求。普通消费者（用户）的购买或使用决策因素有：      个人因素：包括年龄、性别、收入、受教育程度、家庭情况、婚姻情况、职业等；        社会因素：包括文化观念、种族、社会阶层、传统习俗、参考群体、家庭影响等；        心理因素：包括动机、认知、学习、态度等；  因此，To B产品更要侧重关注产业链及公司的发展状况与所处的行业位值，深入甲方、了解甲方背后真正的诉求，关注产品的信息化、结构化与流程化，让产品高效完美的解决甲方的问题，实现产品的价值，对于产品经理来说需要强大的思考、逻辑分析与问题的描述能力，以及项目管理能力，把握公司资源，在有效的时间节点内让产品落地。而To C产品需上可洞观行业市场，下可懂调研、做访谈、分析。对需求和使用场景敏感，做好功能设计，熟悉用户体验、懂审美。两种产品对于PM都需要能沟通、擅协作，懂管理，熟悉运营与营销。3、产品的特点两种产品最大的特点就是To B注重更产品价值，To C则偏向用户体验。下面从三个方面进行细节讨论：a、设计逻辑基于To B产品的特点，在流程设计时更注重逻辑完整、流程高效，在构建设计时，要做到胸有成竹，梳理完成后与用户做明确确认。对于To C产品要做到让用户“爽”，让用户开心，以小白角度站在用户立场去分析、思考，To C产品要逻辑简单。b、学习成本To B产品确实很难，一般属于定制化开发，成本大、难迁移，避免不了功能的堆砌，比如阿里云，对于企业或专业用户尚且需要操作手册或说明，学习成本过高，任务流程多样化、分岔口较多，需要大量的人工客服导致成本过高，虽然已经配备了智能客服，但是客户的问题千变万化难以把控。很多To B 产品需要进行人员培训与讲解、售前、售后、实施等等，一系列动作下来，客户才勉强可以使用。To C不需要培训与使用说明即可使用，目标是上手即用，最好是没有（当然很难），做到避免用户流失，目标明确、容易靠拢。c、业务理解做To B产品需要深入理解客户所在行业，企业内部组织架构、企业服务流程，理解和实施客户需求，帮助企业构建系统，将线下流程线上化，强调构建一个业务生态系统，强调从客户想法或目标提炼需求，配合企业客户战略。To C与To B不同的是PM本身就是用户，例如：抖音、微信、快手，侧重理解用户人群的心理模型、工作状态、所在场景、喜怒哀乐，深入到用户群体中去，从用户群中来，对用户群做跟踪访谈、用户深访、任务流程记录、用户痛点、痒点、兴奋点记录。带给用户最真实的感受、体验。4、产品的商业模式a、收费与免费To B 产品流程复杂需要售前、开发、部署、实施、使用，产生价值的周期长，如阿里云，需要配备各种团队，对内的（开发、运维、产品等）、对外的（售前、售后、客服等），每台服务器、每个域名、每种技术服务，看起来成千上万很贵，但是为企业节省了各种人类、机器的购买、提供安全、稳定的服务，所以企业还是愿意为其付费的，提高了企业的投入产出比，属于物有所值，还有ERP、OA等系统，一旦实施成功，为企业带来库存、生产、执行流程方面的提升其实百万、千万的价值。To C产品很容易体现，举办营销、打折等活动即可让用户使用或购买、如电商的双11、打车或外卖的补贴大战，进行口碑、品牌营销。商业模式较简单，衡量参数大多是：流量、下单率、广告营收等。b、个性化与大众化To B产品针对不同客户、不同行业，需要做定制开发，业务模式、商业模式创新非常重要，需深入理解与创新。To C产品能打入市场主要满足了某一类用户的某类需求、产品对外公开，抄袭严重，功能都差不多，只要能被市场接纳，后面就会出现大批同类产品，用户获取与流失同样快速。c、销售与营销To B的市场小，目标客户少，需要销售单点攻破，购买者是老板、领导或业务直接负责人，款项业务需要漫长的流程，营销难统一进行目标客户穿透，通常进行电话销售、登门拜访，需专业人员漫长的客户驱动，也就是地推。To C面向广大终端用户，基数大、覆盖广，百万级、千万级、甚至亿级爆红全国、全球，靠营销活动、广告计划，进行大批量炒作、运营、跟风，总之通用的成功衡量标准是：下载量、PV、UV、转发等等。d、产品生命周期To B产品面向专业人士，门槛高，入行难，执行流程漫长，客户更换成本高，但之后的运维、升级都是稳赚收益，功能设计严谨，包括：角色、权限、安全，部门协作，模块衔接。就目前而言，To B较To C而言发展还是较缓慢，缺少竞品、缺少成熟的方法论、且大多属于公司机密、产品设计属于封闭式，业务、功能、技术等方面无法聚焦，加上设计难度高，体验相对较差。To C产品时间短、任务重、侧重市场占有率，用户群基数，需要快速迭代开发，保证功能与设计领先，一般晚那么几个月上线，如果没有满足用户惊喜性需求，一般就没什么突破了，竞争惨烈，需密切关注市场动态，大多产品年前还很火，年后就死掉了，补贴大战比比皆是。 尼尔森大数据：十个新品九个死！5、结束语两种类型的产品，无论哪个都需关注用户痛点、用户需求，更需要关注到底什么是用户痛点？什么是用户需求，我们是为什么样的用户、客户解决什么样的需求？前老板说过：不能一直埋头干，要是不是抬起头看一看前方，有没有走偏，有没有南辕北辙，有时候你会发现你做着做着，产品倒是做出来了，行业就没了。社会的发展总是日新月异，做一个好产品哪有那么简单，商场如战场，天时、地理、人和缺一不可，套用《安娜卡列尼娜》中的一句话：成功的产品总是相同的，失败的产品各有各的原因。]]></content>
      <categories>
        
          <category> Works </category>
        
      </categories>
      <tags>
        
          <tag> PM </tag>
        
          <tag> 产品思维 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[49份知识图谱行业大会报告整理]]></title>
      <url>/resources/2019/01/28/49-Knowledge-Graph-report/</url>
      <content type="text"><![CDATA[  以下49份知识图谱行业报告是本人在学习中收集整理，分享出来，以飨大家。Tips:  如有内容涉及您的权益，请联系我，立即删除。1.2013-【百度-NLP Techniques in Knowledge Graph.pdf】2.2013-【李娟子-跨语言知识图谱构建.pdf】3.2013-【朱小燕-信息获取与知识图谱.pdf】4.2013-【刘康-中文知识图谱体系、获取与服务.pdf】5.2013-【阿里-电子商务语义库.pdf】6.2013-【搜狗-面向知识图谱的搜索技术.pptx】7.2013-【韩先培-面向中文知识图谱构建的知识融合与验证.pdf】8.2014-【出门问问-知识图谱自动问答.pdf】9.2014-【漆桂林-知识本体推理.pdf】10.2014-【科大讯飞-从应用角度来看知识图谱的价值和挑战.pdf】11.2014-【李娟子-知识图谱大数据语义链接的基石.pdf】12.2015-【陈华均-从数据互联到知万物互联.pdf】13.2015-【Estevam R-Building a Knowledge Graph by Reading the Web.pdf】14.2015-【秦兵-《大词林》中实体上位词获取及层次化构建方法.pdf】15.2015-【李娟子-特定领域知识图谱构建初探.pdf】16.2015-【鲍捷-知识图谱的知识表现方法回顾与展望.pdf】17.2015-【Jianyong Wang-Entity Linking wih a Knowledge Base for Heterogenous Data.pdf】18.2015-【Gerard de Melo-The Future of Knowledge Graphs - Moving beyond Simple Collections of Facts.pdf】19.2015-【黄智生-海量语义数据处理与知识服务.pdf】20.2015-【刘知远-大规模知识图谱表示学习的趋势与挑战.pdf】21.2015-【赵军-深度问答技术.pdf】22.2015-【富士通-基于LOD技术的知识优化和知识表示.pdf】23.2016-【图灵机器人-知识图谱中的自动问答.pdf】24.2016-【Jeffz-Testing and Assessing the Quality of Knowledge Graphs.pdf】25.2016-【云知生-从语义到语用.pdf】26.2016-【鲍捷-精益知识图谱方法论.pdf】27.2016-【富士通-KGinJapan.pdf】28.2016-【Sheng-Chuan Wu-Analytic knowledge graph for healthcare.pdf】29.2016-【Dekang Lin-question answering and knowledge graph.pdf】30.2016-【发现数据之美-大规模知识图谱的构建及应用.pdf】31.2016-【TRS水晶球-基于动态本体的知识管理实例.pdf】32.2016-【陈培华-小i机器人在中文语义开放平台的研究与进展.pdf】33.2016-【海云数据-图数据可视化辅助关联分析实践.pdf】34.2016-【王忠远-Understanding Short Texts.pdf】35.2017-【丁力-cnschema-.pdf】36.2017-【刘康-知识图谱导论.pdf】37.2017-【CCKS交流-语音交互中的自然语言处理技术.pdf】38.2017-【CCKS2017-会议手册.pdf】39.2017-【王昊奋-知识图谱实践.pdf】40.2017-【邱锡鹏-知识获取方法.pdf】41.2017-【鼎复数据-金融知识图谱介绍.pdf】42.2017-【邹磊-基于图的RDF数据管理.pdf】43.2017-【丁力-openkg进展报告.pdf】44.2018-【腾讯叮当-腾讯叮当对话系统实践.pdf】45.2018-【智通科技-勘探开发知识图谱计算研究及应用.pdf】46.2018-【思必驰_启发式对话中的知识管理.pdf】47.2018-【鲍捷-金融知识图谱的发展近况和应用回顾.pdf】48.2018-【云知声-大规模医疗知识图谱构建与应用.pdf】49.2019-【AMiner-2019年第二期《人工智能之知识图谱》】百度网盘下载：https://pan.baidu.com/s/1I1RkyINvQzBm2av1rj-6xQ备份下载地址: https://pan.baidu.com/s/1i6nkXNVoEENn-B06Tf5ssA再来分享清华大学AMiner的各种AI报告链接：https://www.aminer.cn/research_report/articlelist需要的请前往下载页面:]]></content>
      <categories>
        
          <category> Resources </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> 行业大会 </tag>
        
          <tag> PDF报告 </tag>
        
          <tag> 资源整理 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[知识图谱发展的难点与构建行业知识图谱的重要性]]></title>
      <url>/works/2018/12/10/Development-Knowledge/</url>
      <content type="text"><![CDATA[  知识图谱又称为科学知识图谱，在图书情报界称为知识域可视化，或知识领域映射地图，用来显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及载体，挖掘、分析、构建、绘制和显示知识及他们互相之间的关系。概述尽管人工智能依靠机器学习和深度学习取得了快速进展，但这些都是弱人工智能，对于机器的训练，需要人类的监督以及大量的数据来喂养，更有甚者需要人手动对数据进行标记，对于强人工智能而言，这是不可取的。要实现真正的类人智能，机器需要掌握大量的常识性知识，以人的思维模式和知识结构来进行语言理解、视觉场景解析和决策分析。什么是知识图谱百度百科定义：知识图谱又称为科学知识图谱，在图书情报界称为知识域可视化，或知识领域映射地图，用来显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及载体，挖掘、分析、构建、绘制和显示知识及他们互相之间的关系。为什么需要知识图谱      知识图谱把复杂的知识领域及知识体系通过数据挖掘、信息处理、知识计量和图形绘制显示出来，表示该领域的发展动态及规律，为该领域的研究提供全方位、整体性、关系链的参考。        知识图谱是智能社会的重要生产资料，如果把人工智能比作一个“大脑”，那么深度学习是“大脑”的运转方式，知识图谱则是“大脑”的知识库，而大数据、GPU并行计算和高性能计算等支撑技术就是“大脑”思维运转的支撑。        知识图谱是真实世界的语义表示，其中每一个节点代表实体连接节点的边则对应实体之间的关系异构数据通过整合表达为知识，图的表达映射了人类对世界的认知方式，知识图谱非常适合整合非结构化数据从零散数据中发现知识，从而帮助组织机构实现业务智能化。  知识图谱的诞生当你对陌生领域进行学习时，无法把握要点及整体框架，以至于检索效率低、入门无道时，知识图谱应运而生。自2012年5月，Google将知识图谱应用到其搜索引擎，以提升其搜索服务能力，将各种渠道收集而来的相关信息展示在搜索结果旁的信息框中，以结构化模块形式提供给用户。主要从三个方面提升了其搜索效果：      语言的多义性，展示差异化结果，缩小搜索范围。        信息的关联性，理解总结信息间的关联，理解事物的相关性。        体系的广泛性，构建完整的知识体系，发现新的事实或新的联系，促进一系列全新的搜索查询。  知识图谱的原理知识图谱以结构化数据处理，运用三元体，点、线、面的方式表示本体之间的关系，利用关系来组织所有的对象（实体），形成有向图结构。所谓知识，指的是点或边对应的信息。知识图谱以语义分析技术为基础，以模型为核心，基于数据，利用深度神经网络、NLP框架语义理解等智能处理技术对输入的字、词、篇章进行多层次、多维度的信息分析，提供可远程调用的实体抽取、关系抽取和属性抽取等算法服务接口能力。达到构建多领域知识图谱平台，服务不同行业和应用场景。  构建知识图谱是一个迭代更新的过程，根据知识获取的逻辑，每一轮迭代可分为三个阶段：      信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；        知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如：某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；        知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。  知识图谱的发展方向  “纯粹的通用型人工智能没有任何意义，人工智能未来的方向一定是行业化。”因此行业知识图谱的构建显得尤为重要，首先，构建行业知识图谱系统应以海量数据汇聚融合、快速感知和认知、强大的分析和推理、自适应与自优化和行业智能决策为导向。下面介绍一下通用知识图谱与行业知识图谱构建的区别：通用知识图谱以互联网开放数据为基础，如维基百科或社区众包为主要来源，逐步扩大规模。以三元组事实型知识为主，较多的面向开放域的Web抽取，对知识抽取的质量有一定容忍度，以知识融合提升数据质量，应用领域主要在搜索和问答方面，对推理要求较低。如：百度、谷歌、雅虎等等行业知识图谱以领域或企业内部的数据为主要来源，通常要求快速扩大规模，构建行业壁垒，知识结构更加复杂，通常包含本体工程和规则型知识。知识抽取的质量要求很高，较多的依靠从企业内部的结构化、非结构化以及半结构化数据进行联合抽取需要依靠人工进行审核校验，来保证质量。通常需要融合多来源的领域是数据扩大规模的有效手段。应用形式更加全面，除搜索问答外，还包括决策分析、业务管理等，并对推理的要求更高，并有较强的可解释性要求。主要领域有电商、金融、农业、安全、医疗等等.大数据的采集分析和计算力已经不再是阻碍，难点在于算法背后的知识图谱构建。实际中，企业数据和业务变化灵活，因此数据源、数据结构、数据内容随时会发生变动，对业务的理解以及对数据的解读也随之发生变化。因此，建立实时敏捷、灵活可扩展、智能自适应的动态知识图谱尤为重要。行业知识图谱的重要性由于IT时代的快速发展，形成了数据的聚集。促进了正在来临DT时代，数据与算法作为基础为知识图谱的构建提供了新的可能性，而知识图谱作为AI的支撑基础，虽然发展缓慢，却是人工智能的必经之路。由于其在语义搜索、智能问答、数据分析、自然语言处理、视觉理解、物联网设备已展现出越来越大的价值。比如：上一篇文章中提到的基于语音对话系统构建的机器人，要想机器人好玩有趣，就需要建立通用知识图谱，使机器人具有强大的逻辑，了解人与人关系，人与物的关系，人的属性、物的属性，理解人类世界的关系链，灵活应对用户的各种聊天需求，使机器具有类人智能。而行业知识图谱则帮助用户解答关于行业的任务型需求，辅助用户决策，反向帮助人类学习。如今，人工智能属于发展初期，主要以技术驱动行业发展，属于拿着锤子找钉子的时期，企业在以行业+AI为核心的同时，也应重视行业+知识图谱。因为未来技术肯定不是公司的核心竞争力，而多年积累的行业数据才是壁垒。数据养育AI，AI反哺数据。行业知识图谱在很多领域已经有了很好的应用。例如：天眼查、企查查的企业知识图谱，数据包括：企业基础数据、投资关系、任职关系、企业专利数据、企业招标数据、企业招聘数据、企业诉讼数据、企业失信数据、企业新闻数据；利用知识图谱融合以上数据，制作企业知识图谱，并在企业知识图谱之上利用图谱特性，针对金融业务场景做一系列应用。（1）企业风险评估基于企业基础信息、投资关系、诉讼、失信等多维度关联数据，利用图计算等方法构建科学、严谨的企业风险评估体系，有效规避潜在的经营风险与资金风险。（2）企业社交图谱基于投资、任职、专利、招标股、涉诉关系以目标企业为核心向外层扩散，形成一个网络关系图，直观立体展现企业关联。（3）企业掌权人基于股权投资关系寻找持股比例最大的股东，最终追溯至自然人或国有资产管理部门。（4）企业关联路径基于股权、任职、专利、招标股、涉诉关系形成的网络关系中、查询企业之间的最短路径，衡量企业之间的关系密切度。（5）企业的发展历程基于企业知识图谱中的投融资事件的时间顺序，记录企业的发展历程。（6）企业信息的智能问答用户通过语音输入，系统通过语音输出给用户想要的答案。就写这么多，希望能带给各位一些思考。关于医疗知识图谱、金融知识图谱、农业知识图谱的应用场景请自行查询吧。]]></content>
      <categories>
        
          <category> Works </category>
        
      </categories>
      <tags>
        
          <tag> 知识图谱 </tag>
        
          <tag> AP-PM </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[推荐好诗《走在自己的时区里》]]></title>
      <url>/lifes/2018/11/28/Walking-in-your-own-time-zone/</url>
      <content type="text"><![CDATA[  在时间上，纽约走在加州前面三个小时，New York is 3 hours ahead of California,  但加州并没有变慢。but it does not make California slow.  有人22岁就毕业了，Someone graduated at the age of 22,  但等了五年才找到好工作！but waited 5 years before securing a good job!  有人25岁就当上了CEO，Someone became a CEO at 25,  却在50岁去世了。and died at 50.  也有人直到50岁才当上CEO，While another became a CEO at 50,  最后活到90岁。and lived to 90 years.  有人依然单身，Someone is still single,  而别人却早已结婚。while someone else got married.  奥巴马55岁退任总统，Obama retires at 55,  而川普却是70岁才开始当。but Trump starts at 70.  世上每个人都有自己的发展时区。Absolutely everyone in this world works based on their Time Zone.  身边有些人看似走在你前面，People around you might seem to go ahead of you,  也有人看似走在你后面。some might seem to be behind you.  但其实每个人在自己的时区有自己的步程。But everyone is running their own RACE, in their own TIME.  不用嫉妒或嘲笑他们。Don’t envy them or mock them.  他们都在自己的时区，你在你的！They are in their TIME ZONE, and you are in yours!  所以，别放松。So, Never Give up  你没有落后，You’re not LATE.  你没有领先。You’re not EARLY.  在命运为你安排的属于你自己的时区里，一切都非常准时。You are very much ON TIME, and in your TIME ZONE Destiny set up for you.  好，别忘了危机与奋斗Keep fighting and stay alert, no matter how good;  难，别忘了梦想与坚持Keep dreaming and carry on, no matter how hard;  忙，别忘了读书与锻炼Keep reading and excersing, no matter how busy;  人生，就是一场长跑Life is a long run。]]></content>
      <categories>
        
          <category> Lifes </category>
        
      </categories>
      <tags>
        
          <tag> Lifes </tag>
        
          <tag> 吾日三省吾身 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[使用GitHub Pages与Jekyll搭建免费博客]]></title>
      <url>/blog/2018/10/23/GitHub-Pages-Jekyll-Blog/</url>
      <content type="text"><![CDATA[  你好，欢迎来到阿拉灯神丁Vicky的个人博客本博客所用工具介绍  服务器托管: GitHub Pages  客生成工具: Jekyll  Jekyll Schemes:  Mist  评论功能: gitalk  自定义域名: 在阿里云买的域名。当然，也可通过此链接购买自己的服务器  使用Cloudflare免费对博客进行加速，并且可加SSL,使用https协议。O(∩_∩)O哈哈~  如需使用可参考文章：Github Pages 免费使用 SSL 以及 CDN 加速  如需有针对性的优化博客访问速度，查看哪些外链拖慢了你的网站，可使用：Cloudflare加速优化测试，输入你的网站地址可获得测试报告。  博客后台管理授权Prose.io去管理博客，其简单好用的特点，让人爱不释手，喜欢玩博客的朋友们可以试试！好了总算搞完了。有问题的同学可以留言咨询。欢迎Fork.GitHub pages博客发布流程更新本地博客git pull                                  #从GitHub更新本地博客代码MWeb写作command + E切换至“外部模式”，command + L切换至“文档库模式”本地启动jekyll服务bundle exec jekyll serve                  #启动本地jekyll服务查看博客、文章效果打开链接🔗http://127.0.0.1:5000                     #浏览器访问本地jekyll博客Jekyll站点部署到Github pages(线上环境)git add --all                             #添加到暂存区git commit -m "提交jekyll默认页面"          #提交到本地仓库git push origin master                    #线上的站点是部署在master下面的等待几分钟，Github有一定的时间缓存…MWeb添加GitHub为图床为什么需要使用PicBed4MWebGithub需要用PUT方法提交文件，而MWeb只能使用POST方法，所以就需要本地启动一个服务（PicBed4MWeb），接受请求，转换后转发给github。安装PicBed4MWeb项目  下载PicBed4MWeb至本地: git clone https://github.com/gaopeng-hz/PicBed4MWeb.git  安装依赖: npm install  修改配置文件config.json:修改配置参考:    "repo": "gaopeng-hz/images",  // 仓库名称"token": "xxxx",  // token，不能公开，获取方式参考上面那篇文章"port": 8081,  // node服务器监听端口，默认8080"url": "/upload"  // 服务上传url，默认/upload        手动启动项目目录下node index.js启动服务，终端窗口不能关闭。    MWeb配置    打开 MWeb 设置界面 - 发布服务 - 图床 - 自定义  点击验证，上传图片，若出现以下提示则成功:    设置开机启动服务    设置后台运行服务: nohup node index.js &amp;  配置后台启动服务: 项目根目录下新建run.sh文件，并添加以下内容     #!/usr/bin/env bash # 修改成自己的目录 nohup node /你的路径/PicBed4MWeb/index.js &amp;        给run.sh赋权限: sudo chmod 777 run.sh  将run.sh文件打开方式修改为终端.app  添加开机启动: 系统偏好设置-用户与群组-登录项-添加run.sh文件即可    扩展内容    查询端口: lsof -i :8100  关闭进程，PID 替换为查询的: kill -9 PID  查询服务 PID: ps | grep index.js问题集锦本地jekyll查看与实际效果不一致由于长期未更新本地jekyll及其依赖包，导致本地jekyll查看效果与实际效果不一致，参考更新Jekyll。bundle update jekyll                      #更新jekyll更新bundle，非常慢，因为Gemfile.lock固定了gem源：GEM  remote: https://rubygems.org/那么修改镜像：bundle config mirror.https://rubygems.org https://gems.ruby-china.com修改完镜像，升级bundle，中间需要输入密码bundle update升级完，运行bundle exec jekyll serve安装Homebrew  Homebrew是Mac OS 不可或缺的套件管理器 —- Homebrew官方Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。Homebrew官方指定的安装方法将以下命令粘贴到终端：/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"但这种方法并不适用国内的Mac用户，因为网络资源的原因，电脑下载是龟速，实在是无法忍受，不信你自己试试就知道了。解决下载慢有两个办法：  替换镜像源，将下载资源改为国内镜像资源即可（推荐）  科学上网，通过全局代理来进行安装，也是解决网络问题的一种方法（不推荐）使用国内镜像资源/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"可以选择:1.中科大下载源，如图，然后根据提示输入开机密码，（这里需要提示下，输入密码的时候，光标是不移动的，保护机制，不用管，输入完直接回车键即可)本地运行bundle exec jekyll serve报错本地运行bundle exec jekyll serve命令启动jekyll时，出现以下错误:Could not find commonmarker-0.17.13 in any of the sources并提示运行bundle install,执行后报错：An error occurred while installing commonmarker (0.17.13), and Bundler cannot continue.Make sure that `gem install commonmarker -v '0.17.13' --source 'https://rubygems.org/'` succeeds before bundling.In Gemfile:  github-pages was resolved to 192, which depends on    jekyll-commonmark-ghpages was resolved to 0.1.5, which depends on      jekyll-commonmark was resolved to 1.2.0, which depends on        commonmarker提示执行gem install commonmarker -v '0.17.13' --source 'https://rubygems.org/',执行结果：Building native extensions.  This could take a while...ERROR:  Error installing commonmarker:        ERROR: Failed to build gem native extension.    current directory: /Library/Ruby/Gems/2.3.0/gems/commonmarker-0.17.13/ext/commonmarker/System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/bin/ruby -r ./siteconf20181112-6105-u9aca2.rb extconf.rbcreating Makefilecurrent directory: /Library/Ruby/Gems/2.3.0/gems/commonmarker-0.17.13/ext/commonmarkermake "DESTDIR=" cleancurrent directory: /Library/Ruby/Gems/2.3.0/gems/commonmarker-0.17.13/ext/commonmarkermake "DESTDIR="make: *** No rule to make target `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/include/ruby-2.3.0/universal-darwin16/ruby/config.h', needed by `arena.o'.  Stop.make failed, exit code 2Gem files will remain installed in /Library/Ruby/Gems/2.3.0/gems/commonmarker-0.17.13 for inspection.Results logged to /Library/Ruby/Gems/2.3.0/extensions/universal-darwin-16/2.3.0/commonmarker-0.17.13/gem_make.out看报错信息可能是由于系统ruby环境和jekyll之间的一些分歧造成的，最简单的解决方法是创建一个新的环境。使用rvm来管理ruby版本，以避免删除系统ruby并破坏您的操作系统。  RVM是一个命令行工具，它允许轻松地安装、管理和使用从解释器到多个ruby环境。  使用Ruby原因：          虽然 macOS 自带了一个 ruby 环境，但是是系统自己使用的，所以权限很小，只有 system。而/Library目录是root权限，所以很多会提示无权限。      使用自带ruby更新,管理不方便      一系列无原因的报错      安装RVM  下载并安装: curl -L https://get.rvm.io | bash -s stable  载入RVM环境: source ~/.rvm/scripts/rvm  查看RVM版本: rvm -v  更新RVM版本: rvm get stableRVM安装Ruby环境  列出已知的Ruby版本: rvm list known  查看当前Ruby版本: ruby -v  安装Ruby版本: rvm install 2.7.0  将指定版本设置为系统默认版本: rvm use 2.7.0 --default  查看Ruby版本: ruby -v安装完成之后更新jekyll环境  安装bundler: gem install bundler  安装jekyll: gem install jekyll  安装项目依赖的所有gem包: bundle install升级完，运行bundle exec jekyll serve更新日志  创建时间：2018-2-27  更新时间：2020-12-13]]></content>
      <categories>
        
          <category> Blog </category>
        
      </categories>
      <tags>
        
          <tag> 博客搭建 </tag>
        
          <tag> GitHub Pages </tag>
        
          <tag> Jekyll </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
